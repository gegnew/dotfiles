{"version":3,"file":"popup/main.js","mappings":"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F,MAEhB85C,QAAQvwC,MAAMX,IAOpB8zF,KAAKC,EAAQ,WACNj6F,KAAKs5F,UAAUtrE,IAAIisE,IACtBj6F,KAAKs5F,UAAUltF,IAAI6tF,EAAOC,MAI9BC,QAAQF,EAAQ,WACd,MAAMG,EAAUF,GAAOl6F,KAAKs5F,UAAU5pE,IAAIuqE,IAG1C,OAFAj6F,KAAKs5F,UAAU1/D,OAAOqgE,GACtBj6F,KAAKw5F,MAAMJ,GAAaM,KAAM,GAAGO,MAAuB,IAAbG,EAAQ,GAAYA,EAAQ,GAAK,SACrEA,G,gBCpEJ,MAAMC,GAAkB,CAC7B,SACA,UACA,YACA,QACA,UACA,UACA,SACA,OACA,WACA,WACA,WACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,WACA,UACA,OACA,UACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,OACA,UACA,YACA,WACA,WACA,UACA,YACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,SACA,QACA,YACA,WACA,SACA,UACA,SACA,SACA,WACA,QACA,SACA,YACA,YACA,YACA,YACA,YACA,OACA,UACA,SACA,SACA,QACA,YACA,SACA,QACA,UACA,QACA,WACA,UACA,YACA,QACA,YACA,YACA,SACA,WACA,YACA,UACA,QACA,OACA,OACA,OACA,MACA,OACA,YACA,QACA,YACA,QACA,UACA,UACA,YACA,QACA,QACA,YACA,WACA,SACA,QACA,QACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,QACA,QACA,YACA,QACA,WACA,UACA,WACA,WACA,OACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,WACA,YACA,YACA,WACA,YACA,YACA,SACA,YACA,YACA,SACA,UACA,UACA,WACA,OACA,QACA,QACA,QACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,UACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,YACA,YACA,WACA,QACA,YACA,QACA,QACA,WACA,YACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,YACA,WACA,SACA,WACA,WACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,SACA,UACA,QACA,QACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,WACA,QACA,SACA,UACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,QACA,YACA,YACA,UACA,QACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,WACA,QACA,OACA,WACA,YACA,YACA,WACA,OACA,QACA,WACA,WACA,QACA,QACA,YACA,UACA,WACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,OACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,QACA,MACA,SACA,YACA,SACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,YACA,SACA,WACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,YACA,SACA,WACA,QACA,OACA,WACA,OACA,SACA,YACA,UACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,QACA,WACA,YACA,SACA,YACA,SACA,SACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,UACA,WACA,QACA,WACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,SACA,QACA,OACA,OACA,SACA,WACA,SACA,SACA,WACA,YACA,YACA,WACA,SACA,SACA,YACA,WACA,WACA,UACA,YACA,WACA,WACA,YACA,UACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,YACA,SACA,WACA,WACA,YACA,WACA,QACA,WACA,YACA,SACA,QACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,UACA,SACA,SACA,YACA,UACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,QACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,SACA,YACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,WACA,UACA,WACA,SACA,UACA,SACA,OACA,YACA,UACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,OACA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,YACA,WACA,YACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,YACA,QACA,YACA,YACA,QACA,WACA,YACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,UACA,UACA,WACA,SACA,OACA,WACA,QACA,WACA,UACA,WACA,OACA,OACA,WACA,WACA,UACA,OACA,SACA,UACA,QACA,SACA,YACA,QACA,QACA,UACA,SACA,QACA,QACA,WACA,UACA,WACA,WACA,OACA,SACA,UACA,SACA,SACA,UACA,UACA,YACA,OACA,SACA,SACA,QACA,OACA,MACA,UACA,OACA,UACA,SACA,UACA,WACA,QACA,WACA,WACA,WACA,QACA,UACA,SACA,SACA,QACA,OACA,YACA,YACA,OACA,YACA,SACA,QACA,SACA,UACA,WACA,UACA,QACA,QACA,QACA,SACA,UACA,WACA,YACA,OACA,YACA,WACA,SACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,YACA,YACA,SACA,SACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,YACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,YACA,OACA,QACA,QACA,UACA,UACA,YACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,WACA,QACA,QACA,UACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,QACA,QACA,WACA,QACA,YACA,SACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,UACA,QACA,OACA,QACA,YACA,SACA,OACA,UACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,QACA,QACA,SACA,SACA,SACA,UACA,YACA,WACA,QACA,OACA,SACA,OACA,SACA,UACA,OACA,WACA,OACA,SACA,UACA,SACA,YACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,UACA,OACA,UACA,OACA,WACA,WACA,UACA,YACA,WACA,UACA,YACA,OACA,UACA,UACA,UACA,YACA,QACA,SACA,WACA,SACA,WACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,SACA,SACA,QACA,YACA,SACA,UACA,SACA,UACA,UACA,WACA,OACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,UACA,YACA,UACA,YACA,UACA,UACA,QACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,YACA,YACA,YACA,WACA,SACA,YACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,YACA,QACA,YACA,YACA,UACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,SACA,UACA,YACA,YACA,QACA,UACA,UACA,UACA,OACA,OACA,SACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,YACA,SACA,QACA,UACA,YACA,SACA,SACA,YACA,QACA,UACA,YACA,UACA,WACA,WACA,UACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,WACA,QACA,QACA,UACA,YACA,UACA,YACA,WACA,SACA,SACA,UACA,QACA,QACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,WACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,SACA,OACA,YACA,UACA,QACA,YACA,SACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,QACA,YACA,YACA,YACA,WACA,YACA,YACA,QACA,QACA,QACA,OACA,WACA,SACA,WACA,WACA,QACA,WACA,WACA,SACA,YACA,UACA,QACA,UACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,UACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,WACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,OACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,YACA,WACA,QACA,SACA,UACA,SACA,UACA,WACA,QACA,SACA,WACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,SACA,UACA,QACA,YACA,UACA,UACA,WACA,YACA,YACA,OACA,WACA,SACA,UACA,SACA,QACA,UACA,MACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,OACA,OACA,OACA,OACA,WACA,WACA,UACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,YACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,QACA,YACA,UACA,WACA,WACA,SACA,WACA,YACA,YACA,UACA,YACA,YACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,UACA,YACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,WACA,YACA,UACA,SACA,SACA,SACA,YACA,YACA,WACA,WACA,YACA,QACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,OACA,UACA,SACA,QACA,QACA,QACA,YACA,YACA,WACA,YACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,SACA,WACA,OACA,WACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,SACA,QACA,YACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,WACA,WACA,WACA,WACA,SACA,SACA,UACA,YACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,WACA,YACA,UACA,WACA,UACA,WACA,OACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,YACA,SACA,WACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,UACA,QACA,QACA,UACA,UACA,YACA,UACA,YACA,UACA,QACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,UACA,WACA,QACA,OACA,SACA,UACA,UACA,YACA,OACA,UACA,UACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,YACA,WACA,UACA,YACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,YACA,QACA,QACA,QACA,OACA,SACA,UACA,YACA,UACA,YACA,WACA,YACA,UACA,MACA,QACA,SACA,UACA,UACA,WACA,SACA,YACA,YACA,MACA,MACA,WACA,SACA,QACA,WACA,SACA,QACA,QACA,WACA,QACA,UACA,YACA,SACA,WACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,WACA,WACA,UACA,OACA,OACA,YACA,OACA,YACA,OACA,WACA,SACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,YACA,WACA,SACA,UACA,YACA,QACA,OACA,YACA,SACA,WACA,QACA,UACA,WACA,SACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,WACA,YACA,WACA,UACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,WACA,OACA,WACA,UACA,SACA,YACA,YACA,YACA,QACA,WACA,SACA,WACA,YACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,SACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,SACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,QACA,WACA,UACA,UACA,SACA,SACA,OACA,WACA,YACA,WACA,SACA,YACA,QACA,WACA,QACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,OACA,YACA,YACA,WACA,YACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,WACA,YACA,YACA,UACA,UACA,QACA,WACA,SACA,SACA,WACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,WACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,OACA,WACA,SACA,YACA,QACA,OACA,SACA,UACA,YACA,WACA,YACA,WACA,WACA,YACA,YACA,MACA,WACA,YACA,WACA,OACA,SACA,OACA,WACA,QACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,WACA,OACA,YACA,UACA,OACA,UACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,QACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,WACA,SACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,QACA,QACA,QACA,OACA,SACA,YACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,QACA,QACA,SACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,UACA,QACA,OACA,YACA,SACA,SACA,OACA,SACA,WACA,SACA,OACA,OACA,QACA,OACA,OACA,WACA,YACA,YACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,QACA,QACA,QACA,YACA,UACA,WACA,UACA,UACA,UACA,QACA,QACA,WACA,SACA,OACA,MACA,SACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,SACA,WACA,OACA,UACA,WACA,WACA,MACA,OACA,SACA,YACA,YACA,UACA,UACA,WACA,SACA,SACA,OACA,OACA,UACA,OACA,QACA,QACA,QACA,UACA,UACA,WACA,UACA,YACA,UACA,WACA,UACA,WACA,WACA,OACA,QACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,YACA,YACA,SACA,WACA,UACA,QACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,YACA,OACA,SACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,YACA,OACA,WACA,SACA,OACA,UACA,SACA,WACA,YACA,WACA,MACA,YACA,UACA,YACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,UACA,SACA,QACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,SACA,MACA,WACA,WACA,YACA,QACA,UACA,SACA,MACA,UACA,WACA,MACA,YACA,QACA,YACA,WACA,YACA,QACA,UACA,QACA,QACA,UACA,SACA,UACA,YACA,YACA,QACA,WACA,UACA,SACA,SACA,WACA,SACA,YACA,QACA,UACA,YACA,WACA,OACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,YACA,QACA,MACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,SACA,SACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,YACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,SACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,YACA,WACA,YACA,WACA,SACA,UACA,SACA,SACA,YACA,SACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,WACA,QACA,OACA,SACA,OACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,WACA,SACA,SACA,UACA,YACA,SACA,SACA,UACA,QACA,QACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,SACA,WACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,UACA,QACA,YACA,SACA,YACA,WACA,UACA,QACA,WACA,YACA,YACA,UACA,UACA,OACA,YACA,YACA,YACA,WACA,WACA,QACA,WACA,UACA,OACA,QACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,SACA,UACA,SACA,QACA,WACA,OACA,SACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,YACA,YACA,YACA,QACA,SACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,SACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,SACA,WACA,SACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,OACA,SACA,UACA,SACA,OACA,QACA,UACA,OACA,WACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,UACA,OACA,UACA,YACA,YACA,UACA,UACA,WACA,SACA,UACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,MACA,QACA,UACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,QACA,UACA,SACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,SACA,SACA,WACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,WACA,YACA,UACA,UACA,QACA,WACA,QACA,UACA,SACA,WACA,SACA,SACA,SACA,UACA,OACA,SACA,QACA,WACA,SACA,WACA,WACA,UACA,UACA,YACA,QACA,WACA,QACA,UACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,MACA,OACA,UACA,UACA,WACA,WACA,YACA,YACA,QACA,UACA,QACA,QACA,YACA,UACA,WACA,WACA,OACA,UACA,YACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,WACA,SACA,WACA,UACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,WACA,OACA,SACA,UACA,QACA,WACA,UACA,UACA,QACA,SACA,UACA,WACA,OACA,MACA,MACA,OACA,QACA,OACA,WACA,SACA,WACA,SACA,WACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,MACA,QACA,WACA,WACA,UACA,YACA,WACA,YACA,WACA,QACA,QACA,UACA,UACA,YACA,SACA,UACA,QACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,YACA,WACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,WACA,SACA,YACA,WACA,QACA,UACA,UACA,WACA,SACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,QACA,SACA,UACA,QACA,UACA,YACA,SACA,OACA,QACA,YACA,UACA,WACA,WACA,YACA,SACA,QACA,QACA,SACA,WACA,YACA,WACA,QACA,YACA,SACA,MACA,QACA,MACA,YACA,UACA,QACA,OACA,YACA,WACA,UACA,SACA,SACA,UACA,YACA,SACA,YACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,MACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,MACA,WACA,YACA,SACA,UACA,WACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,WACA,WACA,QACA,UACA,YACA,SACA,QACA,YACA,WACA,YACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,YACA,WACA,YACA,UACA,YACA,UACA,UACA,UACA,QACA,QACA,YACA,SACA,UACA,YACA,QACA,OACA,WACA,YACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,WACA,QACA,QACA,SACA,QACA,UACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,SACA,WACA,YACA,QACA,UACA,QACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,QACA,QACA,QACA,UACA,WACA,UACA,OACA,SACA,YACA,UACA,SACA,OACA,OACA,WACA,OACA,UACA,QACA,WACA,WACA,YACA,OACA,UACA,QACA,UACA,OACA,OACA,OACA,QACA,WACA,YACA,QACA,SACA,OACA,SACA,OACA,SACA,WACA,OACA,UACA,SACA,SACA,SACA,OACA,OACA,OACA,WACA,YACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,UACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,QACA,WACA,QACA,QACA,UACA,YACA,QACA,QACA,YACA,UACA,UACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,QACA,OACA,UACA,WACA,WACA,YACA,SACA,QACA,UACA,WACA,OACA,YACA,OACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,OACA,UACA,OACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,UACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,OACA,WACA,QACA,OACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,OACA,OACA,QACA,QACA,UACA,OACA,SACA,MACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,SACA,UACA,UACA,MACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,YACA,SACA,QACA,YACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,WACA,QACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,QACA,UACA,OACA,SACA,QACA,UACA,YACA,QACA,SACA,YACA,WACA,UACA,WACA,YACA,OACA,UACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,YACA,YACA,YACA,SACA,SACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,YACA,UACA,QACA,UACA,YACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,QACA,WACA,QACA,SACA,SACA,YACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,WACA,WACA,UACA,WACA,SACA,SACA,WACA,OACA,MACA,OACA,OACA,OACA,QACA,SACA,WACA,SACA,QACA,YACA,WACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,SACA,SACA,YACA,YACA,SACA,WACA,SACA,OACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,SACA,YACA,UACA,QACA,OACA,UACA,OACA,SACA,YACA,MACA,SACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,MACA,UACA,QACA,OACA,OACA,MACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,QACA,OACA,QACA,WACA,SACA,SACA,YACA,WACA,WACA,QACA,YACA,WACA,UACA,WACA,UACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,SACA,YACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,YACA,YACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,SACA,SACA,MACA,OACA,SACA,OACA,QACA,MACA,OACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,WACA,YACA,YACA,UACA,QACA,UACA,YACA,UACA,OACA,YACA,SACA,QACA,MACA,MACA,SACA,SACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,MACA,UACA,UACA,SACA,UACA,UACA,WACA,QACA,OACA,QACA,UACA,UACA,OACA,UACA,YACA,OACA,OACA,YACA,UACA,QACA,SACA,SACA,MACA,QACA,SACA,QACA,SACA,WACA,OACA,UACA,UACA,MACA,SACA,YACA,SACA,UACA,OACA,UACA,WACA,WACA,YACA,QACA,OACA,MACA,SACA,WACA,YACA,SACA,UACA,WACA,YACA,WACA,QACA,YACA,WACA,YACA,OACA,SACA,WACA,UACA,QACA,YACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,WACA,WACA,OACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,OACA,UACA,YACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,SACA,QACA,QACA,SACA,WACA,OACA,MACA,OACA,SACA,OACA,WACA,WACA,SACA,OACA,OACA,WACA,WACA,YACA,WACA,OACA,SACA,SACA,WACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,OACA,SACA,QACA,OACA,UACA,WACA,OACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,UACA,WACA,SACA,UACA,SACA,OACA,OACA,QACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,WACA,UACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,OACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,OACA,UACA,SACA,YACA,UACA,QACA,OACA,SACA,OACA,OACA,UACA,SACA,UACA,YACA,WACA,SACA,UACA,QACA,WACA,SACA,WACA,YACA,YACA,SACA,UACA,YACA,UACA,UACA,WACA,MACA,OACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,QACA,OACA,OACA,UACA,YACA,QACA,QACA,UACA,WACA,OACA,QACA,WACA,WACA,SACA,SACA,WACA,UACA,OACA,OACA,MACA,UACA,UACA,SACA,OACA,OACA,WACA,YACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,YACA,UACA,SACA,SACA,YACA,YACA,QACA,UACA,YACA,WACA,YACA,YACA,SACA,WACA,UACA,SACA,YACA,WACA,YACA,UACA,UACA,SACA,QACA,WACA,WACA,YACA,YACA,OACA,QACA,OACA,YACA,OACA,SACA,WACA,SACA,YACA,UACA,YACA,WACA,QACA,YACA,SACA,QACA,YACA,WACA,WACA,SACA,WACA,WACA,QACA,OACA,UACA,YACA,WACA,UACA,SACA,UACA,WACA,QACA,YACA,WACA,YACA,YACA,YACA,UACA,YACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,WACA,QACA,YACA,SACA,YACA,OACA,OACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,YACA,UACA,UACA,UACA,YACA,WACA,YACA,SACA,UACA,UACA,YACA,QACA,UACA,SACA,UACA,QACA,WACA,SACA,SACA,SACA,OACA,MACA,WACA,YACA,UACA,UACA,WACA,QACA,QACA,YACA,YACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,YACA,SACA,UACA,SACA,QACA,YACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,UACA,WACA,SACA,UACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,OACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,WACA,WACA,WACA,QACA,WACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,QACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,WACA,QACA,WACA,OACA,YACA,WACA,WACA,UACA,MACA,YACA,SACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,MACA,SACA,WACA,UACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,OACA,WACA,YACA,SACA,WACA,YACA,SACA,YACA,QACA,QACA,YACA,WACA,UACA,WACA,UACA,WACA,QACA,YACA,YACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,MACA,MACA,WACA,QACA,OACA,SACA,UACA,WACA,WACA,YACA,YACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,WACA,UACA,YACA,SACA,QACA,YACA,QACA,YACA,WACA,SACA,UACA,YACA,WACA,QACA,QACA,SACA,YACA,QACA,UACA,UACA,SACA,YACA,QACA,UACA,SACA,WACA,OACA,YACA,YACA,SACA,OACA,SACA,SACA,SACA,UACA,YACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,QACA,YACA,OACA,SACA,SACA,UACA,QACA,SACA,UACA,YACA,WACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,UACA,OACA,SACA,OACA,UACA,QACA,OACA,MACA,YACA,SACA,WACA,WACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,QACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,YACA,QACA,SACA,QACA,MACA,MACA,QACA,MACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,YACA,OACA,UACA,YACA,YACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,SACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,OACA,MACA,OACA,WACA,OACA,MACA,QACA,WACA,QACA,OACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,QACA,SACA,WACA,OACA,WACA,QACA,UACA,YACA,UACA,OACA,SACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,WACA,UACA,YACA,YACA,YACA,WACA,QACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,MACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,UACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,OACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,UACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,MACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,SACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,QACA,WACA,OACA,YACA,QACA,UACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,SACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,YACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,QACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,YACA,SACA,WACA,YACA,OACA,WACA,UACA,QACA,YACA,UACA,SACA,YACA,YACA,SACA,WACA,QACA,YACA,WACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,SACA,UACA,WACA,UACA,SACA,SACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,UACA,SACA,OACA,SACA,WACA,UACA,SACA,UACA,UACA,YACA,WACA,UACA,YACA,QACA,SACA,UACA,WACA,YACA,MACA,WACA,UACA,QACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,QACA,OACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,YACA,SACA,YACA,QACA,SACA,WACA,QACA,YACA,SACA,YACA,YACA,QACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,UACA,UACA,WACA,QACA,UACA,QACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,YACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,QACA,SACA,YACA,SACA,WACA,YACA,UACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,UACA,WACA,SACA,OACA,YACA,UACA,QACA,MACA,OACA,OACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,OACA,YACA,UACA,YACA,UACA,SACA,OACA,OACA,UACA,OACA,SACA,SACA,QACA,WACA,WACA,UACA,WACA,YACA,OACA,SACA,WACA,WACA,SACA,YACA,WACA,UACA,SACA,WACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,UACA,YACA,UACA,UACA,QACA,SACA,WACA,QACA,UACA,OACA,WACA,YACA,UACA,QACA,SACA,MACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,YACA,UACA,SACA,WACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,SACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,UACA,SACA,YACA,YACA,YACA,SACA,UACA,YACA,UACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,QACA,SACA,YACA,UACA,UACA,SACA,QACA,WACA,QACA,QACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,YACA,WACA,WACA,YACA,QACA,UACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,QACA,QACA,YACA,SACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,UACA,YACA,WACA,SACA,YACA,YACA,WACA,WACA,QACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,QACA,YACA,QACA,UACA,MACA,UACA,SACA,YACA,SACA,SACA,MACA,OACA,YACA,OACA,UACA,QACA,YACA,OACA,SACA,SACA,QACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,SACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,QACA,UACA,WACA,SACA,SACA,UACA,SACA,SACA,WACA,YACA,OACA,QACA,YACA,WACA,UACA,WACA,WACA,YACA,SACA,YACA,UACA,WACA,UACA,SACA,QACA,UACA,OACA,SACA,WACA,UACA,YACA,SACA,QACA,WACA,QACA,WACA,QACA,UACA,YACA,YACA,UACA,UACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,QACA,QACA,QACA,UACA,YACA,QACA,OACA,SACA,YACA,WACA,YACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,WACA,YACA,WACA,YACA,WACA,QACA,SACA,SACA,OACA,OACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,OACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,YACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,OACA,UACA,SACA,QACA,SACA,SACA,UACA,YACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,OACA,YACA,WACA,UACA,YACA,YACA,YACA,WACA,SACA,WACA,WACA,WACA,UACA,YACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,UACA,WACA,WACA,WACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,UACA,SACA,WACA,YACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,UACA,WACA,WACA,QACA,QACA,UACA,UACA,YACA,WACA,WACA,WACA,UACA,QACA,UACA,YACA,UACA,SACA,SACA,SACA,WACA,SACA,YACA,OACA,SACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,QACA,UACA,YACA,SACA,UACA,SACA,YACA,UACA,UACA,UACA,WACA,SACA,WACA,YACA,YACA,WACA,YACA,YACA,UACA,UACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,WACA,UACA,SACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,UACA,SACA,UACA,QACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,YACA,OACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,UACA,WACA,SACA,SACA,WACA,YACA,YACA,SACA,WACA,YACA,SACA,YACA,YACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,SACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,WACA,SACA,OACA,SACA,UACA,OACA,UACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,UACA,OACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,OACA,SACA,OACA,UACA,UACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,UACA,QACA,UACA,OACA,QACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,UACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,SACA,MACA,SACA,OACA,SACA,WACA,UACA,QACA,YACA,UACA,SACA,UACA,QACA,OACA,SACA,UACA,QACA,OACA,OACA,OACA,MACA,UACA,WACA,YACA,SACA,YACA,SACA,YACA,UACA,WACA,QACA,UACA,SACA,YACA,YACA,SACA,WACA,UACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,OACA,WACA,SACA,UACA,YACA,YACA,OACA,SACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,UACA,SACA,WACA,UACA,UACA,YACA,UACA,YACA,YACA,WACA,QACA,WACA,YACA,OACA,QACA,UACA,YACA,QACA,UACA,YACA,UACA,OACA,YACA,QACA,UACA,WACA,QACA,YACA,YACA,UACA,WACA,WACA,YACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,YACA,MACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,WACA,OACA,UACA,UACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,QACA,UACA,YACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,QACA,QACA,WACA,QACA,QACA,UACA,QACA,SACA,YACA,YACA,SACA,YACA,SACA,UACA,QACA,WACA,SACA,YACA,UACA,WACA,WACA,SACA,WACA,WACA,WACA,YACA,YACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,YACA,SACA,SACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,UACA,WACA,YACA,YACA,SACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,QACA,SACA,WACA,WACA,WACA,SACA,WACA,UACA,UACA,UACA,SACA,WACA,YACA,YACA,WACA,OACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,UACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,WACA,QACA,YACA,SACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,UACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,YACA,YACA,UACA,UACA,WACA,SACA,QACA,SACA,UACA,YACA,UACA,SACA,QACA,QACA,WACA,UACA,YACA,UACA,QACA,QACA,UACA,UACA,QACA,UACA,WACA,QACA,SACA,QACA,UACA,QACA,YACA,UACA,UACA,UACA,YACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,SACA,SACA,UACA,WACA,YACA,SACA,UACA,SACA,UACA,QACA,UACA,YACA,UACA,QACA,OACA,QACA,YACA,QACA,QACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,SACA,QACA,QACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,QACA,UACA,YACA,YACA,WACA,QACA,SACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,YACA,SACA,QACA,SACA,WACA,UACA,UACA,YACA,OACA,QACA,OACA,MACA,UACA,WACA,UACA,SACA,SACA,SACA,OACA,UACA,WACA,WACA,SACA,SACA,UACA,OACA,YACA,QACA,OACA,OACA,SACA,YACA,SACA,YACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,MACA,QACA,SACA,SACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,WACA,YACA,UACA,UACA,OACA,SACA,SACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,YACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,QACA,YACA,UACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,OACA,UACA,QACA,WACA,YACA,UACA,WACA,QACA,UACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,YACA,SACA,SACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,QACA,WACA,YACA,SACA,OACA,OACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,OACA,YACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,UACA,YACA,UACA,WACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,YACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,QACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,WACA,QACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,QACA,WACA,YACA,YACA,UACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,QACA,OACA,QACA,UACA,SACA,WACA,QACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,YACA,SACA,QACA,YACA,UACA,WACA,YACA,UACA,WACA,QACA,OACA,SACA,YACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,YACA,UACA,YACA,WACA,YACA,UACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,UACA,QACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,QACA,WACA,WACA,SACA,SACA,SACA,YACA,UACA,YACA,YACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,QACA,SACA,WACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,QACA,WACA,UACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,QACA,YACA,WACA,WACA,YACA,QACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,OACA,SACA,UACA,OACA,SACA,UACA,YACA,YACA,WACA,YACA,UACA,OACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,QACA,YACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,UACA,YACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,YACA,YACA,UACA,QACA,QACA,SACA,QACA,QACA,YACA,YACA,WACA,UACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,QACA,QACA,QACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,WACA,YACA,SACA,YACA,UACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,SACA,UACA,YACA,QACA,QACA,UACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,SACA,WACA,WACA,UACA,SACA,SACA,YACA,UACA,YACA,OACA,UACA,SACA,SACA,OACA,WACA,YACA,UACA,SACA,YACA,WACA,QACA,UACA,QACA,WACA,WACA,WACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,SACA,WACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,YACA,WACA,SACA,WACA,UACA,YACA,WACA,QACA,UACA,UACA,WACA,YACA,YACA,OACA,YACA,UACA,YACA,OACA,WACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,WACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,SACA,YACA,UACA,YACA,UACA,SACA,WACA,QACA,OACA,UACA,WACA,UACA,UACA,WACA,UACA,YACA,MACA,UACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,WACA,QACA,SACA,OACA,SACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,OACA,YACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,OACA,SACA,QACA,YACA,UACA,QACA,WACA,SACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,UACA,YACA,OACA,QACA,QACA,WACA,WACA,UACA,UACA,YACA,QACA,SACA,WACA,UACA,UACA,YACA,WACA,WACA,QACA,UACA,QACA,QACA,SACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,QACA,QACA,SACA,WACA,UACA,OACA,QACA,UACA,UACA,YACA,YACA,WACA,UACA,OACA,SACA,OACA,OACA,QACA,SACA,UACA,YACA,UACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,OACA,UACA,OACA,SACA,SACA,SACA,UACA,YACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,UACA,SACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,OACA,YACA,WACA,YACA,UACA,QACA,SACA,OACA,UACA,UACA,YACA,SACA,SACA,QACA,WACA,SACA,QACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,WACA,WACA,UACA,YACA,SACA,WACA,WACA,UACA,QACA,SACA,YACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,YACA,SACA,WACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,YACA,UACA,WACA,WACA,YACA,QACA,MACA,QACA,WACA,UACA,UACA,UACA,MACA,UACA,QACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,SACA,OACA,QACA,OACA,MACA,QACA,QACA,QACA,WACA,SACA,YACA,SACA,QACA,QACA,UACA,YACA,OACA,WACA,QACA,QACA,QACA,YACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,QACA,OACA,QACA,WACA,YACA,QACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,WACA,WACA,YACA,UACA,YACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,YACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,SACA,YACA,UACA,YACA,WACA,UACA,WACA,UACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,YACA,YACA,YACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,QACA,YACA,YACA,YACA,YACA,YACA,QACA,WACA,YACA,SACA,WACA,OACA,YACA,WACA,WACA,UACA,SACA,YACA,YACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,SACA,YACA,WACA,UACA,WACA,UACA,YACA,YACA,SACA,SACA,YACA,YACA,YACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,WACA,WACA,SACA,SACA,WACA,UACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,SACA,QACA,QACA,UACA,WACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,YACA,UACA,QACA,YACA,SACA,WACA,YACA,SACA,UACA,YACA,YACA,YACA,SACA,YACA,WACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,SACA,WACA,YACA,SACA,OACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,SACA,YACA,UACA,SACA,QACA,UACA,OACA,YACA,OACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,QACA,SACA,SACA,YACA,QACA,UACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,OACA,QACA,SACA,YACA,SACA,WACA,SACA,WACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,QACA,QACA,YACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,YACA,WACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,YACA,SACA,QACA,OACA,WACA,UACA,QACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,UACA,WACA,QACA,OACA,YACA,UACA,WACA,UACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,WACA,UACA,WACA,YACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,OACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,YACA,MACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,SACA,UACA,SACA,WACA,YACA,YACA,WACA,YACA,UACA,SACA,SACA,YACA,UACA,UACA,WACA,YACA,UACA,OACA,UACA,QACA,QACA,WACA,SACA,OACA,WACA,SACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,WACA,UACA,QACA,WACA,UACA,WACA,SACA,MACA,OACA,SACA,QACA,SACA,QACA,QACA,YACA,UACA,OACA,OACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,SACA,YACA,UACA,SACA,YACA,OACA,OACA,QACA,UACA,OACA,OACA,UACA,SACA,WACA,SACA,OACA,QACA,WACA,SACA,OACA,SACA,OACA,OACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,MACA,OACA,YACA,YACA,YACA,YACA,YACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,UACA,YACA,QACA,YACA,YACA,QACA,QACA,QACA,MACA,UACA,QACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,YACA,UACA,WACA,UACA,YACA,UACA,OACA,QACA,QACA,MACA,UACA,UACA,OACA,OACA,OACA,WACA,WACA,SACA,WACA,QACA,UACA,OACA,MACA,YACA,UACA,QACA,MACA,SACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,MACA,UACA,QACA,MACA,WACA,OACA,YACA,QACA,YACA,UACA,UACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,YACA,YACA,UACA,QCjmPK,MAAMC,GACXz8F,YAAmBiL,GAAA,KAAAA,OAAAA,GCCd,MAAMyxF,I,kuBCoBN,MAAM,GACX18F,YACU4R,EACE+qF,EACAl0F,EACA1G,GAHF,KAAA6P,sBAAAA,EACE,KAAA+qF,oBAAAA,EACA,KAAAl0F,WAAAA,EACA,KAAA1G,aAAAA,EAGN4V,OAAO3D,EAAyB6X,G,gDAC9B1pB,KAAKJ,aAAa66F,mBAAmB5oF,EAAK,CAAE6X,OAAQA,UACpD1pB,KAAK06F,SAAS7oF,EAAK6X,MAGrBnV,WAAWomF,G,gDACT36F,KAAKJ,aAAa2U,WAAWomF,MAG/BtwE,UAAU/W,G,0CACA,MAAVA,UAIEtT,KAAKJ,aAAag7F,+B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AiiF,EACA/vF,EACAuwC,EACAnrC,EACA1G,IAEA,IAAI,GACFmS,EACAi/E,EACAhiF,EACAiiF,EACA/vF,GACA,IAAMuwC,EAAS/hB,IAAIuP,KACnB34B,EACA1G,GAEJstD,KAAM,CACJ76C,GACAsrD,GACAp4D,GACAi4D,GACAz8D,GACA,EAAA4yH,SACAnuH,GACA,KAGJ,CACEzG,QAASypC,GACTgxB,SAAU,GACVtM,KAAM,CACJ76C,GACA9M,GACAxE,GACA8/C,GACA,KAGJ,CAAE9hD,QAASyG,GAAYwnD,WAAY,IAAM,IAAIqsC,IAAkB,IAC/D,CACEt6F,QAASgiD,GACTyY,SAAU,GACVtM,KAAM,CAAC76C,GAA0BtR,GAAwB,KAE3D,CACEhC,QAAS+B,GACT04D,SAAU,GACVtM,KAAM,CAAC,KAET,CACEnuD,QAASuqC,GACTkwB,SAAU,GACVtM,KAAM,CAAC59C,GAAkC9J,GAAY,KAEvD,CAAEzG,QAASk3D,GAAyBuD,SAAU,GAActM,KAAM,CAAC,KACnE,CACEnuD,QAASsT,GACTmnD,SAAU,GACVtM,KAAM,CACJ59C,GACAzO,GACA2E,GACA,KAGJ,CACEzG,QAASsQ,GACTmqD,SAAU,GACVtM,KAAM,CAAC76C,GAA0B+V,GAA0B,KAE7D,CACErpB,QAASwG,GACTynD,WAAY,CACVkJ,EACAl1D,EACAC,EACAvB,IAEA,IAAI,GACFw2D,EACAl1D,EACAC,GACO+1B,GAAqB,4CAAAt3B,EAAiBQ,KAAK,SAAU,CAAE82B,QAASA,SAE3Ek2B,KAAM,CACJ+I,GACAp1D,GACAC,GACAzB,KAGJ,CACEN,QAASy+D,GACThE,SAAU,GACVtM,KAAM,CAAC1nD,GAAYD,KAErB,CACExG,QAAS6lB,GACTooC,WAAY,CACVh+C,EACAgiF,EACAvoD,EACAyY,EACAnvC,EACAqvC,EACA1hD,EACA4oB,EACAkP,EACAlxB,EACA3G,EACAC,EACAqoC,EACA+iF,IAEA,IAAI,GACFh8G,EACAgiF,EACAvoD,EACAyY,EACAnvC,EACAqvC,EACA1hD,EACA4oB,EACAkP,EACAlxB,EACA3G,EA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A,UACA,QACA,UACA,kBACA,0BACA,mBAGc,GAAAC,0BAAsC,CACpD,QACA,UACA,QACA,UACA,kBACA,2BAGc,GAAAC,sBAAkC,CAChD,YACA,eACA,WACA,aACA,QACA,UACA,SACA,cACA,YACA,wBACA,mBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,eACA,YACA,eACA,YACA,oBACA,iBACA,oBACA,iBACA,gBACA,kBACA,aACA,eACA,0BACA,wBACA,qBACA,UACA,cACA,cACA,eACA,UAGc,GAAAC,qBAAiC,CAC/C,WACA,cACA,UACA,YACA,QACA,UACA,SACA,cACA,YACA,uBACA,kBACA,QACA,OACA,UACA,SACA,cACA,YACA,SACA,QACA,UACA,YACA,gBACA,cACA,cACA,YACA,cACA,YACA,mBACA,iBACA,mBACA,iBACA,cACA,gBACA,iBACA,mBACA,yBACA,uBACA,cACA,qBACA,uBACA,gBACA,gBACA,UAGc,GAAAC,cAA0B,CACxC,MACA,MACA,OACA,SACA,SACA,WACA,WACA,MACA,MACA,OACA,MACA,OACA,UACA,YACA,gBACA,gBACA,SACA,aACA,oBACA,MACA,OAGc,GAAAC,oBAAgC,CAC9C,UACA,YACA,aACA,WACA,WAKc,GAAAC,UAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,GAAAC,cAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/C,GAAAC,aAAe,CAAC,OAAQ,OAAQ,OAAQ,KAAM,OAAQ,QAGjE,MAAMC,IACK,GAAAC,mBAA+B,CAC7C,mBACA,cACA,WACA,SACA,YACA,cACA,aACA,YACA,gBAGc,GAAAC,mBAA+B,CAAC,OAAQ,YAAa,aAErD,GAAAC,wBAAoC,CAAC,YAAa,aAElD,GAAAC,gBAA4B,CAAC,mBAAoB,SAAU,SAE3D,GAAAC,oBAAgC,CAE9C,SACA,aACA,aACA,UAEA,WAGc,GAAAC,qBAAiC,CAC/C,SACA,cACA,kBACA,iBACA,WACA,YAGc,GAAAC,mBAA+B,CAE7C,SACA,YACA,SACA,UACA,cACA,WACA,SAEA,WA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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./node_modules/@angular/core/__ivy_ngcc__/bundles|lazy|groupOptions: {}|namespace object","webpack:///./jslib/angular/src/components/toastr.component.ts","webpack:///./jslib/common/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/common/src/abstractions/messaging.service.ts","webpack:///./jslib/common/src/abstractions/keyConnector.service.ts","webpack:///./jslib/common/src/abstractions/state.service.ts","webpack:///./jslib/angular/src/services/auth-guard.service.ts","webpack:///./jslib/angular/src/services/lock-guard.service.ts","webpack:///./jslib/angular/src/services/unauth-guard.service.ts","webpack:///./jslib/common/src/abstractions/platformUtils.service.ts","webpack:///./jslib/common/src/abstractions/environment.service.ts","webpack:///./jslib/common/src/abstractions/i18n.service.ts","webpack:///./jslib/angular/src/components/environment.component.ts","webpack:///./jslib/angular/src/directives/blur-click.directive.ts","webpack:///./jslib/angular/src/directives/box-row.directive.ts","webpack:///./jslib/angular/src/directives/input-verbatim.directive.ts","webpack:///./jslib/angular/src/pipes/i18n.pipe.ts","webpack:///./src/popup/accounts/environment.component.ts","webpack:///./src/popup/accounts/environment.component.html","webpack:///./jslib/common/src/models/request/passwordHintRequest.ts","webpack:///./jslib/common/src/abstractions/api.service.ts","webpack:///./jslib/common/src/abstractions/log.service.ts","webpack:///./jslib/angular/src/services/validation.service.ts","webpack:///./jslib/angular/src/directives/api-action.directive.ts","webpack:///./jslib/common/src/misc/utils.ts","webpack:///./jslib/angular/src/directives/autofocus.directive.ts","webpack:///./src/popup/accounts/hint.component.ts","webpack:///./jslib/angular/src/components/hint.component.ts","webpack:///./src/popup/accounts/hint.component.html","webpack:///./jslib/common/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/common/src/abstractions/cryptoFunction.service.ts","webpack:///./src/popup/accounts/home.component.ts","webpack:///./src/popup/accounts/home.component.html","webpack:///./jslib/common/src/enums/hashPurpose.ts","webpack:///./jslib/common/src/enums/keySuffixOptions.ts","webpack:///./jslib/common/src/enums/encryptionType.ts","webpack:///./jslib/common/src/models/domain/encString.ts","webpack:///./jslib/common/src/models/request/secretVerificationRequest.ts","webpack:///./jslib/common/src/abstractions/crypto.service.ts","webpack:///./jslib/angular/src/components/lock.component.ts","webpack:///./jslib/angular/src/directives/stop-click.directive.ts","webpack:///./src/browser/safariApp.ts","webpack:///./src/browser/browserApi.ts","webpack:///./src/popup/services/popup-utils.service.ts","webpack:///./jslib/common/src/models/domain/domainBase.ts","webpack:///./jslib/common/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/angular/src/components/callout.component.html","webpack:///./jslib/angular/src/components/callout.component.ts","webpack:///./src/popup/components/private-mode-warning.component.html","webpack:///./src/popup/components/private-mode-warning.component.ts","webpack:///./jslib/angular/src/directives/a11y-title.directive.ts","webpack:///./src/popup/accounts/lock.component.html","webpack:///./src/popup/accounts/lock.component.ts","webpack:///./jslib/common/src/enums/authenticationType.ts","webpack:///./jslib/common/src/models/domain/logInCredentials.ts","webpack:///./jslib/common/src/misc/captcha_iframe.ts","webpack:///./jslib/common/src/misc/iframe_component.ts","webpack:///./jslib/angular/src/components/captchaProtected.component.ts","webpack:///./jslib/common/src/abstractions/auth.service.ts","webpack:///./jslib/angular/src/components/login.component.ts","webpack:///./jslib/common/src/abstractions/sync.service.ts","webpack:///./src/popup/accounts/login.component.ts","webpack:///./jslib/common/src/enums/kdfType.ts","webpack:///./src/popup/accounts/login.component.html","webpack:///./jslib/common/src/models/request/keysRequest.ts","webpack:///./jslib/common/src/models/request/registerRequest.ts","webpack:///./jslib/angular/src/components/register.component.ts","webpack:///./src/popup/accounts/register.component.html","webpack:///./src/popup/accounts/register.component.ts","webpack:///./jslib/angular/src/components/remove-password.component.ts","webpack:///./src/popup/accounts/remove-password.component.html","webpack:///./src/popup/accounts/remove-password.component.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordEnrollmentRequest.ts","webpack:///./jslib/common/src/models/request/setPasswordRequest.ts","webpack:///./jslib/common/src/abstractions/policy.service.ts","webpack:///./jslib/angular/src/components/change-password.component.ts","webpack:///./jslib/angular/src/components/set-password.component.ts","webpack:///./src/popup/accounts/set-password.component.html","webpack:///./src/popup/accounts/set-password.component.ts","webpack:///./jslib/angular/src/components/sso.component.ts","webpack:///./src/popup/accounts/sso.component.ts","webpack:///./jslib/common/src/abstractions/twoFactor.service.ts","webpack:///./jslib/angular/src/components/two-factor-options.component.ts","webpack:///./src/popup/accounts/two-factor-options.component.html","webpack:///./src/popup/accounts/two-factor-options.component.ts","webpack:///./jslib/common/src/enums/twoFactorProviderType.ts","webpack:///./jslib/common/src/misc/webauthn_iframe.ts","webpack:///./jslib/common/src/models/request/twoFactorEmailRequest.ts","webpack:///./jslib/common/src/services/twoFactor.service.ts","webpack:///./jslib/angular/src/components/two-factor.component.ts","webpack:///./jslib/common/src/abstractions/broadcaster.service.ts","webpack:///./src/popup/accounts/two-factor.component.html","webpack:///./src/popup/accounts/two-factor.component.ts","webpack:///./jslib/common/src/models/request/updateTempPasswordRequest.ts","webpack:///./jslib/common/src/models/request/organizationUserResetPasswordRequest.ts","webpack:///./jslib/angular/src/components/update-temp-password.component.ts","webpack:///./src/popup/accounts/update-temp-password.component.html","webpack:///./src/popup/accounts/update-temp-password.component.ts","webpack:///./jslib/angular/src/components/password-generator-history.component.ts","webpack:///./jslib/angular/src/directives/select-copy.directive.ts","webpack:///./jslib/angular/src/pipes/color-password.pipe.ts","webpack:///./src/popup/generator/password-generator-history.component.html","webpack:///./src/popup/generator/password-generator-history.component.ts","webpack:///./jslib/angular/src/components/password-generator.component.ts","webpack:///./src/popup/components/pop-out.component.ts","webpack:///./src/popup/components/pop-out.component.html","webpack:///./jslib/common/src/enums/policyType.ts","webpack:///./jslib/common/src/enums/sendType.ts","webpack:///./src/popup/generator/password-generator.component.html","webpack:///./src/popup/generator/password-generator.component.ts","webpack:///./jslib/common/src/models/view/sendFileView.ts","webpack:///./jslib/common/src/models/view/sendTextView.ts","webpack:///./jslib/common/src/models/view/sendView.ts","webpack:///./jslib/common/src/abstractions/send.service.ts","webpack:///./jslib/angular/src/components/send/efflux-dates.component.ts","webpack:///./jslib/angular/src/components/send/add-edit.component.ts","webpack:///./src/services/abstractions/state.service.ts","webpack:///./src/popup/send/efflux-dates.component.html","webpack:///./src/popup/send/efflux-dates.component.ts","webpack:///./src/popup/send/send-add-edit.component.html","webpack:///./src/popup/send/send-add-edit.component.ts","webpack:///./jslib/common/src/abstractions/search.service.ts","webpack:///./jslib/angular/src/components/send/send.component.ts","webpack:///./jslib/angular/src/directives/stop-prop.directive.ts","webpack:///./src/popup/components/send-list.component.html","webpack:///./src/popup/components/send-list.component.ts","webpack:///./src/popup/send/send-groupings.component.html","webpack:///./src/popup/send/send-groupings.component.ts","webpack:///./src/popup/send/send-type.component.html","webpack:///./src/popup/send/send-type.component.ts","webpack:///./src/popup/services/debounceNavigationService.ts","webpack:///./src/popup/settings/excluded-domains.component.html","webpack:///./src/popup/settings/excluded-domains.component.ts","webpack:///./jslib/common/src/enums/eventType.ts","webpack:///./jslib/common/src/abstractions/export.service.ts","webpack:///./jslib/common/src/abstractions/event.service.ts","webpack:///./jslib/common/src/abstractions/userVerification.service.ts","webpack:///./jslib/common/src/enums/verificationType.ts","webpack:///./jslib/angular/src/components/export.component.ts","webpack:///./jslib/angular/src/components/verify-master-password.component.html","webpack:///./jslib/angular/src/components/verify-master-password.component.ts","webpack:///./src/popup/components/verify-master-password.component.html","webpack:///./src/popup/components/verify-master-password.component.ts","webpack:///./jslib/common/src/abstractions/organization.service.ts","webpack:///./jslib/angular/src/components/export-scope-callout.component.html","webpack:///./jslib/angular/src/components/export-scope-callout.component.ts","webpack:///./src/popup/settings/export.component.html","webpack:///./src/popup/settings/export.component.ts","webpack:///./jslib/common/src/models/view/folderView.ts","webpack:///./jslib/common/src/abstractions/folder.service.ts","webpack:///./jslib/angular/src/components/folder-add-edit.component.ts","webpack:///./src/popup/settings/folder-add-edit.component.html","webpack:///./src/popup/settings/folder-add-edit.component.ts","webpack:///./jslib/common/src/enums/themeType.ts","webpack:///./jslib/common/src/enums/uriMatchType.ts","webpack:///./src/popup/settings/folders.component.html","webpack:///./src/popup/settings/folders.component.ts","webpack:///./jslib/common/src/abstractions/totp.service.ts","webpack:///./src/popup/settings/options.component.html","webpack:///./src/popup/settings/options.component.ts","webpack:///./jslib/angular/src/components/premium.component.ts","webpack:///./src/popup/settings/premium.component.html","webpack:///./src/popup/settings/premium.component.ts","webpack:///./jslib/angular/src/components/modal/modal.ref.ts","webpack:///./jslib/angular/src/components/modal/dynamic-modal.component.ts","webpack:///./jslib/angular/src/components/modal/modal-injector.ts","webpack:///./jslib/common/src/enums/deviceType.ts","webpack:///./jslib/angular/src/services/modal.service.ts","webpack:///./jslib/angular/src/components/set-pin.component.ts","webpack:///./src/popup/components/set-pin.component.html","webpack:///./src/popup/components/set-pin.component.ts","webpack:///./jslib/angular/src/components/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/vault-timeout-input.component.html","webpack:///./src/popup/settings/vault-timeout-input.component.ts","webpack:///./src/popup/settings/settings.component.html","webpack:///./src/popup/settings/settings.component.ts","webpack:///./jslib/common/src/enums/cipherRepromptType.ts","webpack:///./jslib/common/src/enums/cipherType.ts","webpack:///./jslib/common/src/enums/organizationUserStatusType.ts","webpack:///./jslib/common/src/enums/secureNoteType.ts","webpack:///./jslib/common/src/enums/linkedIdType.ts","webpack:///./src/popup/settings/sync.component.ts","webpack:///./src/popup/tabs.component.html","webpack:///./src/popup/settings/sync.component.html","webpack:///./src/popup/tabs.component.ts","webpack:///./jslib/common/src/misc/linkedFieldOption.decorator.ts","webpack:///./jslib/common/src/models/view/itemView.ts","webpack:///./jslib/common/src/models/view/cardView.ts","webpack:///./jslib/common/src/models/view/identityView.ts","webpack:///./jslib/common/src/models/view/loginView.ts","webpack:///./jslib/common/src/models/view/secureNoteView.ts","webpack:///./jslib/common/src/models/view/cipherView.ts","webpack:///./jslib/common/src/models/view/loginUriView.ts","webpack:///./jslib/common/src/abstractions/cipher.service.ts","webpack:///./jslib/common/src/abstractions/audit.service.ts","webpack:///./jslib/common/src/abstractions/collection.service.ts","webpack:///./jslib/common/src/abstractions/passwordReprompt.service.ts","webpack:///./jslib/common/src/enums/fieldType.ts","webpack:///./jslib/angular/src/components/add-edit.component.ts","webpack:///./jslib/common/src/models/view/fieldView.ts","webpack:///./jslib/angular/src/components/add-edit-custom-fields.component.ts","webpack:///./jslib/angular/src/directives/true-false-value.directive.ts","webpack:///./src/popup/vault/add-edit-custom-fields.component.html","webpack:///./src/popup/vault/add-edit-custom-fields.component.ts","webpack:///./src/popup/vault/add-edit.component.html","webpack:///./src/popup/vault/add-edit.component.ts","webpack:///./jslib/common/src/models/response/baseResponse.ts","webpack:///./jslib/common/src/models/response/errorResponse.ts","webpack:///./jslib/angular/src/components/attachments.component.ts","webpack:///./src/popup/vault/attachments.component.html","webpack:///./src/popup/vault/attachments.component.ts","webpack:///./jslib/angular/src/components/ciphers.component.ts","webpack:///./jslib/angular/src/directives/cipherListVirtualScroll.directive.ts","webpack:///./jslib/angular/src/directives/fallback-src.directive.ts","webpack:///./jslib/angular/src/components/icon.component.html","webpack:///./jslib/angular/src/components/icon.component.ts","webpack:///./src/popup/components/action-buttons.component.html","webpack:///./src/popup/components/action-buttons.component.ts","webpack:///./src/popup/components/cipher-row.component.html","webpack:///./src/popup/components/cipher-row.component.ts","webpack:///./src/popup/vault/ciphers.component.html","webpack:///./src/popup/vault/ciphers.component.ts","webpack:///./jslib/angular/src/components/collections.component.ts","webpack:///./src/popup/vault/collections.component.html","webpack:///./src/popup/vault/collections.component.ts","webpack:///./src/services/abstractions/autofill.service.ts","webpack:///./src/popup/vault/current-tab.component.html","webpack:///./src/popup/vault/current-tab.component.ts","webpack:///./jslib/angular/src/components/groupings.component.ts","webpack:///./src/popup/vault/groupings.component.html","webpack:///./src/popup/vault/groupings.component.ts","webpack:///./jslib/angular/src/components/password-history.component.ts","webpack:///./src/popup/vault/password-history.component.html","webpack:///./src/popup/vault/password-history.component.ts","webpack:///./jslib/angular/src/components/share.component.ts","webpack:///./src/popup/vault/share.component.html","webpack:///./src/popup/vault/share.component.ts","webpack:///./jslib/common/src/abstractions/token.service.ts","webpack:///./jslib/angular/src/components/view.component.ts","webpack:///./jslib/angular/src/components/view-custom-fields.component.ts","webpack:///./jslib/angular/src/pipes/color-password-count.pipe.ts","webpack:///./src/popup/vault/view-custom-fields.component.html","webpack:///./src/popup/vault/view-custom-fields.component.ts","webpack:///./src/popup/vault/view.component.html","webpack:///./src/popup/vault/view.component.ts","webpack:///./src/popup/app-routing.module.ts","webpack:///./src/popup/app-routing.animations.ts","webpack:///./jslib/common/src/enums/stateVersion.ts","webpack:///./jslib/common/src/enums/ssoEnums.ts","webpack:///./src/popup/app.component.ts","webpack:///./jslib/common/src/abstractions/appId.service.ts","webpack:///./jslib/common/src/abstractions/fileUpload.service.ts","webpack:///./jslib/common/src/abstractions/notifications.service.ts","webpack:///./jslib/common/src/abstractions/provider.service.ts","webpack:///./jslib/common/src/abstractions/settings.service.ts","webpack:///./jslib/common/src/abstractions/stateMigration.service.ts","webpack:///./jslib/common/src/abstractions/storage.service.ts","webpack:///./jslib/common/src/factories/accountFactory.ts","webpack:///./jslib/common/src/factories/globalStateFactory.ts","webpack:///./jslib/common/src/factories/stateFactory.ts","webpack:///./jslib/common/src/models/domain/environmentUrls.ts","webpack:///./jslib/common/src/models/domain/account.ts","webpack:///./jslib/common/src/models/domain/windowState.ts","webpack:///./jslib/common/src/models/domain/globalState.ts","webpack:///./jslib/common/src/models/request/identityToken/tokenRequest.ts","webpack:///./jslib/common/src/models/request/identityToken/apiTokenRequest.ts","webpack:///./jslib/common/src/models/response/apiKeyResponse.ts","webpack:///./jslib/common/src/models/response/attachmentResponse.ts","webpack:///./jslib/common/src/models/api/cardApi.ts","webpack:///./jslib/common/src/models/api/fieldApi.ts","webpack:///./jslib/common/src/models/api/identityApi.ts","webpack:///./jslib/common/src/models/api/loginUriApi.ts","webpack:///./jslib/common/src/models/api/loginApi.ts","webpack:///./jslib/common/src/models/api/secureNoteApi.ts","webpack:///./jslib/common/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/common/src/models/response/cipherResponse.ts","webpack:///./jslib/common/src/models/response/attachmentUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/billingResponse.ts","webpack:///./jslib/common/src/models/response/breachAccountResponse.ts","webpack:///./jslib/common/src/models/response/selectionReadOnlyResponse.ts","webpack:///./jslib/common/src/models/response/collectionResponse.ts","webpack:///./jslib/common/src/models/response/globalDomainResponse.ts","webpack:///./jslib/common/src/models/response/domainsResponse.ts","webpack:///./jslib/common/src/models/response/emergencyAccessResponse.ts","webpack:///./jslib/common/src/models/response/eventResponse.ts","webpack:///./jslib/common/src/models/response/folderResponse.ts","webpack:///./jslib/common/src/models/response/groupResponse.ts","webpack:///./jslib/common/src/models/response/identityCaptchaResponse.ts","webpack:///./jslib/common/src/models/response/identityTokenResponse.ts","webpack:///./jslib/common/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/common/src/models/response/keyConnectorUserKeyResponse.ts","webpack:///./jslib/common/src/models/response/listResponse.ts","webpack:///./jslib/common/src/models/api/ssoConfigApi.ts","webpack:///./jslib/common/src/models/response/organization/organizationSsoResponse.ts","webpack:///./jslib/common/src/models/response/organizationAutoEnrollStatusResponse.ts","webpack:///./jslib/common/src/models/response/keysResponse.ts","webpack:///./jslib/common/src/models/response/organizationKeysResponse.ts","webpack:///./jslib/common/src/models/response/planResponse.ts","webpack:///./jslib/common/src/models/response/organizationResponse.ts","webpack:///./jslib/common/src/models/response/subscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/organizationUserBulkResponse.ts","webpack:///./jslib/common/src/models/api/permissionsApi.ts","webpack:///./jslib/common/src/models/response/organizationUserResponse.ts","webpack:///./jslib/common/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/profileProviderResponse.ts","webpack:///./jslib/common/src/models/response/profileResponse.ts","webpack:///./jslib/common/src/models/response/paymentResponse.ts","webpack:///./jslib/common/src/models/response/policyResponse.ts","webpack:///./jslib/common/src/models/response/preloginResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerOrganizationResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkPublicKeyResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserBulkResponse.ts","webpack:///./jslib/common/src/models/response/provider/providerUserResponse.ts","webpack:///./jslib/common/src/models/api/sendFileApi.ts","webpack:///./jslib/common/src/models/api/sendTextApi.ts","webpack:///./jslib/common/src/models/response/sendAccessResponse.ts","webpack:///./jslib/common/src/models/response/sendFileDownloadDataResponse.ts","webpack:///./jslib/common/src/models/response/sendResponse.ts","webpack:///./jslib/common/src/models/response/sendFileUploadDataResponse.ts","webpack:///./jslib/common/src/models/response/syncResponse.ts","webpack:///./jslib/common/src/models/response/taxInfoResponse.ts","webpack:///./jslib/common/src/models/response/taxRateResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorWebAuthnResponse.ts","webpack:///./jslib/common/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/common/src/models/response/userKeyResponse.ts","webpack:///./jslib/common/src/enums/htmlStorageLocation.ts","webpack:///./jslib/common/src/services/api.service.ts","webpack:///./jslib/common/src/services/appId.service.ts","webpack:///./jslib/common/src/services/audit.service.ts","webpack:///./jslib/common/src/misc/throttle.ts","webpack:///./jslib/common/src/models/domain/authResult.ts","webpack:///./jslib/common/src/models/request/deviceRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/logIn.strategy.ts","webpack:///./jslib/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack:///./jslib/common/src/models/request/identityToken/passwordTokenRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack:///./jslib/common/src/models/request/identityToken/ssoTokenRequest.ts","webpack:///./jslib/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack:///./jslib/common/src/models/request/preloginRequest.ts","webpack:///./jslib/common/src/services/auth.service.ts","webpack:///./jslib/common/src/misc/sequentialize.ts","webpack:///./jslib/common/src/models/data/attachmentData.ts","webpack:///./jslib/common/src/models/data/cardData.ts","webpack:///./jslib/common/src/models/data/fieldData.ts","webpack:///./jslib/common/src/models/data/identityData.ts","webpack:///./jslib/common/src/models/data/loginUriData.ts","webpack:///./jslib/common/src/models/data/loginData.ts","webpack:///./jslib/common/src/models/data/passwordHistoryData.ts","webpack:///./jslib/common/src/models/data/secureNoteData.ts","webpack:///./jslib/common/src/models/data/cipherData.ts","webpack:///./jslib/common/src/models/view/attachmentView.ts","webpack:///./jslib/common/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/common/src/models/domain/attachment.ts","webpack:///./jslib/common/src/models/domain/card.ts","webpack:///./jslib/common/src/models/domain/field.ts","webpack:///./jslib/common/src/models/domain/identity.ts","webpack:///./jslib/common/src/models/domain/loginUri.ts","webpack:///./jslib/common/src/models/domain/login.ts","webpack:///./jslib/common/src/models/view/passwordHistoryView.ts","webpack:///./jslib/common/src/models/domain/password.ts","webpack:///./jslib/common/src/models/domain/secureNote.ts","webpack:///./jslib/common/src/models/domain/cipher.ts","webpack:///./jslib/common/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/common/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/common/src/models/request/attachmentRequest.ts","webpack:///./jslib/common/src/models/request/cipherRequest.ts","webpack:///./jslib/common/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/common/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/common/src/models/request/cipherCollectionsRequest.ts","webpack:///./jslib/common/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/common/src/models/request/cipherShareRequest.ts","webpack:///./jslib/common/src/services/cipher.service.ts","webpack:///./jslib/common/src/models/domain/treeNode.ts","webpack:///./jslib/common/src/misc/serviceUtils.ts","webpack:///./jslib/common/src/models/data/collectionData.ts","webpack:///./jslib/common/src/models/view/collectionView.ts","webpack:///./jslib/common/src/models/domain/collection.ts","webpack:///./jslib/common/src/services/collection.service.ts","webpack:///./jslib/common/src/enums/logLevelType.ts","webpack:///./jslib/common/src/services/consoleLog.service.ts","webpack:///./jslib/common/src/misc/wordlist.ts","webpack:///./jslib/common/src/models/domain/encArrayBuffer.ts","webpack:///./jslib/common/src/models/domain/encryptedObject.ts","webpack:///./jslib/common/src/services/crypto.service.ts","webpack:///./jslib/common/src/services/environment.service.ts","webpack:///./jslib/common/src/models/data/eventData.ts","webpack:///./jslib/common/src/models/request/eventRequest.ts","webpack:///./jslib/common/src/services/event.service.ts","webpack:///./jslib/common/src/models/export/card.ts","webpack:///./jslib/common/src/models/export/field.ts","webpack:///./jslib/common/src/models/export/identity.ts","webpack:///./jslib/common/src/models/export/loginUri.ts","webpack:///./jslib/common/src/models/export/login.ts","webpack:///./jslib/common/src/models/export/secureNote.ts","webpack:///./jslib/common/src/models/export/cipher.ts","webpack:///./jslib/common/src/models/export/cipherWithIds.ts","webpack:///./jslib/common/src/models/export/collection.ts","webpack:///./jslib/common/src/models/export/collectionWithId.ts","webpack:///./jslib/common/src/models/export/event.ts","webpack:///./jslib/common/src/models/domain/folder.ts","webpack:///./jslib/common/src/models/export/folder.ts","webpack:///./jslib/common/src/models/export/folderWithId.ts","webpack:///./jslib/common/src/enums/fileUploadType.ts","webpack:///./jslib/common/src/services/export.service.ts","webpack:///./jslib/common/src/services/azureFileUpload.service.ts","webpack:///./jslib/common/src/services/bitwardenFileUpload.service.ts","webpack:///./jslib/common/src/services/fileUpload.service.ts","webpack:///./jslib/common/src/models/data/folderData.ts","webpack:///./jslib/common/src/models/request/folderRequest.ts","webpack:///./jslib/common/src/services/folder.service.ts","webpack:///./jslib/common/src/enums/organizationUserType.ts","webpack:///./jslib/common/src/models/request/account/setKeyConnectorKeyRequest.ts","webpack:///./jslib/common/src/models/request/keyConnectorUserKeyRequest.ts","webpack:///./jslib/common/src/services/keyConnector.service.ts","webpack:///./jslib/common/src/enums/notificationType.ts","webpack:///./jslib/common/src/models/response/notificationResponse.ts","webpack:///./jslib/common/src/services/notifications.service.ts","webpack:///./jslib/common/src/models/domain/organization.ts","webpack:///./jslib/common/src/services/organization.service.ts","webpack:///./jslib/common/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/common/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/common/src/services/passwordGeneration.service.ts","webpack:///./jslib/common/src/models/data/policyData.ts","webpack:///./jslib/common/src/models/domain/policy.ts","webpack:///./jslib/common/src/models/domain/resetPasswordPolicyOptions.ts","webpack:///./jslib/common/src/enums/providerUserStatusType.ts","webpack:///./jslib/common/src/enums/providerUserType.ts","webpack:///./jslib/common/src/services/policy.service.ts","webpack:///./jslib/common/src/models/domain/provider.ts","webpack:///./jslib/common/src/services/provider.service.ts","webpack:///./jslib/common/src/services/search.service.ts","webpack:///./jslib/common/src/models/data/sendFileData.ts","webpack:///./jslib/common/src/models/data/sendTextData.ts","webpack:///./jslib/common/src/models/data/sendData.ts","webpack:///./jslib/common/src/models/domain/sendFile.ts","webpack:///./jslib/common/src/models/domain/sendText.ts","webpack:///./jslib/common/src/models/domain/send.ts","webpack:///./jslib/common/src/models/request/sendRequest.ts","webpack:///./jslib/common/src/services/send.service.ts","webpack:///./jslib/common/src/services/settings.service.ts","webpack:///./jslib/common/src/enums/storageLocation.ts","webpack:///./jslib/common/src/models/domain/state.ts","webpack:///./jslib/common/src/services/state.service.ts","webpack:///./jslib/common/src/services/token.service.ts","webpack:///./jslib/common/src/services/stateMigration.service.ts","webpack:///./jslib/common/src/models/data/organizationData.ts","webpack:///./jslib/common/src/models/data/providerData.ts","webpack:///./jslib/common/src/services/sync.service.ts","webpack:///./jslib/common/src/services/totp.service.ts","webpack:///./jslib/common/src/models/request/account/verifyOTPRequest.ts","webpack:///./jslib/common/src/services/userVerification.service.ts","webpack:///./jslib/common/src/services/vaultTimeout.service.ts","webpack:///./jslib/common/src/models/domain/decryptParameters.ts","webpack:///./jslib/common/src/services/webCryptoFunction.service.ts","webpack:///./jslib/angular/src/services/broadcaster.service.ts","webpack:///./jslib/common/src/services/broadcaster.service.ts","webpack:///./jslib/angular/src/components/password-reprompt.component.ts","webpack:///./jslib/angular/src/services/passwordReprompt.service.ts","webpack:///./jslib/angular/src/services/jslib-services.module.ts","webpack:///./jslib/common/src/services/container.service.ts","webpack:///./jslib/common/src/services/system.service.ts","webpack:///./src/models/browserComponentState.ts","webpack:///./src/models/browserGroupingsComponentState.ts","webpack:///./src/models/browserSendComponentState.ts","webpack:///./src/models/account.ts","webpack:///./src/models/autofillScript.ts","webpack:///./src/services/autofillConstants.ts","webpack:///./src/services/autofill.service.ts","webpack:///./jslib/common/src/enums/clientType.ts","webpack:///./src/services/browserCrypto.service.ts","webpack:///./src/services/browserMessaging.service.ts","webpack:///./src/services/browserMessagingPrivateModeBackground.service.ts","webpack:///./src/services/browserPlatformUtils.service.ts","webpack:///./src/services/browserStorage.service.ts","webpack:///./src/services/i18n.service.ts","webpack:///./jslib/common/src/services/i18n.service.ts","webpack:///./src/services/state.service.ts","webpack:///./src/services/vaultTimeout.service.ts","webpack:///./src/background/commands.background.ts","webpack:///./src/background/contextMenus.background.ts","webpack:///./src/background/idle.background.ts","webpack:///./src/background/nativeMessaging.background.ts","webpack:///./src/background/models/notificationQueueMessageType.ts","webpack:///./src/background/notification.background.ts","webpack:///./src/background/runtime.background.ts","webpack:///./src/background/tabs.background.ts","webpack:///./src/background/webRequest.background.ts","webpack:///./src/background/windows.background.ts","webpack:///./src/background/main.background.ts","webpack:///./src/services/browserMessagingPrivateModePopup.service.ts","webpack:///./src/popup/services/lock-guard.service.ts","webpack:///./src/popup/components/password-reprompt.component.ts","webpack:///./src/popup/components/password-reprompt.component.html","webpack:///./src/popup/services/password-reprompt.service.ts","webpack:///./src/popup/services/popup-search.service.ts","webpack:///./src/popup/services/unauth-guard.service.ts","webpack:///./src/popup/services/services.module.ts","webpack:///./src/popup/app.module.ts","webpack:///./src/popup/main.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 82255;\nmodule.exports = webpackEmptyAsyncContext;","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","export abstract class VaultTimeoutService {\n  isLocked: (userId?: string) => Promise<boolean>;\n  checkVaultTimeout: () => Promise<void>;\n  lock: (allowSoftLock?: boolean, userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: () => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<any>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount: BehaviorSubject<string>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricLocked: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricLocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecodedToken: (options?: StorageOptions) => Promise<any>;\n  setDecodedToken: (value: any, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedFolders: (options?: StorageOptions) => Promise<FolderView[]>;\n  setDecryptedFolders: (value: FolderView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableGravitars: (options?: StorageOptions) => Promise<boolean>;\n  setEnableGravitars: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLegacyEtmKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setLegacyEtmKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<any>;\n  setLocalData: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getLoginRedirect: (options?: StorageOptions) => Promise<any>;\n  setLoginRedirect: (value: any, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  getSettings: (options?: StorageOptions) => Promise<any>;\n  setSettings: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (!isAuthed) {\n      this.messagingService.send(\"authBlocked\");\n      return false;\n    }\n\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      this.router.navigate([\"lock\"], { queryParams: { promptBiometric: true } });\n      return false;\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      this.router.navigate([\"/remove-password\"]);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class LockGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    if (await this.vaultTimeoutService.isLocked()) {\n      return true;\n    }\n\n    const redirectUrl = (await this.stateService.getIsAuthenticated())\n      ? [this.homepage]\n      : [this.loginpage];\n\n    this.router.navigate(redirectUrl);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private router: Router,\n    private stateService: StateService\n  ) {}\n\n  async canActivate() {\n    const isAuthed = await this.stateService.getIsAuthenticated();\n    if (isAuthed) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      if (locked) {\n        this.router.navigate([\"lock\"]);\n      } else {\n        this.router.navigate([this.homepage]);\n      }\n      return false;\n    }\n    return true;\n  }\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { ThemeType } from \"../enums/themeType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isIE: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  getDefaultSystemTheme: () => Promise<ThemeType.Light | ThemeType.Dark>;\n  onDefaultSystemThemeChange: (\n    callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown\n  ) => unknown;\n  getEffectiveTheme: () => Promise<ThemeType>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n}\n","export abstract class I18nService {\n  locale: string;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive()\nexport class EnvironmentComponent {\n  @Output() onSaved = new EventEmitter();\n\n  iconsUrl: string;\n  identityUrl: string;\n  apiUrl: string;\n  webVaultUrl: string;\n  notificationsUrl: string;\n  baseUrl: string;\n  showCustom = false;\n\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService\n  ) {\n    const urls = this.environmentService.getUrls();\n\n    this.baseUrl = urls.base || \"\";\n    this.webVaultUrl = urls.webVault || \"\";\n    this.apiUrl = urls.api || \"\";\n    this.identityUrl = urls.identity || \"\";\n    this.iconsUrl = urls.icons || \"\";\n    this.notificationsUrl = urls.notifications || \"\";\n  }\n\n  async submit() {\n    const resUrls = await this.environmentService.setUrls({\n      base: this.baseUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      webVault: this.webVaultUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n    });\n\n    // re-set urls since service can change them, ex: prefixing https://\n    this.baseUrl = resUrls.base;\n    this.apiUrl = resUrls.api;\n    this.identityUrl = resUrls.identity;\n    this.webVaultUrl = resUrls.webVault;\n    this.iconsUrl = resUrls.icons;\n    this.notificationsUrl = resUrls.notifications;\n\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"environmentSaved\"));\n    this.saved();\n  }\n\n  toggleCustom() {\n    this.showCustom = !this.showCustom;\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBlurClick]\",\n})\nexport class BlurClickDirective {\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"click\") onClick() {\n    this.el.nativeElement.blur();\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appBoxRow]\",\n})\nexport class BoxRowDirective implements OnInit {\n  el: HTMLElement = null;\n  formEls: Element[];\n\n  constructor(elRef: ElementRef) {\n    this.el = elRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.formEls = Array.from(\n      this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea')\n    );\n    this.formEls.forEach((formEl) => {\n      formEl.addEventListener(\n        \"focus\",\n        () => {\n          this.el.classList.add(\"active\");\n        },\n        false\n      );\n\n      formEl.addEventListener(\n        \"blur\",\n        () => {\n          this.el.classList.remove(\"active\");\n        },\n        false\n      );\n    });\n  }\n\n  @HostListener(\"click\", [\"$event\"]) onClick(event: Event) {\n    const target = event.target as HTMLElement;\n    if (\n      target !== this.el &&\n      !target.classList.contains(\"progress\") &&\n      !target.classList.contains(\"progress-bar\")\n    ) {\n      return;\n    }\n\n    if (this.formEls.length > 0) {\n      const formEl = this.formEls[0] as HTMLElement;\n      if (formEl.tagName.toLowerCase() === \"input\") {\n        const inputEl = formEl as HTMLInputElement;\n        if (inputEl.type != null && inputEl.type.toLowerCase() === \"checkbox\") {\n          inputEl.click();\n          return;\n        }\n      }\n      formEl.focus();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { EnvironmentComponent as BaseEnvironmentComponent } from \"jslib-angular/components/environment.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-environment\",\n  templateUrl: \"environment.component.html\",\n})\nexport class EnvironmentComponent extends BaseEnvironmentComponent {\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    private router: Router\n  ) {\n    super(platformUtilsService, environmentService, i18nService);\n    this.showCustom = true;\n  }\n\n  saved() {\n    super.saved();\n    this.router.navigate([\"\"]);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"close\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"selfHostedEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"baseUrl\">{{ \"baseUrl\" | i18n }}</label>\n          <input\n            id=\"baseUrl\"\n            type=\"text\"\n            name=\"BaseUrl\"\n            [(ngModel)]=\"baseUrl\"\n            placeholder=\"ex. https://bitwarden.company.com\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"selfHostedEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"customEnvironment\" | i18n }}\n      </h2>\n      <div class=\"box-content\" [hidden]=\"!showCustom\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"webVaultUrl\">{{ \"webVaultUrl\" | i18n }}</label>\n          <input\n            id=\"webVaultUrl\"\n            type=\"text\"\n            name=\"WebVaultUrl\"\n            [(ngModel)]=\"webVaultUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"apiUrl\">{{ \"apiUrl\" | i18n }}</label>\n          <input\n            id=\"apiUrl\"\n            type=\"text\"\n            name=\"ApiUrl\"\n            [(ngModel)]=\"apiUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"identityUrl\">{{ \"identityUrl\" | i18n }}</label>\n          <input\n            id=\"identityUrl\"\n            type=\"text\"\n            name=\"IdentityUrl\"\n            [(ngModel)]=\"identityUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"notificationsUrl\">{{ \"notificationsUrl\" | i18n }}</label>\n          <input\n            id=\"notificationsUrl\"\n            type=\"text\"\n            name=\"NotificationsUrl\"\n            inputmode=\"url\"\n            [(ngModel)]=\"notificationsUrl\"\n            appInputVerbatim\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"iconsUrl\">{{ \"iconsUrl\" | i18n }}</label>\n          <input\n            id=\"iconsUrl\"\n            type=\"text\"\n            name=\"IconsUrl\"\n            [(ngModel)]=\"iconsUrl\"\n            inputmode=\"url\"\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\" [hidden]=\"!showCustom\">\n        {{ \"customEnvironmentFooter\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport abstract class ApiService {\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserBilling: () => Promise<BillingResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  deleteAccount: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<any>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<any>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postAccountRequestOTP: () => Promise<void>;\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postConvertToKeyConnector: () => Promise<void>;\n\n  getFolder: (id: string) => Promise<FolderResponse>;\n  postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n  putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n  deleteFolder: (id: string) => Promise<any>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  putPolicy: (\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ) => Promise<PolicyResponse>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n\n  getOrganization: (id: string) => Promise<OrganizationResponse>;\n  getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n  getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n  getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  getOrganizationAutoEnrollStatus: (\n    identifier: string\n  ) => Promise<OrganizationAutoEnrollStatusResponse>;\n  getOrganizationSso: (id: string) => Promise<OrganizationSsoResponse>;\n  postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  putOrganization: (\n    id: string,\n    request: OrganizationUpdateRequest\n  ) => Promise<OrganizationResponse>;\n  putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n  postLeaveOrganization: (id: string) => Promise<any>;\n  postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n  postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n  postOrganizationApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationRotateApiKey: (\n    id: string,\n    request: SecretVerificationRequest\n  ) => Promise<ApiKeyResponse>;\n  postOrganizationSso: (\n    id: string,\n    request: OrganizationSsoRequest\n  ) => Promise<OrganizationSsoResponse>;\n  postOrganizationUpgrade: (\n    id: string,\n    request: OrganizationUpgradeRequest\n  ) => Promise<PaymentResponse>;\n  postOrganizationUpdateSubscription: (\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ) => Promise<void>;\n  postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n  postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n  postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n  postOrganizationCancel: (id: string) => Promise<any>;\n  postOrganizationReinstate: (id: string) => Promise<any>;\n  deleteOrganization: (id: string, request: SecretVerificationRequest) => Promise<any>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n  getOrganizationKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  postOrganizationKeys: (\n    id: string,\n    request: OrganizationKeysRequest\n  ) => Promise<OrganizationKeysResponse>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<any>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<boolean>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n  time: (label: string) => void;\n  timeEnd: (label: string) => [number, number];\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\n@Injectable()\nexport class ValidationService {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\n\nimport { ValidationService } from \"../services/validation.service\";\n\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport * as tldjs from \"tldjs\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: any = null;\n  static tldEndingRegex =\n    /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n    Utils.global = Utils.isNode && !Utils.isBrowser ? global : window;\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = window.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return window.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(window.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(window.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.hostname !== \"\" ? url.hostname : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    let httpUrl = uriString.startsWith(\"http://\") || uriString.startsWith(\"https://\");\n    if (\n      !httpUrl &&\n      uriString.indexOf(\"://\") < 0 &&\n      Utils.tldEndingRegex.test(uriString) &&\n      uriString.indexOf(\"@\") < 0\n    ) {\n      uriString = \"http://\" + uriString;\n      httpUrl = true;\n    }\n\n    if (httpUrl) {\n      try {\n        const url = Utils.getUrlObject(uriString);\n        const validHostname = tldjs?.isValid != null ? tldjs.isValid(url.hostname) : true;\n        if (!validHostname) {\n          return null;\n        }\n\n        if (url.hostname === \"localhost\" || Utils.validIpAddress(url.hostname)) {\n          return url.hostname;\n        }\n\n        const urlDomain =\n          tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n        return urlDomain != null ? urlDomain : url.hostname;\n      } catch (e) {\n        // Invalid domain, try another approach below.\n      }\n    }\n\n    try {\n      const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n      if (domain != null) {\n        return domain;\n      }\n    } catch {\n      return null;\n    }\n\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction(i18nService: I18nService, prop: string) {\n    return (a: any, b: any) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop], b[prop])\n        : a[prop].localeCompare(b[prop]);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (uriString == null) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n    if (uriString === \"\") {\n      return null;\n    }\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  private static validIpAddress(ipString: string): boolean {\n    const ipRegex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return ipRegex.test(ipString);\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (window != null) {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"jslib-angular/components/hint.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"jslib-common/models/request/passwordHintRequest\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"passwordHint\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            appAutofocus\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enterEmailToGetHint\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: any) => Promise<string>;\n  generatePassphrase: (options: any) => Promise<string>;\n  getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: any\n  ) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: any) => Promise<any>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","import { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Component } from \"@angular/core\";\n\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"home.component.html\",\n})\nexport class HomeComponent {\n  constructor(\n    protected platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private stateService: StateService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private environmentService: EnvironmentService\n  ) {}\n\n  async launchSsoBrowser() {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    const state =\n      (await this.passwordGenerationService.generatePassword(passwordOptions)) +\n      \":clientId=browser\";\n    const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    await this.stateService.setSsoCodeVerifier(codeVerifier);\n    await this.stateService.setSsoState(state);\n\n    let url = this.environmentService.getWebVaultUrl();\n    if (url == null) {\n      url = \"https://vault.bitwarden.com\";\n    }\n\n    const redirectUri = url + \"/sso-connector.html\";\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      url +\n        \"/#/sso?clientId=browser\" +\n        \"&redirectUri=\" +\n        encodeURIComponent(redirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n}\n","<div class=\"center-content\">\n  <div class=\"content\">\n    <div class=\"logo-image\"></div>\n    <p class=\"lead text-center\">{{ \"loginOrCreateNewAccount\" | i18n }}</p>\n    <a class=\"btn primary block\" routerLink=\"/login\"\n      ><b>{{ \"login\" | i18n }}</b></a\n    >\n    <button type=\"button\" (click)=\"launchSsoBrowser()\" class=\"btn block\">\n      <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i> {{ \"enterpriseSingleSignOn\" | i18n }}\n    </button>\n    <a class=\"btn block\" routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n  </div>\n</div>\n<a routerLink=\"/environment\" class=\"settings-icon\">\n  <i class=\"bwi bwi-cog-f bwi-lg\" aria-hidden=\"true\"></i><span>&nbsp;{{ \"settings\" | i18n }}</span>\n</a>\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncString {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      // data and header\n      const encType = encryptedStringOrType as EncryptionType;\n\n      if (iv != null) {\n        this.encryptedString = encType + \".\" + iv + \"|\" + data;\n      } else {\n        this.encryptedString = encType + \".\" + data;\n      }\n\n      // mac\n      if (mac != null) {\n        this.encryptedString += \"|\" + mac;\n      }\n\n      this.encryptionType = encType;\n      this.data = data;\n      this.iv = iv;\n      this.mac = mac;\n\n      return;\n    }\n\n    this.encryptedString = encryptedStringOrType as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const headerPieces = this.encryptedString.split(\".\");\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        this.encryptionType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = this.encryptedString.split(\"|\");\n      this.encryptionType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    switch (this.encryptionType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      if (key == null) {\n        key = await cryptoService.getOrgKey(orgId);\n      }\n      this.decryptedValue = await cryptoService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { SecretVerificationRequest } from \"jslib-common/models/request/secretVerificationRequest\";\n\n@Directive()\nexport class LockComponent implements OnInit {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    // Load the first and observe updates\n    await this.load();\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  async submit() {\n    if (this.pinLock && (this.pin == null || this.pin === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n    if (!this.pinLock && (this.masterPassword == null || this.masterPassword === \"\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    if (this.pinLock) {\n      let failed = true;\n      try {\n        if (this.pinSet[0]) {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations,\n            await this.stateService.getDecryptedPinProtected()\n          );\n          const encKey = await this.cryptoService.getEncKey(key);\n          const protectedPin = await this.stateService.getProtectedPin();\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          failed = decPin !== this.pin;\n          if (!failed) {\n            await this.setKeyAndContinue(key);\n          }\n        } else {\n          const key = await this.cryptoService.makeKeyFromPin(\n            this.pin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          failed = false;\n          await this.setKeyAndContinue(key);\n        }\n      } catch {\n        failed = true;\n      }\n\n      if (failed) {\n        this.invalidPinAttempts++;\n        if (this.invalidPinAttempts >= 5) {\n          this.messagingService.send(\"logout\");\n          return;\n        }\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidPin\")\n        );\n      }\n    } else {\n      const key = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email,\n        kdf,\n        kdfIterations\n      );\n      const storedKeyHash = await this.cryptoService.getKeyHash();\n\n      let passwordValid = false;\n\n      if (storedKeyHash != null) {\n        passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n      } else {\n        const request = new SecretVerificationRequest();\n        const serverKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.ServerAuthorization\n        );\n        request.masterPasswordHash = serverKeyHash;\n        try {\n          this.formPromise = this.apiService.postAccountVerifyPassword(request);\n          await this.formPromise;\n          passwordValid = true;\n          const localKeyHash = await this.cryptoService.hashPassword(\n            this.masterPassword,\n            key,\n            HashPurpose.LocalAuthorization\n          );\n          await this.cryptoService.setKeyHash(localKeyHash);\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n\n      if (passwordValid) {\n        if (this.pinSet[0]) {\n          const protectedPin = await this.stateService.getProtectedPin();\n          const encKey = await this.cryptoService.getEncKey(key);\n          const decPin = await this.cryptoService.decryptToUtf8(\n            new EncString(protectedPin),\n            encKey\n          );\n          const pinKey = await this.cryptoService.makePinKey(\n            decPin,\n            this.email,\n            kdf,\n            kdfIterations\n          );\n          await this.stateService.setDecryptedPinProtected(\n            await this.cryptoService.encrypt(key.key, pinKey)\n          );\n        }\n        await this.setKeyAndContinue(key);\n      } else {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"invalidMasterPassword\")\n        );\n      }\n    }\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setBiometricLocked(false);\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { BrowserApi } from \"./browserApi\";\n\nexport class SafariApp {\n  static sendMessageToApp(command: string, data: any = null, resolveNow = false): Promise<any> {\n    if (!BrowserApi.isSafariApi) {\n      return Promise.resolve(null);\n    }\n    return new Promise((resolve) => {\n      const now = new Date();\n      const messageId =\n        now.getTime().toString() + \"_\" + Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n      (browser as any).runtime.sendNativeMessage(\n        \"com.bitwarden.desktop\",\n        {\n          id: messageId,\n          command: command,\n          data: data,\n          responseData: null,\n        },\n        (response: any) => {\n          resolve(response);\n        }\n      );\n    });\n  }\n}\n","import { Utils } from \"jslib-common/misc/utils\";\n\nimport { SafariApp } from \"./safariApp\";\n\nexport class BrowserApi {\n  static isWebExtensionsApi: boolean = typeof browser !== \"undefined\";\n  static isSafariApi: boolean =\n    navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n    navigator.userAgent.indexOf(\" Chrome/\") === -1 &&\n    navigator.userAgent.indexOf(\" Chromium/\") === -1;\n  static isChromeApi: boolean = !BrowserApi.isSafariApi && typeof chrome !== \"undefined\";\n  static isFirefoxOnAndroid: boolean =\n    navigator.userAgent.indexOf(\"Firefox/\") !== -1 && navigator.userAgent.indexOf(\"Android\") !== -1;\n\n  static async getTabFromCurrentWindowId(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      windowId: chrome.windows.WINDOW_ID_CURRENT,\n    });\n  }\n\n  static async getTabFromCurrentWindow(): Promise<chrome.tabs.Tab> | null {\n    return await BrowserApi.tabsQueryFirst({\n      active: true,\n      currentWindow: true,\n    });\n  }\n\n  static async getActiveTabs(): Promise<chrome.tabs.Tab[]> {\n    return await BrowserApi.tabsQuery({\n      active: true,\n    });\n  }\n\n  static async tabsQuery(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab[]> {\n    return new Promise((resolve) => {\n      chrome.tabs.query(options, (tabs: any[]) => {\n        resolve(tabs);\n      });\n    });\n  }\n\n  static async tabsQueryFirst(options: chrome.tabs.QueryInfo): Promise<chrome.tabs.Tab> | null {\n    const tabs = await BrowserApi.tabsQuery(options);\n    if (tabs.length > 0) {\n      return tabs[0];\n    }\n\n    return null;\n  }\n\n  static tabSendMessageData(\n    tab: chrome.tabs.Tab,\n    command: string,\n    data: any = null\n  ): Promise<any[]> {\n    const obj: any = {\n      command: command,\n    };\n\n    if (data != null) {\n      obj.data = data;\n    }\n\n    return BrowserApi.tabSendMessage(tab, obj);\n  }\n\n  static async tabSendMessage(\n    tab: chrome.tabs.Tab,\n    obj: any,\n    options: chrome.tabs.MessageSendOptions = null\n  ): Promise<any> {\n    if (!tab || !tab.id) {\n      return;\n    }\n\n    return new Promise<void>((resolve) => {\n      chrome.tabs.sendMessage(tab.id, obj, options, () => {\n        if (chrome.runtime.lastError) {\n          // Some error happened\n        }\n        resolve();\n      });\n    });\n  }\n\n  static async getPrivateModeWindows(): Promise<browser.windows.Window[]> {\n    return (await browser.windows.getAll()).filter((win) => win.incognito);\n  }\n\n  static async onWindowCreated(callback: (win: chrome.windows.Window) => any) {\n    return chrome.windows.onCreated.addListener(callback);\n  }\n\n  static getBackgroundPage(): any {\n    return chrome.extension.getBackgroundPage();\n  }\n\n  static getApplicationVersion(): string {\n    return chrome.runtime.getManifest().version;\n  }\n\n  static async isPopupOpen(): Promise<boolean> {\n    return Promise.resolve(chrome.extension.getViews({ type: \"popup\" }).length > 0);\n  }\n\n  static createNewTab(url: string, extensionPage = false, active = true) {\n    chrome.tabs.create({ url: url, active: active });\n  }\n\n  static messageListener(\n    name: string,\n    callback: (message: any, sender: chrome.runtime.MessageSender, response: any) => void\n  ) {\n    chrome.runtime.onMessage.addListener(\n      (msg: any, sender: chrome.runtime.MessageSender, response: any) => {\n        callback(msg, sender, response);\n      }\n    );\n  }\n\n  static async closeLoginTab() {\n    const tabs = await BrowserApi.tabsQuery({\n      active: true,\n      title: \"Bitwarden\",\n      windowType: \"normal\",\n      currentWindow: true,\n    });\n\n    if (tabs.length === 0) {\n      return;\n    }\n\n    const tabToClose = tabs[tabs.length - 1].id;\n    chrome.tabs.remove(tabToClose);\n  }\n\n  static async focusSpecifiedTab(tabId: number) {\n    chrome.tabs.update(tabId, { active: true, highlighted: true });\n  }\n\n  static closePopup(win: Window) {\n    if (BrowserApi.isWebExtensionsApi && BrowserApi.isFirefoxOnAndroid) {\n      // Reactivating the active tab dismisses the popup tab. The promise final\n      // condition is only called if the popup wasn't already dismissed (future proofing).\n      // ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1433604\n      browser.tabs.update({ active: true }).finally(win.close);\n    } else {\n      win.close();\n    }\n  }\n\n  static downloadFile(win: Window, blobData: any, blobOptions: any, fileName: string) {\n    if (BrowserApi.isSafariApi) {\n      const type = blobOptions != null ? blobOptions.type : null;\n      let data: string = null;\n      if (type === \"text/plain\" && typeof blobData === \"string\") {\n        data = blobData;\n      } else {\n        data = Utils.fromBufferToB64(blobData);\n      }\n      SafariApp.sendMessageToApp(\n        \"downloadFile\",\n        JSON.stringify({\n          blobData: data,\n          blobOptions: blobOptions,\n          fileName: fileName,\n        }),\n        true\n      );\n    } else {\n      const blob = new Blob([blobData], blobOptions);\n      if (navigator.msSaveOrOpenBlob) {\n        navigator.msSaveBlob(blob, fileName);\n      } else {\n        const a = win.document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = fileName;\n        win.document.body.appendChild(a);\n        a.click();\n        win.document.body.removeChild(a);\n      }\n    }\n  }\n\n  static gaFilter() {\n    return process.env.ENV !== \"production\";\n  }\n\n  static getUILanguage(win: Window) {\n    return chrome.i18n.getUILanguage();\n  }\n\n  static reloadExtension(win: Window) {\n    if (win != null) {\n      return win.location.reload(true);\n    } else {\n      return chrome.runtime.reload();\n    }\n  }\n\n  static reloadOpenWindows() {\n    const views = chrome.extension.getViews() as Window[];\n    views\n      .filter((w) => w.location.href != null)\n      .forEach((w) => {\n        w.location.reload();\n      });\n  }\n\n  static connectNative(application: string): browser.runtime.Port | chrome.runtime.Port {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.connectNative(application);\n    } else if (BrowserApi.isChromeApi) {\n      return chrome.runtime.connectNative(application);\n    }\n  }\n\n  static requestPermission(permission: any) {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.permissions.request(permission);\n    }\n    return new Promise((resolve, reject) => {\n      chrome.permissions.request(permission, resolve);\n    });\n  }\n\n  static getPlatformInfo(): Promise<browser.runtime.PlatformInfo | chrome.runtime.PlatformInfo> {\n    if (BrowserApi.isWebExtensionsApi) {\n      return browser.runtime.getPlatformInfo();\n    }\n    return new Promise((resolve) => {\n      chrome.runtime.getPlatformInfo(resolve);\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Injectable()\nexport class PopupUtilsService {\n  constructor(private privateMode: boolean = false) {}\n\n  inSidebar(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=sidebar\") > -1;\n  }\n\n  inTab(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=tab\") > -1;\n  }\n\n  inPopout(win: Window): boolean {\n    return win.location.search !== \"\" && win.location.search.indexOf(\"uilocation=popout\") > -1;\n  }\n\n  inPopup(win: Window): boolean {\n    return (\n      win.location.search === \"\" ||\n      win.location.search.indexOf(\"uilocation=\") === -1 ||\n      win.location.search.indexOf(\"uilocation=popup\") > -1\n    );\n  }\n\n  inPrivateMode(): boolean {\n    return this.privateMode;\n  }\n\n  getContentScrollY(win: Window, scrollingContainer = \"content\"): number {\n    const content = win.document.getElementsByTagName(scrollingContainer)[0];\n    return content.scrollTop;\n  }\n\n  setContentScrollY(win: Window, scrollY: number, scrollingContainer = \"content\"): void {\n    if (scrollY != null) {\n      const content = win.document.getElementsByTagName(scrollingContainer)[0];\n      content.scrollTop = scrollY;\n    }\n  }\n\n  popOut(win: Window, href: string = null): void {\n    if (href === null) {\n      href = win.location.href;\n    }\n\n    if (typeof chrome !== \"undefined\" && chrome.windows && chrome.windows.create) {\n      if (href.indexOf(\"?uilocation=\") > -1) {\n        href = href\n          .replace(\"uilocation=popup\", \"uilocation=popout\")\n          .replace(\"uilocation=tab\", \"uilocation=popout\")\n          .replace(\"uilocation=sidebar\", \"uilocation=popout\");\n      } else {\n        const hrefParts = href.split(\"#\");\n        href =\n          hrefParts[0] + \"?uilocation=popout\" + (hrefParts.length > 0 ? \"#\" + hrefParts[1] : \"\");\n      }\n\n      const bodyRect = document.querySelector(\"body\").getBoundingClientRect();\n      chrome.windows.create({\n        url: href,\n        type: \"popup\",\n        width: Math.round(bodyRect.width ? bodyRect.width + 60 : 375),\n        height: Math.round(bodyRect.height || 600),\n      });\n\n      if (this.inPopup(win)) {\n        BrowserApi.closePopup(win);\n      }\n    } else if (typeof chrome !== \"undefined\" && chrome.tabs && chrome.tabs.create) {\n      href = href\n        .replace(\"uilocation=popup\", \"uilocation=tab\")\n        .replace(\"uilocation=popout\", \"uilocation=tab\")\n        .replace(\"uilocation=sidebar\", \"uilocation=tab\");\n      chrome.tabs.create({\n        url: href,\n      });\n    }\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    alreadyEncrypted: boolean,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","<app-callout type=\"warning\" *ngIf=\"showWarning\">\n  {{ \"privateModeWarning\" | i18n }}\n  <a href=\"https://bitwarden.com/help/article/private-mode/\" target=\"_blank\" rel=\"noopener\">{{\n    \"learnMore\" | i18n\n  }}</a>\n</app-callout>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-private-mode-warning\",\n  templateUrl: \"private-mode-warning.component.html\",\n})\nexport class PrivateModeWarningComponent implements OnInit {\n  showWarning = false;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showWarning = this.popupUtilsService.inPrivateMode();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","<form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\"></div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"verifyIdentity\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick *ngIf=\"!hideInput\">{{ \"unlock\" | i18n }}</button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow *ngIf=\"!hideInput\">\n          <div class=\"row-main\" *ngIf=\"pinLock\">\n            <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n            <input\n              id=\"pin\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"PIN\"\n              class=\"monospaced\"\n              [(ngModel)]=\"pin\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"row-main\" *ngIf=\"!pinLock\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"yourVaultIsLocked\" | i18n }}</p>\n        {{ \"loggedInAsOn\" | i18n: email:webVaultHostname }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"biometricLock\">\n      <div class=\"box-footer\">\n        <button type=\"button\" class=\"btn primary block\" (click)=\"unlockBiometric()\" appStopClick>\n          {{ \"unlockWithBiometrics\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <button type=\"button\" appStopClick (click)=\"logOut()\">{{ \"logOut\" | i18n }}</button>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n  </content>\n</form>\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2\";\n\nimport { LockComponent as BaseLockComponent } from \"jslib-angular/components/lock.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  private isInitialLockScreen: boolean;\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    environmentService: EnvironmentService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n    this.successRoute = \"/tabs/current\";\n    this.isInitialLockScreen = (window as any).previousPopupUrl == null;\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n\n    window.setTimeout(async () => {\n      document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\").focus();\n      if (this.biometricLock && !disableAutoBiometricsPrompt && this.isInitialLockScreen) {\n        if (await this.vaultTimeoutService.isLocked()) {\n          await this.unlockBiometric();\n        }\n      }\n    }, 100);\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const div = document.createElement(\"div\");\n    div.innerHTML = `<div class=\"swal2-text\">${this.i18nService.t(\"awaitDesktop\")}</div>`;\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"cancel\"),\n      showConfirmButton: false,\n    });\n\n    const success = await super.unlockBiometric();\n\n    // Avoid closing the error dialogs\n    if (success) {\n      Swal.close();\n    }\n\n    return success;\n  }\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenRequestTwoFactor } from \"../request/identityToken/tokenRequest\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenRequestTwoFactor\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"jslib-common/misc/captcha_iframe\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequest\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  logIn: (\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n}\n","import { Directive, Input, NgZone, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() email = \"\";\n  @Input() rememberEmail = true;\n\n  masterPassword = \"\";\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n  }\n\n  async ngOnInit() {\n    if (this.email == null || this.email === \"\") {\n      this.email = await this.stateService.getRememberedEmail();\n      if (this.email == null) {\n        this.email = \"\";\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      this.rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    if (Utils.isBrowser && !Utils.isNode) {\n      this.focusInput();\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        this.email,\n        this.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (this.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(this.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  protected focusInput() {\n    document\n      .getElementById(this.email == null || this.email === \"\" ? \"email\" : \"masterPassword\")\n      .focus();\n  }\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LoginComponent as BaseLoginComponent } from \"jslib-angular/components/login.component\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent {\n  protected alwaysRememberEmail = true;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected stateService: StateService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    syncService: SyncService,\n    logService: LogService,\n    ngZone: NgZone\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone\n    );\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n  }\n\n  settings() {\n    this.router.navigate([\"environment\"]);\n  }\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"appName\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"login\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n      </div>\n    </div>\n    <p class=\"text-center\">\n      <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n    </p>\n    <app-private-mode-warning></app-private-mode-warning>\n  </content>\n</form>\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captchaProtectedRequest\";\nimport { KeysRequest } from \"./keysRequest\";\nimport { ReferenceEventRequest } from \"./referenceEventRequest\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { ReferenceEventRequest } from \"jslib-common/models/request/referenceEventRequest\";\nimport { RegisterRequest } from \"jslib-common/models/request/registerRequest\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  name = \"\";\n  email = \"\";\n  masterPassword = \"\";\n  confirmMasterPassword = \"\";\n  hint = \"\";\n  showPassword = false;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  acceptPolicies = false;\n\n  protected successRoute = \"login\";\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  async submit() {\n    if (!this.acceptPolicies && this.showTerms) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesError\")\n      );\n      return;\n    }\n\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return;\n    }\n    if (this.masterPassword !== this.confirmMasterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return;\n      }\n    }\n\n    if (this.hint === this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.name = this.name === \"\" ? null : this.name;\n    this.email = this.email.trim().toLowerCase();\n    const kdf = KdfType.PBKDF2_SHA256;\n    const useLowerKdf = this.platformUtilsService.isIE();\n    const kdfIterations = useLowerKdf ? 10000 : 100000;\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      this.email,\n      this.name,\n      hashedPassword,\n      this.hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n\n    try {\n      this.formPromise = this.apiService.postRegister(request);\n      try {\n        await this.formPromise;\n      } catch (e) {\n        if (this.handleCaptchaRequired(e)) {\n          return;\n        } else {\n          throw e;\n        }\n      }\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"newAccountCreated\"));\n      this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (this.name != null && this.name !== \"\") {\n      userInput = userInput.concat(this.name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"createAccount\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n          <input\n            id=\"email\"\n            type=\"text\"\n            name=\"Email\"\n            [(ngModel)]=\"email\"\n            required\n            [appAutofocus]=\"email === ''\"\n            inputmode=\"email\"\n            appInputVerbatim=\"false\"\n          />\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                  *ngIf=\"masterPasswordScoreText\"\n                >\n                  {{ masterPasswordScoreText }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                [appAutofocus]=\"email !== ''\"\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"confirmMasterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n    <div [hidden]=\"!showCaptcha()\"><iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe></div>\n    <div class=\"box last\" *ngIf=\"showTerms\">\n      <div class=\"box-content\">\n        <div\n          class=\"box-content-row box-content-row-checkbox box-content-row-checkbox-left box-content-row-word-break\"\n          appBoxRow\n        >\n          <input\n            type=\"checkbox\"\n            id=\"acceptPolicies\"\n            [(ngModel)]=\"acceptPolicies\"\n            name=\"AcceptPolicies\"\n          />\n          <label for=\"acceptPolicies\">\n            {{ \"acceptPolicies\" | i18n }}<br />\n            <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n              \"termsOfService\" | i18n\n            }}</a\n            >,\n            <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n              \"privacyPolicy\" | i18n\n            }}</a>\n          </label>\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"jslib-angular/components/register.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<any>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.apiService.postLeaveOrganization(this.organization.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<header>\n  <div class=\"left\"></div>\n  <div class=\"center\">\n    <span class=\"title\">{{ \"removeMasterPassword\" | i18n }}</span>\n  </div>\n  <div class=\"right\"></div>\n</header>\n\n<content>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row\" appBoxRow>\n        <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn block primary\"\n          (click)=\"convert()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"continuing\"\n          ></i>\n          {{ \"removeMasterPassword\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-content-row\">\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary block\"\n          (click)=\"leave()\"\n          [disabled]=\"actionPromise\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"leaving\"\n          ></i>\n          {{ \"leaveOrganization\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</content>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"jslib-angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","export class OrganizationUserResetPasswordEnrollmentRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keysRequest\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport abstract class PolicyService {\n  clearCache: () => void;\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  getPolicyForOrganization: (policyType: PolicyType, organizationId: string) => Promise<Policy>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<any>;\n  clear: (userId?: string) => Promise<any>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  masterPasswordScore: number;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  private masterPasswordStrengthTimeout: any;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.enforcedPolicyOptions ??= await this.policyService.getMasterPasswordPolicyOptions();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassLength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      this.masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  updatePasswordStrength() {\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        this.masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n    }, 300);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  private getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const atPosition = this.email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        this.email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { HashPurpose } from \"jslib-common/enums/hashPurpose\";\nimport { KdfType } from \"jslib-common/enums/kdfType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { KeysRequest } from \"jslib-common/models/request/keysRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"jslib-common/models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { SetPasswordRequest } from \"jslib-common/models/request/setPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.apiService.getOrganizationAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = KdfType.PBKDF2_SHA256;\n    const useLowerKdf = this.platformUtilsService.isIE();\n    this.kdfIterations = useLowerKdf ? 10000 : 100000;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.apiService.getOrganizationKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/home\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"setMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"full-loading-spinner\" *ngIf=\"syncLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n    </div>\n    <div *ngIf=\"!syncLoading\">\n      <div class=\"box\">\n        <app-callout type=\"tip\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n        <app-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"resetPasswordAutoEnroll\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPassword\"\n                  >{{ \"masterPass\" | i18n }}\n                  <strong\n                    class=\"sub-label text-{{ masterPasswordScoreColor }}\"\n                    *ngIf=\"masterPasswordScoreText\"\n                  >\n                    {{ masterPasswordScoreText }}\n                  </strong>\n                </label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  (input)=\"updatePasswordStrength()\"\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n            <div class=\"progress\">\n              <div\n                class=\"progress-bar bg-{{ masterPasswordScoreColor }}\"\n                role=\"progressbar\"\n                aria-valuenow=\"0\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                [ngStyle]=\"{ width: masterPasswordScoreWidth + '%' }\"\n                attr.aria-valuenow=\"{{ masterPasswordScoreWidth }}\"\n              ></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassDesc\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <div class=\"box-content-row-flex\">\n              <div class=\"row-main\">\n                <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPasswordRetype\"\n                  type=\"password\"\n                  name=\"MasterPasswordRetype\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPasswordRetype\"\n                  required\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(true)\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"box last\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"masterPassHintDesc\" | i18n }}\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"jslib-angular/components/set-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService\n    );\n  }\n\n  get masterPasswordScoreWidth() {\n    return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n  }\n\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { SsoLogInCredentials } from \"jslib-common/models/domain/logInCredentials\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    this.initiateSsoFormPromise = this.preValidate();\n    if (await this.initiateSsoFormPromise) {\n      const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n      this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n    }\n  }\n\n  async preValidate(): Promise<boolean> {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return false;\n    }\n    return await this.apiService.preValidateSso(this.identifier);\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n      if (e.message === \"Unable to reach key connector\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorUnavailable\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent as BaseSsoComponent } from \"jslib-angular/components/sso.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    syncService: SyncService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    const url = this.environmentService.getWebVaultUrl();\n\n    this.redirectUri = url + \"/sso-connector.html\";\n    this.clientId = \"browser\";\n\n    super.onSuccessfulLogin = async () => {\n      await syncService.fullSync(true);\n      if (await this.vaultTimeoutService.isLocked()) {\n        // If the vault is unlocked then this will clear keys from memory, which we don't want to do\n        BrowserApi.reloadOpenWindows();\n      }\n\n      const thisWindow = window.open(\"\", \"_self\");\n      thisWindow.close();\n    };\n  }\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/2fa\">{{ \"close\" | i18n }}</a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"twoStepOptions\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        *ngFor=\"let p of providers\"\n        class=\"box-content-row\"\n        (click)=\"choose(p)\"\n      >\n        <span class=\"text\">{{ p.name }}</span>\n        <span class=\"detail\">{{ p.description }}</span>\n      </button>\n      <button type=\"button\" appStopClick class=\"box-content-row\" (click)=\"recover()\">\n        <span class=\"text\">{{ \"recoveryCodeTitle\" | i18n }}</span>\n        <span class=\"detail\">{{ \"recoveryCodeDesc\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</content>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"jslib-angular/components/two-factor-options.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n\n  choose(p: any) {\n    super.choose(p);\n    this.twoFactorService.setSelectedProvider(p.type);\n    this.router.navigate([\"2fa\"]);\n  }\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secretVerificationRequest\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"jslib-common/misc/webauthn_iframe\";\nimport { AuthResult } from \"jslib-common/models/domain/authResult\";\nimport { TwoFactorEmailRequest } from \"jslib-common/models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviders } from \"jslib-common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      {\n        provider: this.selectedProviderType,\n        token: this.token,\n        remember: this.remember,\n      },\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","export abstract class BroadcasterService {\n  send: (message: any, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: any) => any) => void;\n  unsubscribe: (id: string) => void;\n}\n","<form id=\"two-factor-page\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/login\">{{ \"back\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading\"\n        *ngIf=\"\n          selectedProviderType != null &&\n          selectedProviderType !== providerType.Duo &&\n          selectedProviderType !== providerType.OrganizationDuo &&\n          (selectedProviderType !== providerType.WebAuthn || form.loading)\n        \"\n      >\n        <span [hidden]=\"form.loading\">{{ \"continue\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Authenticator ||\n        selectedProviderType === providerType.Email\n      \"\n    >\n      <div class=\"content text-center\">\n        <span *ngIf=\"selectedProviderType === providerType.Authenticator\">\n          {{ \"enterVerificationCodeApp\" | i18n }}\n        </span>\n        <span *ngIf=\"selectedProviderType === providerType.Email\">\n          {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n        </span>\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"text\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              inputmode=\"tel\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n      <div class=\"content text-center\">\n        <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n        <img src=\"../images/yubikey.jpg\" class=\"img-rounded img-responsive\" alt=\"\" />\n      </div>\n      <div class=\"box first\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n            <input\n              id=\"code\"\n              type=\"password\"\n              name=\"Code\"\n              [(ngModel)]=\"token\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && !webAuthnNewTab\">\n      <div id=\"web-authn-frame\"><iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn && webAuthnNewTab\">\n      <div class=\"content text-center\" *ngIf=\"webAuthnNewTab\">\n        <p class=\"text-center\">{{ \"webAuthnNewTab\" | i18n }}</p>\n        <button type=\"button\" class=\"btn primary block\" (click)=\"authWebAuthn()\" appStopClick>\n          {{ \"webAuthnNewTabOpen\" | i18n }}\n        </button>\n      </div>\n    </ng-container>\n    <ng-container\n      *ngIf=\"\n        selectedProviderType === providerType.Duo ||\n        selectedProviderType === providerType.OrganizationDuo\n      \"\n    >\n      <div id=\"duo-frame\"><iframe id=\"duo_iframe\"></iframe></div>\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"remember\">{{ \"rememberMe\" | i18n }}</label>\n            <input id=\"remember\" type=\"checkbox\" name=\"Remember\" [(ngModel)]=\"remember\" />\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <div class=\"box-content-row\" [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"content\" *ngIf=\"selectedProviderType == null\">\n      <p class=\"text-center\">{{ \"noTwoStepProviders\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"noTwoStepProviders2\" | i18n }}</p>\n    </div>\n    <div class=\"content no-vpad\" *ngIf=\"selectedProviderType != null\">\n      <p class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"anotherMethod()\">\n          {{ \"useAnotherTwoStepMethod\" | i18n }}\n        </button>\n      </p>\n      <p *ngIf=\"selectedProviderType === providerType.Email\" class=\"text-center\">\n        <button type=\"button\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\">\n          {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n        </button>\n      </p>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"jslib-angular/components/two-factor.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"jslib-common/enums/twoFactorProviderType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"TwoFactorComponent\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  showNewWindowMessage = false;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    environmentService: EnvironmentService,\n    private broadcasterService: BroadcasterService,\n    private popupUtilsService: PopupUtilsService,\n    stateService: StateService,\n    route: ActivatedRoute,\n    private messagingService: MessagingService,\n    logService: LogService,\n    twoFactorService: TwoFactorService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService\n    );\n    super.onSuccessfulLogin = () => {\n      return syncService.fullSync(true);\n    };\n    super.successRoute = \"/tabs/vault\";\n    this.webAuthnNewTab =\n      this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari();\n  }\n\n  async ngOnInit() {\n    if (this.route.snapshot.paramMap.has(\"webAuthnResponse\")) {\n      // WebAuthn fallback response\n      this.selectedProviderType = TwoFactorProviderType.WebAuthn;\n      this.token = this.route.snapshot.paramMap.get(\"webAuthnResponse\");\n      super.onSuccessfulLogin = async () => {\n        this.syncService.fullSync(true);\n        this.messagingService.send(\"reloadPopup\");\n        window.close();\n      };\n      this.remember = this.route.snapshot.paramMap.get(\"remember\") === \"true\";\n      await this.doSubmit();\n      return;\n    }\n\n    await super.ngOnInit();\n    if (this.selectedProviderType == null) {\n      return;\n    }\n\n    // WebAuthn prompt appears inside the popup on linux, and requires a larger popup width\n    // than usual to avoid cutting off the dialog.\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.add(\"linux-webauthn\");\n    }\n\n    if (\n      this.selectedProviderType === TwoFactorProviderType.Email &&\n      this.popupUtilsService.inPopup(window)\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"popup2faCloseMessage\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (confirmed) {\n        this.popupUtilsService.popOut(window);\n      }\n    }\n\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.sso === \"true\") {\n        super.onSuccessfulLogin = () => {\n          BrowserApi.reloadOpenWindows();\n          const thisWindow = window.open(\"\", \"_self\");\n          thisWindow.close();\n          return this.syncService.fullSync(true);\n        };\n      }\n    });\n  }\n\n  async ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && (await this.isLinux())) {\n      document.body.classList.remove(\"linux-webauthn\");\n    }\n    super.ngOnDestroy();\n  }\n\n  anotherMethod() {\n    this.router.navigate([\"2fa-options\"]);\n  }\n\n  async isLinux() {\n    return (await BrowserApi.getPlatformInfo()).os === \"linux\";\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organizationUserResetPasswordRequest\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { MasterPasswordPolicyOptions } from \"jslib-common/models/domain/masterPasswordPolicyOptions\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\nimport { UpdateTempPasswordRequest } from \"jslib-common/models/request/updateTempPasswordRequest\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a (click)=\"logOut()\">{{ \"logOut\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"updateMasterPassword\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <app-callout type=\"warning\" title=\"{{ 'updateMasterPassword' | i18n }}\">\n      {{ \"updateMasterPasswordWarning\" | i18n }}\n    </app-callout>\n    <app-callout\n      type=\"info\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      *ngIf=\"enforcedPolicyOptions\"\n    >\n    </app-callout>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <div class=\"box-content-row-flex\">\n            <div class=\"row-main\">\n              <label for=\"masterPassword\">\n                {{ \"masterPass\" | i18n }}\n                <strong\n                  class=\"sub-label text-{{ masterPasswordScoreStyle.Color }}\"\n                  *ngIf=\"masterPasswordScoreStyle.Text\"\n                >\n                  {{ masterPasswordScoreStyle.Text }}\n                </strong>\n              </label>\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"monospaced\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                (input)=\"updatePasswordStrength()\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(false)\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"progress\">\n            <div\n              class=\"progress-bar bg-{{ masterPasswordScoreStyle.Color }}\"\n              role=\"progressbar\"\n              aria-valuenow=\"0\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              [ngStyle]=\"{ width: masterPasswordScoreStyle.Width + '%' }\"\n              attr.aria-valuenow=\"{{ masterPasswordScoreStyle.Width }}\"\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n          <div class=\"row-main\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <input\n              id=\"masterPasswordRetype\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPasswordRetype\"\n              class=\"monospaced\"\n              [(ngModel)]=\"masterPasswordRetype\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword(true)\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n          <input id=\"hint\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"masterPassHintDesc\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"jslib-angular/components/update-temp-password.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\ninterface MasterPasswordScore {\n  Color: string;\n  Text: string;\n  Width: number;\n}\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  get masterPasswordScoreStyle(): MasterPasswordScore {\n    const scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    switch (this.masterPasswordScore) {\n      case 4:\n        return {\n          Color: \"bg-success\",\n          Text: \"strong\",\n          Width: scoreWidth,\n        };\n      case 3:\n        return {\n          Color: \"bg-primary\",\n          Text: \"good\",\n          Width: scoreWidth,\n        };\n      case 2:\n        return {\n          Color: \"bg-warning\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n      default:\n        return {\n          Color: \"bg-danger\",\n          Text: \"weak\",\n          Width: scoreWidth,\n        };\n    }\n  }\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    syncService: SyncService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"jslib-common/models/domain/generatedPasswordHistory\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"jslib-common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"close()\">\n      <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick type=\"button\" (click)=\"clear()\">\n      {{ \"clear\" | i18n }}\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <div\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"h.password | colorPassword\"\n            ></div>\n            <span class=\"detail\">{{ h.date | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"jslib-angular/components/password-generator-history.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordGeneratorPolicyOptions } from \"jslib-common/models/domain/passwordGeneratorPolicyOptions\";\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n  @Input() showSelect = false;\n  @Output() onSelected = new EventEmitter<string>();\n\n  passTypeOptions: any[];\n  options: any = {};\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n\n  async ngOnInit() {\n    const optionsResponse = await this.passwordGenerationService.getOptions();\n    this.options = optionsResponse[0];\n    this.enforcedPolicyOptions = optionsResponse[1];\n    this.avoidAmbiguous = !this.options.ambiguous;\n    this.options.type = this.options.type === \"passphrase\" ? \"passphrase\" : \"password\";\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderChanged() {\n    this.saveOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizeOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n  }\n\n  async saveOptions(regenerate = true) {\n    this.normalizeOptions();\n    await this.passwordGenerationService.saveOptions(this.options);\n\n    if (regenerate) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    this.password = await this.passwordGenerationService.generatePassword(this.options);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  copy() {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.password);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  private normalizeOptions() {\n    // Application level normalize options depedent on class variables\n    this.options.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.options.uppercase &&\n      !this.options.lowercase &&\n      !this.options.number &&\n      !this.options.special\n    ) {\n      this.options.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-pop-out\",\n  templateUrl: \"pop-out.component.html\",\n})\nexport class PopOutComponent implements OnInit {\n  @Input() show = true;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private popupUtilsService: PopupUtilsService\n  ) {}\n\n  ngOnInit() {\n    if (this.show) {\n      if (this.popupUtilsService.inSidebar(window) && this.platformUtilsService.isFirefox()) {\n        this.show = false;\n      }\n    }\n  }\n\n  expand() {\n    this.popupUtilsService.popOut(window);\n  }\n}\n","<ng-container>\n  <button type=\"button\" (click)=\"expand()\" appA11yTitle=\"{{ 'popOutNewWindow' | i18n }}\">\n    <i class=\"bwi bwi-external-link bwi-rotate-270 bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n  </button>\n</ng-container>\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!showSelect\"></app-pop-out>\n    <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"showSelect\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passGen\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"select()\" *ngIf=\"showSelect\">\n      {{ \"select\" | i18n }}\n    </button>\n  </div>\n</header>\n<content>\n  <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\">\n    {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n  </app-callout>\n  <div class=\"password-block\">\n    <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row text-primary\"\n        appStopClick\n        appBlurClick\n        (click)=\"regenerate()\"\n      >\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row text-primary\"\n        appStopClick\n        appBlurClick\n        (click)=\"copy()\"\n      >\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex\" routerLink=\"/generator-history\">\n        <div class=\"row-main\">{{ \"passwordHistory\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"options\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label class=\"sr-only radio-header\">{{ \"type\" | i18n }}</label>\n        <div class=\"radio-group text-default\" appBoxRow *ngFor=\"let o of passTypeOptions\">\n          <input\n            type=\"radio\"\n            [(ngModel)]=\"options.type\"\n            name=\"Type_{{ o.value }}\"\n            id=\"type_{{ o.value }}\"\n            [value]=\"o.value\"\n            (change)=\"saveOptions()\"\n            [checked]=\"options.type === o.value\"\n          />\n          <label for=\"type_{{ o.value }}\">\n            {{ o.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"options.type === 'passphrase'\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-input\" appBoxRow>\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          (change)=\"saveOptions()\"\n          [(ngModel)]=\"options.numWords\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-input\" appBoxRow>\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          type=\"text\"\n          maxlength=\"1\"\n          (input)=\"saveOptions()\"\n          [(ngModel)]=\"options.wordSeparator\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n        <input\n          id=\"capitalize\"\n          type=\"checkbox\"\n          (change)=\"saveOptions()\"\n          [(ngModel)]=\"options.capitalize\"\n          [disabled]=\"enforcedPolicyOptions?.capitalize\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"include-number\">{{ \"includeNumber\" | i18n }}</label>\n        <input\n          id=\"include-number\"\n          type=\"checkbox\"\n          (change)=\"saveOptions()\"\n          [(ngModel)]=\"options.includeNumber\"\n          [disabled]=\"enforcedPolicyOptions?.includeNumber\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"options.type === 'password'\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-slider\" appBoxRow>\n          <label for=\"length\">{{ \"length\" | i18n }}</label>\n          <input\n            id=\"length\"\n            type=\"number\"\n            min=\"5\"\n            max=\"128\"\n            [(ngModel)]=\"options.length\"\n            (change)=\"saveOptions()\"\n          />\n          <input\n            id=\"lengthRange\"\n            type=\"range\"\n            min=\"5\"\n            max=\"128\"\n            step=\"1\"\n            [(ngModel)]=\"options.length\"\n            (change)=\"sliderChanged()\"\n            (input)=\"sliderInput()\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"uppercase\">A-Z</label>\n          <input\n            id=\"uppercase\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n            [disabled]=\"enforcedPolicyOptions.useUppercase\"\n            [(ngModel)]=\"options.uppercase\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"lowercase\">a-z</label>\n          <input\n            id=\"lowercase\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n            [disabled]=\"enforcedPolicyOptions.useLowercase\"\n            [(ngModel)]=\"options.lowercase\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"numbers\">0-9</label>\n          <input\n            id=\"numbers\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            attr.aria-label=\"{{ 'numbers' | i18n }}\"\n            [disabled]=\"enforcedPolicyOptions.useNumbers\"\n            [(ngModel)]=\"options.number\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"special\">!@#$%^&*</label>\n          <input\n            id=\"special\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n            [disabled]=\"enforcedPolicyOptions.useSpecial\"\n            [(ngModel)]=\"options.special\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n          <input\n            id=\"min-number\"\n            type=\"number\"\n            min=\"0\"\n            max=\"9\"\n            (change)=\"saveOptions()\"\n            [(ngModel)]=\"options.minNumber\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-input\" appBoxRow>\n          <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n          <input\n            id=\"min-special\"\n            type=\"number\"\n            min=\"0\"\n            max=\"9\"\n            (change)=\"saveOptions()\"\n            [(ngModel)]=\"options.minSpecial\"\n          />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"ambiguous\">{{ \"avoidAmbChar\" | i18n }}</label>\n          <input\n            id=\"ambiguous\"\n            type=\"checkbox\"\n            (change)=\"saveOptions()\"\n            [(ngModel)]=\"avoidAmbiguous\"\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorComponent as BasePasswordGeneratorComponent } from \"jslib-angular/components/password-generator.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n  private cipherState: CipherView;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private stateService: StateService,\n    private location: Location\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    const addEditCipherInfo = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipherState = addEditCipherInfo.cipher;\n    }\n    this.showSelect = this.cipherState != null;\n  }\n\n  select() {\n    super.select();\n    this.cipherState.login.password = this.password;\n    this.close();\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { SendFile } from \"../domain/sendFile\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/sendText\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { SendFileView } from \"./sendFileView\";\nimport { SendTextView } from \"./sendTextView\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new FormGroup({\n    selectedDeletionDatePreset: new FormControl(),\n    selectedExpirationDatePreset: new FormControl(),\n    defaultDeletionDateTime: new FormControl(),\n    defaultExpirationDateTime: new FormControl(),\n    fallbackDeletionDate: new FormControl(),\n    fallbackDeletionTime: new FormControl(),\n    fallbackExpirationDate: new FormControl(),\n    fallbackExpirationTime: new FormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as FormControl;\n  }\n\n  get selectedExpirationDatePreset(): FormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as FormControl;\n  }\n\n  get defaultDeletionDateTime(): FormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as FormControl;\n  }\n\n  get defaultExpirationDateTime(): FormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as FormControl;\n  }\n\n  get fallbackDeletionDate(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as FormControl;\n  }\n\n  get fallbackDeletionTime(): FormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as FormControl;\n  }\n\n  get fallbackExpirationDate(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as FormControl;\n  }\n\n  get fallbackExpirationTime(): FormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as FormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { EncArrayBuffer } from \"jslib-common/models/domain/encArrayBuffer\";\nimport { Send } from \"jslib-common/models/domain/send\";\nimport { SendFileView } from \"jslib-common/models/view/sendFileView\";\nimport { SendTextView } from \"jslib-common/models/view/sendTextView\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n    this.disableHideEmail = await this.policyService.policyAppliesToUser(\n      PolicyType.SendOptions,\n      (p) => p.data.disableHideEmail\n    );\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","import { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\n\nimport { Account } from \"src/models/account\";\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nexport abstract class StateService extends BaseStateServiceAbstraction<Account> {\n  getBrowserGroupingComponentState: (\n    options?: StorageOptions\n  ) => Promise<BrowserGroupingsComponentState>;\n  setBrowserGroupingComponentState: (\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserCipherComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserCipherComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendComponentState: (options?: StorageOptions) => Promise<BrowserSendComponentState>;\n  setBrowserSendComponentState: (\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getBrowserSendTypeComponentState: (options?: StorageOptions) => Promise<BrowserComponentState>;\n  setBrowserSendTypeComponentState: (\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","<ng-container [formGroup]=\"datesForm\">\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n          <select\n            id=\"deletionDate\"\n            name=\"DeletionDateSelect\"\n            formControlName=\"selectedDeletionDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow *ngIf=\"selectedDeletionDatePreset.value === 0\">\n          <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" appBoxRow *ngIf=\"editMode\">\n        <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"deletionDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedDeletionDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-content\">\n      <ng-container *ngIf=\"!editMode\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"editExpirationDate\">{{ \"expirationDate\" | i18n }}</label>\n          <select\n            id=\"expirationDate\"\n            name=\"ExpirationDateSelect\"\n            formControlName=\"selectedExpirationDatePreset\"\n            required\n          >\n            <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"selectedExpirationDatePreset.value === 0\" appBoxRow>\n          <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n        </div>\n      </ng-container>\n      <div class=\"box-content-row\" *ngIf=\"editMode\" appBoxRow>\n        <div class=\"flex-label\">\n          <label>{{ \"expirationDate\" | i18n }}</label>\n          <button type=\"button\" *ngIf=\"!disabled\" appStopClick (click)=\"clearExpiration()\">\n            {{ \"clear\" | i18n }}\n          </button>\n        </div>\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"></ng-container>\n      </div>\n    </div>\n    <div class=\"box-footer\">\n      {{ \"expirationDateDesc\" | i18n }}\n      <ng-container\n        *ngIf=\"\n          !inPopout &&\n          browserPath == 'firefox' &&\n          (editMode || (selectedExpirationDatePreset.value === 0 && !editMode))\n        \"\n      >\n        <br />{{ \"sendFirefoxCustomDatePopoutMessage1\" | i18n }}\n        <a (click)=\"popOutWindow.emit()\">{{ \"sendFirefoxCustomDatePopoutMessage2\" | i18n }}</a>\n        {{ \"sendFirefoxCustomDatePopoutMessage3\" | i18n }}\n      </ng-container>\n    </div>\n  </div>\n  <ng-template #deletionDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"deletionTimeCustomFallback\"\n            type=\"time\"\n            name=\"DeletionTimeDate\"\n            formControlName=\"fallbackDeletionTime\"\n            required\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"deletionDateCustomFallback\"\n            type=\"date\"\n            name=\"DeletionDateFallback\"\n            formControlName=\"fallbackDeletionDate\"\n            required\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"deletionTimeCustomFallback\"\n            formControlName=\"fallbackDeletionTime\"\n            name=\"SafariDeletionTime\"\n          >\n            <option *ngFor=\"let o of safariDeletionTimePresetOptions\" [ngValue]=\"o.twentyFourHour\">\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"deletionDateCustom\"\n          type=\"datetime-local\"\n          name=\"DeletionDate\"\n          formControlName=\"defaultDeletionDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n  <ng-template #expirationDateCustom>\n    <ng-container [ngSwitch]=\"browserPath\">\n      <ng-container *ngSwitchCase=\"'firefox'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"'safari'\">\n        <div class=\"flex flex-grow\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <input\n          id=\"expirationDateCustom\"\n          type=\"datetime-local\"\n          name=\"ExpirationDate\"\n          formControlName=\"defaultExpirationDateTime\"\n          required\n          placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n          [readOnly]=\"disabled\"\n        />\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","import { DatePipe } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"jslib-angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  @Input() readonly inPopout: boolean;\n  @Output() popOutWindow = new EventEmitter();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading || disableSend\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"send\">\n    <!-- Policy Banner -->\n    <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n      {{ \"sendDisabledWarning\" | i18n }}\n    </app-callout>\n    <app-callout type=\"info\" *ngIf=\"disableHideEmail && !disableSend\">\n      {{ \"sendOptionsPolicyInEffect\" | i18n }}\n    </app-callout>\n    <!-- File Warning -->\n    <app-callout\n      type=\"warning\"\n      icon=\"bwi-external-link bwi-rotate-270 bwi-fw\"\n      [clickable]=\"true\"\n      title=\"{{ 'sendFileCalloutHeader' | i18n }}\"\n      *ngIf=\"showFilePopoutMessage && send.type === sendType.File && !disableSend\"\n      (click)=\"popOutWindow()\"\n    >\n      <div *ngIf=\"showChromiumFileWarning\">{{ \"sendLinuxChromiumFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showFirefoxFileWarning\">{{ \"sendFirefoxFileWarning\" | i18n }}</div>\n      <div *ngIf=\"showSafariFileWarning\">{{ \"sendSafariFileWarning\" | i18n }}</div>\n    </app-callout>\n    <!-- Name -->\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"send.name\"\n            [readonly]=\"disableSend\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendNameDesc\" | i18n }}\n      </div>\n    </div>\n    <!-- Type Options -->\n    <div class=\"box\" *ngIf=\"!editMode\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"sendTypeOptions\">{{ \"sendTypeHeader\" | i18n }}</label>\n          <div\n            class=\"radio-group text-default\"\n            appBoxRow\n            name=\"SendTypeOptions\"\n            *ngFor=\"let o of typeOptions\"\n          >\n            <input\n              type=\"radio\"\n              [(ngModel)]=\"send.type\"\n              name=\"Type_{{ o.value }}\"\n              id=\"type_{{ o.value }}\"\n              [value]=\"o.value\"\n              (change)=\"typeChanged()\"\n              [checked]=\"send.type === o.value\"\n              [readonly]=\"disableSend\"\n            />\n            <label for=\"type_{{ o.value }}\">\n              {{ o.name }}\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- File -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.File && (editMode || showFileSelector)\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\" *ngIf=\"editMode\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <div class=\"row-main\">{{ send.file.fileName }} ({{ send.file.sizeName }})</div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"showFileSelector\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required [readonly]=\"disableSend\" />\n        </div>\n      </div>\n      <div class=\"box-footer\" *ngIf=\"showFileSelector\">\n        {{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n    <!-- Text -->\n    <div class=\"box\" *ngIf=\"send.type === sendType.Text\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n          <textarea\n            id=\"text\"\n            name=\"Text\"\n            rows=\"6\"\n            [(ngModel)]=\"send.text.text\"\n            [readonly]=\"disableSend\"\n          ></textarea>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"sendTextDesc\" | i18n }}\n      </div>\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"hideText\">{{ \"sendHideText\" | i18n }}</label>\n          <input\n            id=\"hideText\"\n            type=\"checkbox\"\n            name=\"HideText\"\n            [(ngModel)]=\"send.text.hidden\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Share -->\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"share\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <!-- Copy Link on Save -->\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"copyOnSave\">{{ \"sendShareDesc\" | i18n }}</label>\n          <input\n            id=\"copyOnSave\"\n            type=\"checkbox\"\n            name=\"CopyOnSave\"\n            [(ngModel)]=\"copyLink\"\n            [disabled]=\"disableSend\"\n          />\n        </div>\n      </div>\n    </div>\n    <!-- Options -->\n    <div class=\"box\">\n      <h2>\n        <button\n          type=\"button\"\n          class=\"box-header-expandable\"\n          (click)=\"showOptions = !showOptions\"\n          [attr.aria-expanded]=\"showOptions\"\n        >\n          {{ \"options\" | i18n }}\n          <i *ngIf=\"!showOptions\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n          <i *ngIf=\"showOptions\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n        </button>\n      </h2>\n    </div>\n    <div [hidden]=\"!showOptions\">\n      <app-send-efflux-dates\n        [initialDeletionDate]=\"send.deletionDate\"\n        [initialExpirationDate]=\"send.expirationDate\"\n        [editMode]=\"editMode\"\n        [disabled]=\"disableSend\"\n        (datesChanged)=\"setDates($event)\"\n        (popOutWindow)=\"popOutWindow()\"\n      >\n      </app-send-efflux-dates>\n      <!-- Maximum Access Count -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"maximumAccessCount\">{{ \"maximumAccessCount\" | i18n }}</label>\n            <input\n              id=\"maximumAccessCount\"\n              min=\"1\"\n              type=\"number\"\n              name=\"MaximumAccessCount\"\n              [(ngModel)]=\"send.maxAccessCount\"\n              [readonly]=\"disableSend\"\n            />\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"maximumAccessCountDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Current Access Count -->\n      <div class=\"box\" *ngIf=\"editMode\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"currentAccessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n            <input\n              id=\"currentAccessCount\"\n              readonly\n              type=\"text\"\n              name=\"CurrentAccessCount\"\n              [(ngModel)]=\"send.accessCount\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Password -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"password\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Password\"\n                class=\"monospaced\"\n                [(ngModel)]=\"password\"\n                appInputVerbatim\n                [readonly]=\"disableSend\"\n              />\n            </div>\n            <div class=\"action-buttons\" *ngIf=\"!disableSend\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePasswordVisible()\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendPasswordDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Notes -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              [readonly]=\"disableSend\"\n            ></textarea>\n          </div>\n        </div>\n        <div class=\"box-footer\">\n          {{ \"sendNotesDesc\" | i18n }}\n        </div>\n      </div>\n      <!-- Hide Email -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"hideEmail\">{{ \"hideEmail\" | i18n }}</label>\n            <input\n              id=\"hideEmail\"\n              type=\"checkbox\"\n              name=\"HideEmail\"\n              [(ngModel)]=\"send.hideEmail\"\n              [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Disable Send -->\n      <div class=\"box\">\n        <div class=\"box-content\">\n          <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n            <label for=\"disableSend\">{{ \"sendDisableDesc\" | i18n }}</label>\n            <input\n              id=\"disableSend\"\n              type=\"checkbox\"\n              name=\"DisableSend\"\n              [(ngModel)]=\"send.disabled\"\n              [disabled]=\"disableSend\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Delete -->\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteSend\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { DatePipe, Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"send-add-edit.component.html\",\n})\nexport class SendAddEditComponent extends BaseAddEditComponent {\n  // Options header\n  showOptions = false;\n  // File visibility\n  isFirefox = false;\n  inPopout = false;\n  inSidebar = false;\n  isLinux = false;\n  isUnsupportedMac = false;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private popupUtilsService: PopupUtilsService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  get showFileSelector(): boolean {\n    return !(this.editMode || this.showFilePopoutMessage);\n  }\n\n  get showFilePopoutMessage(): boolean {\n    return (\n      !this.editMode &&\n      (this.showFirefoxFileWarning || this.showSafariFileWarning || this.showChromiumFileWarning)\n    );\n  }\n\n  get showFirefoxFileWarning(): boolean {\n    return this.isFirefox && !(this.inSidebar || this.inPopout);\n  }\n\n  get showSafariFileWarning(): boolean {\n    return this.isSafari && !this.inPopout;\n  }\n\n  // Only show this for Chromium based browsers in Linux and Mac > Big Sur\n  get showChromiumFileWarning(): boolean {\n    return (\n      (this.isLinux || this.isUnsupportedMac) &&\n      !this.isFirefox &&\n      !(this.inSidebar || this.inPopout)\n    );\n  }\n\n  popOutWindow() {\n    this.popupUtilsService.popOut(window);\n  }\n\n  async ngOnInit() {\n    // File visilibity\n    this.isFirefox = this.platformUtilsService.isFirefox();\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n    this.isLinux = window?.navigator?.userAgent.indexOf(\"Linux\") !== -1;\n    this.isUnsupportedMac =\n      this.platformUtilsService.isChrome() && window?.navigator?.appVersion.includes(\"Mac OS X 11\");\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.sendId) {\n        this.sendId = params.sendId;\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      await this.load();\n    });\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        document.getElementById(\"name\").focus();\n      }\n    }, 200);\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (await super.delete()) {\n      this.cancel();\n      return true;\n    }\n\n    return false;\n  }\n\n  cancel() {\n    // If true, the window was pop'd out on the add-send page. location.back will not work\n    if ((window as any).previousPopupUrl.startsWith(\"/add-send\")) {\n      this.router.navigate([\"tabs/send\"]);\n    } else {\n      this.location.back();\n    }\n  }\n}\n","import { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Directive()\nexport class SendComponent implements OnInit {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.disableSend = await this.policyService.policyAppliesToUser(PolicyType.DisableSend);\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","<button\n  type=\"button\"\n  *ngFor=\"let s of sends\"\n  (click)=\"selectSend(s)\"\n  appStopClick\n  title=\"{{ title }} - {{ s.name }}\"\n  class=\"box-content-row box-content-row-flex\"\n>\n  <div class=\"row-main\">\n    <div class=\"app-vault-icon\">\n      <div class=\"icon\" aria-hidden=\"true\">\n        <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type === sendType.Text\"></i>\n        <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type === sendType.File\"></i>\n      </div>\n    </div>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ s.name }}\n        <ng-container *ngIf=\"s.disabled\">\n          <i\n            class=\"bwi bwi-exclamation-triangle text-muted\"\n            title=\"{{ 'disabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.password\">\n          <i\n            class=\"bwi bwi-key text-muted\"\n            title=\"{{ 'passwordProtected' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"passwordProtected\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.maxAccessCountReached\">\n          <i\n            class=\"bwi bwi-ban text-muted\"\n            title=\"{{ 'maxAccessCountReached' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.expired\">\n          <i class=\"bwi bwi-clock text-muted\" title=\"{{ 'expired' | i18n }}\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"s.pendingDelete\">\n          <i\n            class=\"bwi bwi-trash text-muted\"\n            title=\"{{ 'pendingDeletion' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ s.deletionDate | date: \"medium\" }}</span>\n    </div>\n  </div>\n  <div class=\"action-buttons\">\n    <span\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'copySendLink' | i18n }}\"\n      (click)=\"copySendLink(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-files\" aria-hidden=\"true\"></i>\n    </span>\n    <span\n      class=\"row-btn\"\n      [ngClass]=\"{ disabled: disabledByPolicy }\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'removePassword' | i18n }}\"\n      (click)=\"removePassword(s)\"\n      *ngIf=\"s.password\"\n    >\n      <i class=\"bwi bwi-lg bwi-undo\" aria-hidden=\"true\"></i>\n    </span>\n    <span\n      class=\"row-btn\"\n      appStopClick\n      appStopProp\n      appA11yTitle=\"{{ 'delete' | i18n }}\"\n      (click)=\"delete(s)\"\n    >\n      <i class=\"bwi bwi-lg bwi-trash\" aria-hidden=\"true\"></i>\n    </span>\n  </div>\n</button>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\n@Component({\n  selector: \"app-send-list\",\n  templateUrl: \"send-list.component.html\",\n})\nexport class SendListComponent {\n  @Input() sends: SendView[];\n  @Input() title: string;\n  @Input() disabledByPolicy = false;\n  @Output() onSelected = new EventEmitter<SendView>();\n  @Output() onCopySendLink = new EventEmitter<SendView>();\n  @Output() onRemovePassword = new EventEmitter<SendView>();\n  @Output() onDeleteSend = new EventEmitter<SendView>();\n\n  sendType = SendType;\n\n  selectSend(s: SendView) {\n    this.onSelected.emit(s);\n  }\n\n  copySendLink(s: SendView) {\n    this.onCopySendLink.emit(s);\n  }\n\n  removePassword(s: SendView) {\n    this.onRemovePassword.emit(s);\n  }\n\n  delete(s: SendView) {\n    this.onDeleteSend.emit(s);\n  }\n}\n","<header>\n  <div class=\"left\" *ngIf=\"showLeftHeader\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchSends' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ flex: disableSend, 'tab-page': disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"(!sends || !sends.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"sends && sends.length && !showSearching()\">\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.Text)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file-text\"></i></div>\n            <span class=\"text\">{{ \"sendTypeText\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.Text) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(sendType.File)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-file\"></i></div>\n            <span class=\"text\">{{ \"sendTypeFile\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(sendType.File) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"allSends\" | i18n }}\n        <div class=\"flex-right\">{{ sends.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"sends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        ></app-send-list>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!filteredSends || !filteredSends.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <div class=\"box list full-list\" *ngIf=\"filteredSends && filteredSends.length > 0\">\n      <div class=\"box-content\">\n        <app-send-list\n          [sends]=\"filteredSends\"\n          title=\"{{ 'editItem' | i18n }}\"\n          [disabledByPolicy]=\"disableSend\"\n          (onSelected)=\"selectSend($event)\"\n          (onCopySendLink)=\"copy($event)\"\n          (onRemovePassword)=\"removePassword($event)\"\n          (onDeleteSend)=\"delete($event)\"\n        >\n        </app-send-list>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserSendComponentState } from \"src/models/browserSendComponentState\";\n\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send-groupings\",\n  templateUrl: \"send-groupings.component.html\",\n})\nexport class SendGroupingsComponent extends BaseSendComponent {\n  // Header\n  showLeftHeader = true;\n  // Send Type Calculations\n  typeCounts = new Map<SendType, number>();\n  // State Handling\n  state: BrowserSendComponentState;\n  private loadedTimeout: number;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private router: Router,\n    private syncService: SyncService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.calculateTypeCounts();\n      this.selectAll();\n    };\n  }\n\n  async ngOnInit() {\n    // Determine Header details\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    // Clear state of Send Type Component\n    await this.stateService.setBrowserSendTypeComponentState(null);\n    // Let super class finish\n    await super.ngOnInit();\n    // Handle State Restore if necessary\n    const restoredScopeState = await this.restoreState();\n    if (this.state?.searchText != null) {\n      this.searchText = this.state.searchText;\n    }\n\n    if (!this.syncService.syncInProgress) {\n      this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(() => {\n        if (!this.loaded) {\n          this.load();\n        }\n      }, 5000);\n    }\n\n    if (!this.syncService.syncInProgress || restoredScopeState) {\n      window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n    }\n\n    // Load all sends if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectType(type: SendType) {\n    this.router.navigate([\"/send-type\"], { queryParams: { type: type } });\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"]);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  private calculateTypeCounts() {\n    // Create type counts\n    const typeCounts = new Map<SendType, number>();\n    this.sends.forEach((s) => {\n      if (typeCounts.has(s.type)) {\n        typeCounts.set(s.type, typeCounts.get(s.type) + 1);\n      } else {\n        typeCounts.set(s.type, 1);\n      }\n    });\n    this.typeCounts = typeCounts;\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      sends: this.sends,\n      typeCounts: this.typeCounts,\n    };\n    await this.stateService.setBrowserSendComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.stateService.getBrowserSendComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.sends != null) {\n      this.sends = this.state.sends;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n\n    return true;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"send\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"search\"\n      placeholder=\"{{ 'searchType' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addSend()\"\n      appA11yTitle=\"{{ 'addSend' | i18n }}\"\n      [disabled]=\"disableSend\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ flex: disableSend }\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    {{ \"sendDisabledWarning\" | i18n }}\n  </app-callout>\n  <div class=\"no-items\" *ngIf=\"!filteredSends.length\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button\n        type=\"button\"\n        (click)=\"addSend()\"\n        class=\"btn block primary link\"\n        [disabled]=\"disableSend\"\n      >\n        {{ \"addSend\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <div class=\"box list only-list\" *ngIf=\"filteredSends.length\">\n    <h2 class=\"box-header\">\n      {{ groupingTitle }}\n      <span class=\"flex-right\">{{ filteredSends.length }}</span>\n    </h2>\n    <div class=\"box-content\">\n      <app-send-list\n        [sends]=\"filteredSends\"\n        title=\"{{ 'editItem' | i18n }}\"\n        [disabledByPolicy]=\"disableSend\"\n        (onSelected)=\"selectSend($event)\"\n        (onCopySendLink)=\"copy($event)\"\n        (onRemovePassword)=\"removePassword($event)\"\n        (onDeleteSend)=\"delete($event)\"\n      >\n      </app-send-list>\n    </div>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SendComponent as BaseSendComponent } from \"jslib-angular/components/send/send.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"../../models/browserComponentState\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"SendTypeComponent\";\n\n@Component({\n  selector: \"app-send-type\",\n  templateUrl: \"send-type.component.html\",\n})\nexport class SendTypeComponent extends BaseSendComponent {\n  groupingTitle: string;\n  // State Handling\n  state: BrowserComponentState;\n  private refreshTimeout: number;\n  private applySavedState = true;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    policyService: PolicyService,\n    searchService: SearchService,\n    private popupUtils: PopupUtilsService,\n    private stateService: StateService,\n    private route: ActivatedRoute,\n    private location: Location,\n    private changeDetectorRef: ChangeDetectorRef,\n    private broadcasterService: BroadcasterService,\n    private router: Router,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n    super.onSuccessfulLoad = async () => {\n      this.selectType(this.type);\n    };\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/send-type\");\n  }\n\n  async ngOnInit() {\n    // Let super class finish\n    await super.ngOnInit();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserSendTypeComponentState();\n        if (this.state?.searchText != null) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.type != null) {\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case SendType.Text:\n            this.groupingTitle = this.i18nService.t(\"sendTypeText\");\n            break;\n          case SendType.File:\n            this.groupingTitle = this.i18nService.t(\"sendTypeFile\");\n            break;\n          default:\n            break;\n        }\n        await this.load((s) => s.type === this.type);\n      }\n\n      // Restore state and remove reference\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n      this.stateService.setBrowserSendTypeComponentState(null);\n    });\n\n    // Refresh Send list if sync completed in background\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              this.refreshTimeout = window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    // Remove timeout\n    if (this.refreshTimeout != null) {\n      window.clearTimeout(this.refreshTimeout);\n    }\n    // Save state\n    this.saveState();\n    // Unsubscribe\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async selectSend(s: SendView) {\n    this.router.navigate([\"/edit-send\"], { queryParams: { sendId: s.id } });\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n    this.router.navigate([\"/add-send\"], { queryParams: { type: this.type } });\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.disableSend) {\n      return;\n    }\n    super.removePassword(s);\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserSendTypeComponentState(this.state);\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { CanActivate, NavigationEnd, NavigationStart, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter, pairwise } from \"rxjs/operators\";\n\n@Injectable()\nexport class DebounceNavigationService implements CanActivate, OnDestroy {\n  navigationStartSub: Subscription;\n  navigationSuccessSub: Subscription;\n\n  private lastNavigation: NavigationStart;\n  private thisNavigation: NavigationStart;\n  private lastNavigationSuccessId: number;\n\n  constructor(private router: Router) {\n    this.navigationStartSub = this.router.events\n      .pipe(\n        filter((event) => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(\n        (events: [NavigationStart, NavigationStart]) =>\n          ([this.lastNavigation, this.thisNavigation] = events)\n      );\n\n    this.navigationSuccessSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => (this.lastNavigationSuccessId = event.id));\n  }\n\n  async canActivate() {\n    return !(\n      this.thisNavigation?.navigationTrigger === \"hashchange\" &&\n      this.lastNavigation.navigationTrigger === \"popstate\" &&\n      this.lastNavigationSuccessId === this.lastNavigation.id &&\n      this.lastNavigation.url === this.thisNavigation?.url\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.navigationStartSub != null) {\n      this.navigationStartSub.unsubscribe();\n    }\n\n    if (this.navigationSuccessSub != null) {\n      this.navigationSuccessSub.unsubscribe();\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"excludedDomains\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick>{{ \"save\" | i18n }}</button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"excludedDomains\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let domain of excludedDomains; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(i)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"excludedDomain{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"excludedDomain{{ i }}\"\n                name=\"excludedDomain{{ i }}\"\n                type=\"text\"\n                [(ngModel)]=\"domain.uri\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"currentUris{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"currentUris{{ i }}\"\n                [(ngModel)]=\"domain.uri\"\n                [hidden]=\"!domain.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(domain)\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"excludedDomainsDesc\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\n\ninterface ExcludedDomain {\n  uri: string;\n  showCurrentUris: boolean;\n}\n\nconst BroadcasterSubscriptionId = \"excludedDomains\";\n\n@Component({\n  selector: \"app-excluded-domains\",\n  templateUrl: \"excluded-domains.component.html\",\n})\nexport class ExcludedDomainsComponent implements OnInit, OnDestroy {\n  excludedDomains: ExcludedDomain[] = [];\n  currentUris: string[];\n  loadCurrentUrisTimeout: number;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private router: Router,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    const savedDomains = await this.stateService.getNeverDomains();\n    if (savedDomains) {\n      for (const uri of Object.keys(savedDomains)) {\n        this.excludedDomains.push({ uri: uri, showCurrentUris: false });\n      }\n    }\n\n    await this.loadCurrentUris();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadCurrentUrisTimeout != null) {\n              window.clearTimeout(this.loadCurrentUrisTimeout);\n            }\n            this.loadCurrentUrisTimeout = window.setTimeout(\n              async () => await this.loadCurrentUris(),\n              500\n            );\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addUri() {\n    this.excludedDomains.push({ uri: \"\", showCurrentUris: false });\n  }\n\n  async removeUri(i: number) {\n    this.excludedDomains.splice(i, 1);\n  }\n\n  async submit() {\n    const savedDomains: { [name: string]: null } = {};\n    for (const domain of this.excludedDomains) {\n      if (domain.uri && domain.uri !== \"\") {\n        const validDomain = Utils.getHostname(domain.uri);\n        if (!validDomain) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            null,\n            this.i18nService.t(\"excludedDomainsInvalidDomain\", domain.uri)\n          );\n          return;\n        }\n        savedDomains[validDomain] = null;\n      }\n    }\n    await this.stateService.setNeverDomains(savedDomains);\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  toggleUriInput(domain: ExcludedDomain) {\n    domain.showCurrentUris = !domain.showCurrentUris;\n  }\n\n  async loadCurrentUris() {\n    const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n    if (tabs) {\n      const uriSet = new Set(tabs.map((tab) => Utils.getHostname(tab.url)));\n      uriSet.delete(null);\n      this.currentUris = Array.from(uriSet);\n    }\n  }\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  // Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","import { EventView } from \"../models/view/eventView\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\n\n@Directive()\nexport class ExportComponent implements OnInit {\n  @Output() onSaved = new EventEmitter();\n\n  formPromise: Promise<string>;\n  disabledByPolicy = false;\n\n  exportForm = this.formBuilder.group({\n    format: [\"json\"],\n    secret: [\"\"],\n  });\n\n  formatOptions = [\n    { name: \".json\", value: \"json\" },\n    { name: \".csv\", value: \"csv\" },\n    { name: \".json (Encrypted)\", value: \"encrypted_json\" },\n  ];\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected exportService: ExportService,\n    protected eventService: EventService,\n    private policyService: PolicyService,\n    protected win: Window,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    await this.checkExportDisabled();\n  }\n\n  async checkExportDisabled() {\n    this.disabledByPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.DisablePersonalVaultExport\n    );\n    if (this.disabledByPolicy) {\n      this.exportForm.disable();\n    }\n  }\n\n  get encryptedFormat() {\n    return this.format === \"encrypted_json\";\n  }\n\n  async submit() {\n    if (this.disabledByPolicy) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"personalVaultExportPolicyInEffect\")\n      );\n      return;\n    }\n\n    const acceptedWarning = await this.warningDialog();\n    if (!acceptedWarning) {\n      return;\n    }\n\n    const secret = this.exportForm.get(\"secret\").value;\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.getExportData();\n      const data = await this.formPromise;\n      this.downloadFile(data);\n      this.saved();\n      await this.collectEvent();\n      this.exportForm.get(\"secret\").setValue(\"\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async warningDialog() {\n    if (this.encryptedFormat) {\n      return await this.platformUtilsService.showDialog(\n        \"<p>\" +\n          this.i18nService.t(\"encExportKeyWarningDesc\") +\n          \"<p>\" +\n          this.i18nService.t(\"encExportAccountWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\",\n        true\n      );\n    } else {\n      return await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exportWarningDesc\"),\n        this.i18nService.t(\"confirmVaultExport\"),\n        this.i18nService.t(\"exportVault\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n    }\n  }\n\n  protected saved() {\n    this.onSaved.emit();\n  }\n\n  protected getExportData() {\n    return this.exportService.getExport(this.format);\n  }\n\n  protected getFileName(prefix?: string) {\n    let extension = this.format;\n    if (this.format === \"encrypted_json\") {\n      if (prefix == null) {\n        prefix = \"encrypted\";\n      } else {\n        prefix = \"encrypted_\" + prefix;\n      }\n      extension = \"json\";\n    }\n    return this.exportService.getFileName(prefix, extension);\n  }\n\n  protected async collectEvent(): Promise<any> {\n    await this.eventService.collect(EventType.User_ClientExportedVault);\n  }\n\n  get format() {\n    return this.exportForm.get(\"format\").value;\n  }\n\n  private downloadFile(csv: string): void {\n    const fileName = this.getFileName();\n    this.platformUtilsService.saveFile(this.win, csv, { type: \"text/plain\" }, fileName);\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VerificationType } from \"jslib-common/enums/verificationType\";\nimport { Verification } from \"jslib-common/types/verification\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    this.secret.valueChanges.subscribe((secret) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n    <input\n      id=\"masterPassword\"\n      type=\"password\"\n      name=\"MasterPasswordHash\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"box-content-row\" appBoxRow>\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"box-content-row\" appBoxRow>\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VerifyMasterPasswordComponent as BaseComponent } from \"jslib-angular/components/verify-master-password.component\";\n\n@Component({\n  selector: \"app-verify-master-password\",\n  templateUrl: \"verify-master-password.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VerifyMasterPasswordComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class VerifyMasterPasswordComponent extends BaseComponent {}\n","import { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport abstract class OrganizationService {\n  get: (id: string) => Promise<Organization>;\n  getByIdentifier: (identifier: string) => Promise<Organization>;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  save: (orgs: { [id: string]: OrganizationData }) => Promise<any>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: (userId?: string) => Promise<boolean>;\n}\n","<ng-container *ngIf=\"show\">\n  <app-callout type=\"info\" title=\"{{ scopeConfig.title | i18n }}\">\n    {{ scopeConfig.description | i18n: scopeConfig.scopeIdentifier }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-export-scope-callout\",\n  templateUrl: \"export-scope-callout.component.html\",\n})\nexport class ExportScopeCalloutComponent implements OnInit {\n  @Input() organizationId: string = null;\n\n  show = false;\n  scopeConfig: {\n    title: string;\n    description: string;\n    scopeIdentifier: string;\n  };\n\n  constructor(\n    protected organizationService: OrganizationService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (!(await this.organizationService.hasOrganizations())) {\n      return;\n    }\n    this.scopeConfig =\n      this.organizationId != null\n        ? {\n            title: \"exportingOrganizationVaultTitle\",\n            description: \"exportingOrganizationVaultDescription\",\n            scopeIdentifier: (await this.organizationService.get(this.organizationId)).name,\n          }\n        : {\n            title: \"exportingPersonalVaultTitle\",\n            description: \"exportingPersonalVaultDescription\",\n            scopeIdentifier: await this.stateService.getEmail(),\n          };\n    this.show = true;\n  }\n}\n","<form (ngSubmit)=\"submit()\" [formGroup]=\"exportForm\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/tabs/settings\">\n        <span class=\"header-icon\" aria-hidden=\"true\"><i class=\"bwi bwi-angle-left\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"exportVault\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button appBlurClick type=\"submit\" [disabled]=\"!exportForm.enabled\">\n        {{ \"submit\" | i18n }}\n      </button>\n    </div>\n  </header>\n  <content>\n    <app-callout type=\"warning\" title=\"{{ 'vaultExportDisabled' | i18n }}\" *ngIf=\"disabledByPolicy\">\n      {{ \"personalVaultExportPolicyInEffect\" | i18n }}\n    </app-callout>\n    <app-export-scope-callout *ngIf=\"!disabledByPolicy\"></app-export-scope-callout>\n\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"format\">{{ \"fileFormat\" | i18n }}</label>\n          <select id=\"format\" name=\"Format\" formControlName=\"format\">\n            <option *ngFor=\"let f of formatOptions\" [value]=\"f.value\">{{ f.name }}</option>\n          </select>\n        </div>\n        <app-verify-master-password ngDefaultControl formControlName=\"secret\" name=\"Secret\">\n        </app-verify-master-password>\n      </div>\n      <div class=\"box-footer\">\n        <p>{{ \"confirmIdentity\" | i18n }}</p>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ExportComponent as BaseExportComponent } from \"jslib-angular/components/export.component\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\n\n@Component({\n  selector: \"app-export\",\n  templateUrl: \"export.component.html\",\n})\nexport class ExportComponent extends BaseExportComponent {\n  constructor(\n    cryptoService: CryptoService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    exportService: ExportService,\n    eventService: EventService,\n    policyService: PolicyService,\n    private router: Router,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    formBuilder: FormBuilder\n  ) {\n    super(\n      cryptoService,\n      i18nService,\n      platformUtilsService,\n      exportService,\n      eventService,\n      policyService,\n      window,\n      logService,\n      userVerificationService,\n      formBuilder\n    );\n  }\n\n  protected saved() {\n    super.saved();\n    this.router.navigate([\"/tabs/settings\"]);\n  }\n}\n","import { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n}\n","import { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport abstract class FolderService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAll: () => Promise<Folder[]>;\n  getAllDecrypted: () => Promise<FolderView[]>;\n  getAllNested: () => Promise<TreeNode<FolderView>[]>;\n  getNested: (id: string) => Promise<TreeNode<FolderView>>;\n  saveWithServer: (folder: Folder) => Promise<any>;\n  upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderService.saveWithServer(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <a routerLink=\"/folders\">{{ \"cancel\" | i18n }}</a>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"folder\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"folder.name\"\n            [appAutofocus]=\"!editMode\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteFolder\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"jslib-angular/components/folder-add-edit.component\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private route: ActivatedRoute,\n    logService: LogService\n  ) {\n    super(folderService, i18nService, platformUtilsService, logService);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      await this.init();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      this.router.navigate([\"/folders\"]);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/folders\"]);\n    }\n    return confirmed;\n  }\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"folders\" | i18n }}</span>\n  </h1>\n  <div class=\"right\">\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"folders && folders.length\">\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        appStopClick\n        (click)=\"folderSelected(f)\"\n        class=\"box-content-row padded\"\n        *ngFor=\"let f of folders\"\n      >\n        {{ f.name }}\n      </button>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!folders || !folders.length\">\n    <p>{{ \"noFolders\" | i18n }}</p>\n  </div>\n</content>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Component({\n  selector: \"app-folders\",\n  templateUrl: \"folders.component.html\",\n})\nexport class FoldersComponent implements OnInit {\n  folders: FolderView[];\n\n  constructor(private folderService: FolderService, private router: Router) {}\n\n  async ngOnInit() {\n    this.folders = await this.folderService.getAllDecrypted();\n    // Remove \"No Folder\"\n    if (this.folders.length > 0) {\n      this.folders = this.folders.slice(0, this.folders.length - 1);\n    }\n  }\n\n  folderSelected(folder: FolderView) {\n    this.router.navigate([\"/edit-folder\"], { queryParams: { folderId: folder.id } });\n  }\n\n  addFolder() {\n    this.router.navigate([\"/add-folder\"]);\n  }\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n  isAutoCopyEnabled: () => Promise<boolean>;\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"options\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showGeneral = !showGeneral\"\n        [attr.aria-expanded]=\"showGeneral\"\n      >\n        General\n        <i *ngIf=\"!showGeneral\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showGeneral\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showGeneral\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultUriMatch\">{{ \"defaultUriMatchDetection\" | i18n }}</label>\n          <select\n            id=\"defaultUriMatch\"\n            name=\"DefaultUriMatch\"\n            [(ngModel)]=\"defaultUriMatch\"\n            (change)=\"saveDefaultUriMatch()\"\n          >\n            <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultUriMatchDetectionDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\" *ngIf=\"showClearClipboard\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"clearClipboard\">{{ \"clearClipboard\" | i18n }}</label>\n          <select\n            id=\"clearClipboard\"\n            name=\"ClearClipboard\"\n            [(ngModel)]=\"clearClipboard\"\n            (change)=\"saveClearClipboard()\"\n          >\n            <option *ngFor=\"let o of clearClipboardOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"clearClipboardDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"totp\">{{ \"disableAutoTotpCopy\" | i18n }}</label>\n          <input\n            id=\"totp\"\n            type=\"checkbox\"\n            (change)=\"updateAutoTotpCopy()\"\n            [(ngModel)]=\"disableAutoTotpCopy\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableAutoTotpCopyDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"addlogin-notification-bar\">{{ \"disableAddLoginNotification\" | i18n }}</label>\n          <input\n            id=\"addlogin-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateAddLoginNotification()\"\n            [(ngModel)]=\"disableAddLoginNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"addLoginNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"changedpass-notification-bar\">{{\n            \"disableChangedPasswordNotification\" | i18n\n          }}</label>\n          <input\n            id=\"changedpass-notification-bar\"\n            type=\"checkbox\"\n            (change)=\"updateChangedPasswordNotification()\"\n            [(ngModel)]=\"disableChangedPasswordNotification\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableChangedPasswordNotificationDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"context-menu\">{{ \"disableContextMenuItem\" | i18n }}</label>\n          <input\n            id=\"context-menu\"\n            type=\"checkbox\"\n            (change)=\"updateDisableContextMenuItem()\"\n            [(ngModel)]=\"disableContextMenuItem\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableContextMenuItemDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showDisplay = !showDisplay\"\n        [attr.aria-expanded]=\"showDisplay\"\n      >\n        Display\n        <i *ngIf=\"!showDisplay\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showDisplay\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showDisplay\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowCards\">{{ \"dontShowCardsCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowCards\"\n            type=\"checkbox\"\n            (change)=\"updateShowCards()\"\n            [(ngModel)]=\"dontShowCards\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowCardsCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"dontShowIdentities\">{{ \"dontShowIdentitiesCurrentTab\" | i18n }}</label>\n          <input\n            id=\"dontShowIdentities\"\n            type=\"checkbox\"\n            (change)=\"updateShowIdentities()\"\n            [(ngModel)]=\"dontShowIdentities\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"dontShowIdentitiesCurrentTabDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favicon\">{{ \"disableFavicon\" | i18n }}</label>\n          <input\n            id=\"favicon\"\n            type=\"checkbox\"\n            (change)=\"updateDisableFavicon()\"\n            [(ngModel)]=\"disableFavicon\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableFaviconDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"badge\">{{ \"disableBadgeCounter\" | i18n }}</label>\n          <input\n            id=\"badge\"\n            type=\"checkbox\"\n            (change)=\"updateDisableBadgeCounter()\"\n            [(ngModel)]=\"disableBadgeCounter\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"disableBadgeCounterDesc\" | i18n }}</div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n          <select id=\"theme\" name=\"Theme\" [(ngModel)]=\"theme\" (change)=\"saveTheme()\">\n            <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"themeDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n  <div class=\"box box-section-divider\">\n    <h2>\n      <button\n        type=\"button\"\n        class=\"box-header-expandable\"\n        (click)=\"showAutofill = !showAutofill\"\n        [attr.aria-expanded]=\"showAutofill\"\n      >\n        Autofill\n        <i *ngIf=\"!showAutofill\" class=\"bwi bwi-angle-down bwi-sm icon\" aria-hidden=\"true\"></i>\n        <i *ngIf=\"showAutofill\" class=\"bwi bwi-chevron-up bwi-sm icon\" aria-hidden=\"true\"></i>\n      </button>\n    </h2>\n  </div>\n  <ng-container *ngIf=\"showAutofill\">\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"autofill\">{{ \"enableAutoFillOnPageLoad\" | i18n }}</label>\n          <input\n            id=\"autofill\"\n            type=\"checkbox\"\n            (change)=\"updateAutoFillOnPageLoad()\"\n            [(ngModel)]=\"enableAutoFillOnPageLoad\"\n          />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"enableAutoFillOnPageLoadDesc\" | i18n }}\n        <b>{{ \"warning\" | i18n }}</b\n        >: {{ \"experimentalFeature\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"defaultAutofill\">{{ \"defaultAutoFillOnPageLoad\" | i18n }}</label>\n          <select\n            id=\"defaultAutofill\"\n            name=\"DefaultAutofill\"\n            [(ngModel)]=\"autoFillOnPageLoadDefault\"\n            (change)=\"updateAutoFillOnPageLoadDefault()\"\n            [disabled]=\"!enableAutoFillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autoFillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">{{ \"defaultAutoFillOnPageLoadDesc\" | i18n }}</div>\n    </div>\n  </ng-container>\n</content>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\n@Component({\n  selector: \"app-options\",\n  templateUrl: \"options.component.html\",\n})\nexport class OptionsComponent implements OnInit {\n  disableFavicon = false;\n  disableBadgeCounter = false;\n  enableAutoFillOnPageLoad = false;\n  autoFillOnPageLoadDefault = false;\n  autoFillOnPageLoadOptions: any[];\n  disableAutoTotpCopy = false;\n  disableContextMenuItem = false;\n  disableAddLoginNotification = false;\n  disableChangedPasswordNotification = false;\n  dontShowCards = false;\n  dontShowIdentities = false;\n  showClearClipboard = true;\n  theme: ThemeType;\n  themeOptions: any[];\n  defaultUriMatch = UriMatchType.Domain;\n  uriMatchOptions: any[];\n  clearClipboard: number;\n  clearClipboardOptions: any[];\n  showGeneral = true;\n  showAutofill = true;\n  showDisplay = true;\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    i18nService: I18nService\n  ) {\n    this.themeOptions = [\n      { name: i18nService.t(\"default\"), value: ThemeType.System },\n      { name: i18nService.t(\"light\"), value: ThemeType.Light },\n      { name: i18nService.t(\"dark\"), value: ThemeType.Dark },\n      { name: \"Nord\", value: ThemeType.Nord },\n      { name: i18nService.t(\"solarizedDark\"), value: ThemeType.SolarizedDark },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.clearClipboardOptions = [\n      { name: i18nService.t(\"never\"), value: null },\n      { name: i18nService.t(\"tenSeconds\"), value: 10 },\n      { name: i18nService.t(\"twentySeconds\"), value: 20 },\n      { name: i18nService.t(\"thirtySeconds\"), value: 30 },\n      { name: i18nService.t(\"oneMinute\"), value: 60 },\n      { name: i18nService.t(\"twoMinutes\"), value: 120 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 300 },\n    ];\n    this.autoFillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.enableAutoFillOnPageLoad = await this.stateService.getEnableAutoFillOnPageLoad();\n\n    this.autoFillOnPageLoadDefault =\n      (await this.stateService.getAutoFillOnPageLoadDefault()) ?? true;\n\n    this.disableAddLoginNotification = await this.stateService.getDisableAddLoginNotification();\n\n    this.disableChangedPasswordNotification =\n      await this.stateService.getDisableChangedPasswordNotification();\n\n    this.disableContextMenuItem = await this.stateService.getDisableContextMenuItem();\n\n    this.dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    this.dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n\n    this.disableAutoTotpCopy = !(await this.totpService.isAutoCopyEnabled());\n\n    this.disableFavicon = await this.stateService.getDisableFavicon();\n\n    this.disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n\n    this.theme = await this.stateService.getTheme();\n\n    const defaultUriMatch = await this.stateService.getDefaultUriMatch();\n    this.defaultUriMatch = defaultUriMatch == null ? UriMatchType.Domain : defaultUriMatch;\n\n    this.clearClipboard = await this.stateService.getClearClipboard();\n  }\n\n  async updateAddLoginNotification() {\n    await this.stateService.setDisableAddLoginNotification(this.disableAddLoginNotification);\n  }\n\n  async updateChangedPasswordNotification() {\n    await this.stateService.setDisableChangedPasswordNotification(\n      this.disableChangedPasswordNotification\n    );\n  }\n\n  async updateDisableContextMenuItem() {\n    await this.stateService.setDisableContextMenuItem(this.disableContextMenuItem);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateAutoTotpCopy() {\n    await this.stateService.setDisableAutoTotpCopy(this.disableAutoTotpCopy);\n  }\n\n  async updateAutoFillOnPageLoad() {\n    await this.stateService.setEnableAutoFillOnPageLoad(this.enableAutoFillOnPageLoad);\n  }\n\n  async updateAutoFillOnPageLoadDefault() {\n    await this.stateService.setAutoFillOnPageLoadDefault(this.autoFillOnPageLoadDefault);\n  }\n\n  async updateDisableFavicon() {\n    await this.stateService.setDisableFavicon(this.disableFavicon);\n  }\n\n  async updateDisableBadgeCounter() {\n    await this.stateService.setDisableBadgeCounter(this.disableBadgeCounter);\n    this.messagingService.send(\"bgUpdateContextMenu\");\n  }\n\n  async updateShowCards() {\n    await this.stateService.setDontShowCardsCurrentTab(this.dontShowCards);\n  }\n\n  async updateShowIdentities() {\n    await this.stateService.setDontShowIdentitiesCurrentTab(this.dontShowIdentities);\n  }\n\n  async saveTheme() {\n    await this.stateService.setTheme(this.theme);\n    window.setTimeout(() => window.location.reload(), 200);\n  }\n\n  async saveDefaultUriMatch() {\n    await this.stateService.setDefaultUriMatch(this.defaultUriMatch);\n  }\n\n  async saveClearClipboard() {\n    await this.stateService.setClearClipboard(this.clearClipboard);\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Directive()\nexport class PremiumComponent implements OnInit {\n  isPremium = false;\n  price = 10;\n  refreshPromise: Promise<any>;\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.isPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshPromise = this.apiService.refreshIdentityToken();\n      await this.refreshPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"refreshComplete\"));\n      this.isPremium = await this.stateService.getCanAccessPremium();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async purchase() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumPurchaseAlert\"),\n      this.i18nService.t(\"premiumPurchase\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n    }\n  }\n\n  async manage() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"premiumManageAlert\"),\n      this.i18nService.t(\"premiumManage\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=manage\");\n    }\n  }\n}\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"premiumMembership\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"content\">\n    <ng-container *ngIf=\"!isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumNotCurrentMember\" | i18n }}</p>\n      <p>{{ \"premiumSignUpAndGet\" | i18n }}</p>\n      <ul class=\"bwi-ul\">\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpStorage\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTwoStep\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpReports\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpTotp\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpSupport\" | i18n }}\n        </li>\n        <li>\n          <i class=\"bwi bwi-li bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"ppremiumSignUpFuture\" | i18n }}\n        </li>\n      </ul>\n      <p class=\"text-center lead\">{{ priceString }}</p>\n      <button type=\"button\" class=\"btn primary block\" appBlurClick (click)=\"purchase()\">\n        <b>{{ \"premiumPurchase\" | i18n }}</b>\n      </button>\n      <button\n        #refreshBtn\n        type=\"button\"\n        appBlurClick\n        (click)=\"refresh()\"\n        [disabled]=\"refreshBtn.loading\"\n        [appApiAction]=\"refreshPromise\"\n        class=\"btn link block\"\n      >\n        <span [hidden]=\"refreshBtn.loading\">{{ \"premiumRefresh\" | i18n }}</span>\n        <i\n          class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n          [hidden]=\"!refreshBtn.loading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"isPremium\">\n      <p class=\"text-center lead\">{{ \"premiumCurrentMember\" | i18n }}</p>\n      <p class=\"text-center\">{{ \"premiumCurrentMemberThanks\" | i18n }}</p>\n      <button type=\"button\" class=\"btn block primary\" appBlurClick (click)=\"manage()\">\n        <b>{{ \"premiumManage\" | i18n }}</b>\n      </button>\n    </ng-container>\n  </div>\n</content>\n","import { CurrencyPipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { PremiumComponent as BasePremiumComponent } from \"jslib-angular/components/premium.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent extends BasePremiumComponent {\n  priceString: string;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    stateService: StateService,\n    logService: LogService,\n    private currencyPipe: CurrencyPipe\n  ) {\n    super(i18nService, platformUtilsService, apiService, logService, stateService);\n\n    // Support old price string. Can be removed in future once all translations are properly updated.\n    const thePrice = this.currencyPipe.transform(this.price, \"$\");\n    this.priceString = i18nService.t(\"premiumPrice\", thePrice);\n    if (this.priceString.indexOf(\"%price%\") > -1) {\n      this.priceString = this.priceString.replace(\"%price%\", thePrice);\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals = false;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config?: ModalConfig) {\n    if (!(config?.allowMultipleModals ?? false) && this.modalCount > 0) {\n      return;\n    }\n\n    // eslint-disable-next-line\n    const [modalRef, _] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class SetPinComponent implements OnInit {\n  pin = \"\";\n  showPin = false;\n  masterPassOnRestart = true;\n  showMasterPassOnRestart = true;\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showMasterPassOnRestart = this.masterPassOnRestart =\n      !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  toggleVisibility() {\n    this.showPin = !this.showPin;\n  }\n\n  async submit() {\n    if (Utils.isNullOrWhitespace(this.pin)) {\n      this.modalRef.close(false);\n    }\n\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n    const email = await this.stateService.getEmail();\n    const pinKey = await this.cryptoService.makePinKey(this.pin, email, kdf, kdfIterations);\n    const key = await this.cryptoService.getKey();\n    const pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n    if (this.masterPassOnRestart) {\n      const encPin = await this.cryptoService.encrypt(this.pin);\n      await this.stateService.setProtectedPin(encPin.encryptedString);\n      await this.stateService.setDecryptedPinProtected(pinProtectedKey);\n    } else {\n      await this.stateService.setEncryptedPinProtected(pinProtectedKey.encryptedString);\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div>\n          {{ \"setYourPinCode\" | i18n }}\n        </div>\n        <div class=\"box\">\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"pin\">{{ \"pin\" | i18n }}</label>\n                <input\n                  id=\"pin\"\n                  type=\"{{ showPin ? 'text' : 'password' }}\"\n                  name=\"Pin\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"pin\"\n                  required\n                  appInputVerbatim\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"toggleVisibility()\"\n                  [attr.aria-pressed]=\"showPin\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPin, 'bwi-eye-slash': showPin }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox\" *ngIf=\"showMasterPassOnRestart\">\n          <label for=\"masterPasswordOnRestart\">\n            <input\n              type=\"checkbox\"\n              id=\"masterPasswordOnRestart\"\n              name=\"MasterPasswordOnRestart\"\n              [(ngModel)]=\"masterPassOnRestart\"\n            />\n            <span>{{ \"lockWithMasterPassOnRestart\" | i18n }}</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { SetPinComponent as BaseSetPinComponent } from \"jslib-angular/components/set-pin.component\";\n\n@Component({\n  templateUrl: \"set-pin.component.html\",\n})\nexport class SetPinComponent extends BaseSetPinComponent {}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Policy } from \"jslib-common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent implements ControlValueAccessor, Validator, OnInit {\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  static CUSTOM_VALUE = -100;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    if (await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout)) {\n      const vaultTimeoutPolicy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout);\n\n      this.vaultTimeoutPolicy = vaultTimeoutPolicy[0];\n      this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n      this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n      this.vaultTimeouts = this.vaultTimeouts.filter(\n        (t) =>\n          t.value <= this.vaultTimeoutPolicy.data.minutes &&\n          (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n          t.value != null\n      );\n      this.validatorChange();\n    }\n\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"box-content-row last display-block\" appBoxRow>\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n  </div>\n  <div class=\"box-content-row last\" *ngIf=\"showCustom\">\n    <div formGroupName=\"custom\" class=\"row\">\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"hours\" | i18n }}</label>\n          <input\n            id=\"hours\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            name=\"hours\"\n            formControlName=\"hours\"\n          />\n        </div>\n      </div>\n      <div class=\"col\">\n        <div class=\"display-block\" appBoxRow>\n          <label for=\"customVaultTimeout\">{{ \"minutes\" | i18n }}</label>\n          <input\n            id=\"minutes\"\n            class=\"form-control\"\n            type=\"number\"\n            min=\"0\"\n            max=\"59\"\n            name=\"minutes\"\n            formControlName=\"minutes\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"jslib-angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"settings\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"manage\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/folders\">\n        <div class=\"row-main\">{{ \"folders\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/sync\">\n        <div class=\"row-main\">{{ \"sync\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/excluded-domains\">\n        <div class=\"row-main\">{{ \"excludedDomains\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"security\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n      <div class=\"box-content-row display-block\" appBoxRow>\n        <label for=\"vaultTimeoutAction\">{{ \"vaultTimeoutAction\" | i18n }}</label>\n        <select\n          #vaultTimeoutActionSelect\n          id=\"vaultTimeoutAction\"\n          name=\"VaultTimeoutActions\"\n          [ngModel]=\"vaultTimeoutAction\"\n          (ngModelChange)=\"saveVaultTimeoutAction($event)\"\n        >\n          <option *ngFor=\"let o of vaultTimeoutActions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n        <label for=\"pin\">{{ \"unlockWithPin\" | i18n }}</label>\n        <input id=\"pin\" type=\"checkbox\" (change)=\"updatePin()\" [(ngModel)]=\"pin\" />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"biometric\">{{ \"unlockWithBiometrics\" | i18n }}</label>\n        <input\n          id=\"biometric\"\n          type=\"checkbox\"\n          (change)=\"updateBiometric()\"\n          [(ngModel)]=\"biometric\"\n        />\n      </div>\n      <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"supportsBiometric\">\n        <label for=\"autoBiometricsPrompt\">{{ \"disableAutoBiometricsPrompt\" | i18n }}</label>\n        <input\n          id=\"autoBiometricsPrompt\"\n          type=\"checkbox\"\n          (change)=\"updateAutoBiometricsPrompt()\"\n          [disabled]=\"!biometric\"\n          [(ngModel)]=\"disableAutoBiometricsPrompt\"\n        />\n      </div>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"lock()\"\n      >\n        <div class=\"row-main\">{{ \"lockNow\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"twoStep()\"\n      >\n        <div class=\"row-main\">{{ \"twoStepLogin\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"account\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row\" routerLink=\"/premium\">\n        <div class=\"row-main\">\n          <div class=\"icon text-primary\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-star-f\" aria-hidden=\"true\"></i>\n          </div>\n          <span class=\"text text-primary\"\n            ><b>{{ \"premiumMembership\" | i18n }}</b></span\n          >\n        </div>\n        <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"changePassword()\"\n        *ngIf=\"showChangeMasterPass\"\n      >\n        <div class=\"row-main\">{{ \"changeMasterPassword\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"fingerprint()\"\n      >\n        <div class=\"row-main\">{{ \"fingerprintPhrase\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"logOut()\"\n      >\n        <div class=\"row-main\">{{ \"logOut\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"tools\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"import()\"\n      >\n        <div class=\"row-main\">{{ \"importItems\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"export()\"\n      >\n        <div class=\"row-main\">{{ \"exportVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"webVault()\"\n      >\n        <div class=\"row-main\">{{ \"bitWebVault\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <h2 class=\"box-header\">{{ \"other\" | i18n }}</h2>\n    <div class=\"box-content single-line\">\n      <a class=\"box-content-row box-content-row-flex text-default\" routerLink=\"/options\">\n        <div class=\"row-main\">{{ \"options\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </a>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"about()\"\n      >\n        <div class=\"row-main\">{{ \"about\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n      >\n        <div class=\"row-main\">{{ \"learnOrg\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"help()\"\n      >\n        <div class=\"row-main\">{{ \"helpFeedback\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        appStopClick\n        appBlurClick\n        (click)=\"rate()\"\n      >\n        <div class=\"row-main\">{{ \"rateExtension\" | i18n }}</div>\n        <i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"box-footer\">{{ \"rateExtensionDesc\" | i18n }}</div>\n  </div>\n</content>\n","import { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport Swal from \"sweetalert2/src/sweetalert2.js\";\n\nimport { ModalService } from \"jslib-angular/services/modal.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { SetPinComponent } from \"../components/set-pin.component\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst RateUrls = {\n  [DeviceType.ChromeExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.FirefoxExtension]:\n    \"https://addons.mozilla.org/en-US/firefox/addon/bitwarden-password-manager/#reviews\",\n  [DeviceType.OperaExtension]:\n    \"https://addons.opera.com/en/extensions/details/bitwarden-free-password-manager/#feedback-container\",\n  [DeviceType.EdgeExtension]:\n    \"https://microsoftedge.microsoft.com/addons/detail/jbkfoedolllekgbhcbcoahefnbanhhlh\",\n  [DeviceType.VivaldiExtension]:\n    \"https://chrome.google.com/webstore/detail/bitwarden-free-password-m/nngceckbapebfimnlniiiahkandclblb/reviews\",\n  [DeviceType.SafariExtension]: \"https://apps.apple.com/app/bitwarden/id1352778147\",\n};\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit {\n  @ViewChild(\"vaultTimeoutActionSelect\", { read: ElementRef, static: true })\n  vaultTimeoutActionSelectRef: ElementRef;\n  vaultTimeouts: any[];\n  vaultTimeoutActions: any[];\n  vaultTimeoutAction: string;\n  pin: boolean = null;\n  supportsBiometric: boolean;\n  biometric = false;\n  disableAutoBiometricsPrompt = true;\n  previousVaultTimeout: number = null;\n  showChangeMasterPass = true;\n\n  vaultTimeout: FormControl = new FormControl(null);\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private vaultTimeoutService: VaultTimeoutService,\n    public messagingService: MessagingService,\n    private router: Router,\n    private environmentService: EnvironmentService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private popupUtilsService: PopupUtilsService,\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async ngOnInit() {\n    const showOnLocked =\n      !this.platformUtilsService.isFirefox() && !this.platformUtilsService.isSafari();\n\n    this.vaultTimeouts = [\n      { name: this.i18nService.t(\"immediately\"), value: 0 },\n      { name: this.i18nService.t(\"oneMinute\"), value: 1 },\n      { name: this.i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: this.i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: this.i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: this.i18nService.t(\"oneHour\"), value: 60 },\n      { name: this.i18nService.t(\"fourHours\"), value: 240 },\n      // { name: i18nService.t('onIdle'), value: -4 },\n      // { name: i18nService.t('onSleep'), value: -3 },\n    ];\n\n    if (showOnLocked) {\n      this.vaultTimeouts.push({ name: this.i18nService.t(\"onLocked\"), value: -2 });\n    }\n\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"onRestart\"), value: -1 });\n    this.vaultTimeouts.push({ name: this.i18nService.t(\"never\"), value: null });\n\n    this.vaultTimeoutActions = [\n      { name: this.i18nService.t(\"lock\"), value: \"lock\" },\n      { name: this.i18nService.t(\"logOut\"), value: \"logOut\" },\n    ];\n\n    let timeout = await this.vaultTimeoutService.getVaultTimeout();\n    if (timeout != null) {\n      if (timeout === -2 && !showOnLocked) {\n        timeout = -1;\n      }\n      this.vaultTimeout.setValue(timeout);\n    }\n    this.previousVaultTimeout = this.vaultTimeout.value;\n    this.vaultTimeout.valueChanges.subscribe(async (value) => {\n      await this.saveVaultTimeout(value);\n    });\n\n    const action = await this.stateService.getVaultTimeoutAction();\n    this.vaultTimeoutAction = action == null ? \"lock\" : action;\n\n    const pinSet = await this.vaultTimeoutService.isPinLockSet();\n    this.pin = pinSet[0] || pinSet[1];\n\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometric = await this.vaultTimeoutService.isBiometricLockSet();\n    this.disableAutoBiometricsPrompt =\n      (await this.stateService.getDisableAutoBiometricsPrompt()) ?? true;\n    this.showChangeMasterPass = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async saveVaultTimeout(newValue: number) {\n    if (newValue == null) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"neverLockWarning\"),\n        null,\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeout.setValue(this.previousVaultTimeout);\n        return;\n      }\n    }\n\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    this.previousVaultTimeout = this.vaultTimeout.value;\n\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    if (this.previousVaultTimeout == null) {\n      this.messagingService.send(\"bgReseedStorage\");\n    }\n  }\n\n  async saveVaultTimeoutAction(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutActions.forEach((option: any, i) => {\n          if (option.value === this.vaultTimeoutAction) {\n            this.vaultTimeoutActionSelectRef.nativeElement.value =\n              i + \": \" + this.vaultTimeoutAction;\n          }\n        });\n        return;\n      }\n    }\n\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"vaultTimeoutToLarge\"));\n      return;\n    }\n\n    this.vaultTimeoutAction = newValue;\n    await this.vaultTimeoutService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n  }\n\n  async updatePin() {\n    if (this.pin) {\n      const ref = this.modalService.open(SetPinComponent, { allowMultipleModals: true });\n\n      if (ref == null) {\n        this.pin = false;\n        return;\n      }\n\n      this.pin = await ref.onClosedPromise();\n    } else {\n      await this.cryptoService.clearPinProtectedKey();\n      await this.vaultTimeoutService.clear();\n    }\n  }\n\n  async updateBiometric() {\n    if (this.biometric && this.supportsBiometric) {\n      let granted;\n      try {\n        granted = await BrowserApi.requestPermission({ permissions: [\"nativeMessaging\"] });\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n\n        if (this.platformUtilsService.isFirefox() && this.popupUtilsService.inSidebar(window)) {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(\"nativeMessaginPermissionSidebarDesc\"),\n            this.i18nService.t(\"nativeMessaginPermissionSidebarTitle\"),\n            this.i18nService.t(\"ok\"),\n            null\n          );\n          this.biometric = false;\n          return;\n        }\n      }\n\n      if (!granted) {\n        await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"nativeMessaginPermissionErrorDesc\"),\n          this.i18nService.t(\"nativeMessaginPermissionErrorTitle\"),\n          this.i18nService.t(\"ok\"),\n          null\n        );\n        this.biometric = false;\n        return;\n      }\n\n      const submitted = Swal.fire({\n        heightAuto: false,\n        buttonsStyling: false,\n        titleText: this.i18nService.t(\"awaitDesktop\"),\n        text: this.i18nService.t(\"awaitDesktopDesc\"),\n        icon: \"info\",\n        iconHtml: '<i class=\"swal-custom-icon bwi bwi-info-circle text-info\"></i>',\n        showCancelButton: true,\n        cancelButtonText: this.i18nService.t(\"cancel\"),\n        showConfirmButton: false,\n        allowOutsideClick: false,\n      });\n\n      await this.stateService.setBiometricAwaitingAcceptance(true);\n      await this.cryptoService.toggleKey();\n\n      await Promise.race([\n        submitted.then(async (result) => {\n          if (result.dismiss === Swal.DismissReason.cancel) {\n            this.biometric = false;\n            await this.stateService.setBiometricAwaitingAcceptance(null);\n          }\n        }),\n        this.platformUtilsService\n          .authenticateBiometric()\n          .then((result) => {\n            this.biometric = result;\n\n            Swal.close();\n            if (this.biometric === false) {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorEnableBiometricTitle\"),\n                this.i18nService.t(\"errorEnableBiometricDesc\")\n              );\n            }\n          })\n          .catch((e) => {\n            // Handle connection errors\n            this.biometric = false;\n          }),\n      ]);\n    } else {\n      await this.stateService.setBiometricUnlock(null);\n      await this.stateService.setBiometricLocked(false);\n    }\n  }\n\n  async updateAutoBiometricsPrompt() {\n    await this.stateService.setDisableAutoBiometricsPrompt(this.disableAutoBiometricsPrompt);\n  }\n\n  async lock() {\n    await this.vaultTimeoutService.lock(true);\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async changePassword() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"changeMasterPasswordConfirmation\"),\n      this.i18nService.t(\"changeMasterPassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\n        \"https://bitwarden.com/help/master-password/#change-your-master-password\"\n      );\n    }\n  }\n\n  async twoStep() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepLoginConfirmation\"),\n      this.i18nService.t(\"twoStepLogin\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/setup-two-step-login/\");\n    }\n  }\n\n  async share() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"learnOrgConfirmation\"),\n      this.i18nService.t(\"learnOrg\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      BrowserApi.createNewTab(\"https://bitwarden.com/help/about-organizations/\");\n    }\n  }\n\n  async webVault() {\n    const url = this.environmentService.getWebVaultUrl();\n    BrowserApi.createNewTab(url);\n  }\n\n  import() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/import-data/\");\n  }\n\n  export() {\n    this.router.navigate([\"/export\"]);\n  }\n\n  help() {\n    BrowserApi.createNewTab(\"https://bitwarden.com/help/\");\n  }\n\n  about() {\n    const year = new Date().getFullYear();\n    const versionText = document.createTextNode(\n      this.i18nService.t(\"version\") + \": \" + BrowserApi.getApplicationVersion()\n    );\n    const div = document.createElement(\"div\");\n    div.innerHTML =\n      `<p class=\"text-center\"><i class=\"bwi bwi-shield bwi-3x\" aria-hidden=\"true\"></i></p>\n            <p class=\"text-center\"><b>Bitwarden</b><br>&copy; Bitwarden Inc. 2015-` +\n      year +\n      `</p>`;\n    div.appendChild(versionText);\n\n    Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showConfirmButton: false,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n    });\n  }\n\n  async fingerprint() {\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    const p = document.createElement(\"p\");\n    p.innerText = this.i18nService.t(\"yourAccountsFingerprint\") + \":\";\n    const p2 = document.createElement(\"p\");\n    p2.innerText = fingerprint.join(\"-\");\n    const div = document.createElement(\"div\");\n    div.appendChild(p);\n    div.appendChild(p2);\n\n    const result = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      html: div,\n      showCancelButton: true,\n      cancelButtonText: this.i18nService.t(\"close\"),\n      showConfirmButton: true,\n      confirmButtonText: this.i18nService.t(\"learnMore\"),\n    });\n\n    if (result.value) {\n      this.platformUtilsService.launchUri(\"https://bitwarden.com/help/fingerprint-phrase/\");\n    }\n  }\n\n  rate() {\n    const deviceType = this.platformUtilsService.getDevice();\n    BrowserApi.createNewTab((RateUrls as any)[deviceType]);\n  }\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\n\n@Component({\n  selector: \"app-sync\",\n  templateUrl: \"sync.component.html\",\n})\nexport class SyncComponent implements OnInit {\n  lastSync = \"--\";\n  syncPromise: Promise<any>;\n\n  constructor(\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    await this.setLastSync();\n  }\n\n  async sync() {\n    this.syncPromise = this.syncService.fullSync(true);\n    const success = await this.syncPromise;\n    if (success) {\n      await this.setLastSync();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"syncingComplete\"));\n    } else {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"syncingFailed\"));\n    }\n  }\n\n  async setLastSync() {\n    const last = await this.syncService.getLastSync();\n    if (last != null) {\n      this.lastSync = last.toLocaleDateString() + \" \" + last.toLocaleTimeString();\n    } else {\n      this.lastSync = this.i18nService.t(\"never\");\n    }\n  }\n}\n","<div class=\"tab-page\">\n  <router-outlet></router-outlet>\n  <nav class=\"tabs\">\n    <ul>\n      <li routerLinkActive=\"active\" *ngIf=\"showCurrentTab\">\n        <a routerLink=\"current\" appA11yTitle=\"{{ 'currentTab' | i18n }}\">\n          <i class=\"bwi bwi-folder-closed-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"tab\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"vault\" appA11yTitle=\"{{ 'myVault' | i18n }}\">\n          <i class=\"bwi bwi-lock-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"myVault\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"send\" appA11yTitle=\"{{ 'send' | i18n }}\">\n          <i class=\"bwi bwi-send-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"send\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"generator\" appA11yTitle=\"{{ 'passGen' | i18n }}\">\n          <i class=\"bwi bwi-generate-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"generator\" | i18n }}\n        </a>\n      </li>\n      <li routerLinkActive=\"active\">\n        <a routerLink=\"settings\" appA11yTitle=\"{{ 'settings' | i18n }}\">\n          <i class=\"bwi bwi-cog-f bwi-2x\" aria-hidden=\"true\"></i>{{ \"settings\" | i18n }}\n        </a>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<header>\n  <div class=\"left\">\n    <a routerLink=\"/tabs/settings\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </a>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"sync\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"content center-content\">\n    <button\n      type=\"button\"\n      class=\"btn block primary\"\n      (click)=\"sync()\"\n      #syncBtn\n      [disabled]=\"syncBtn.loading\"\n      [appApiAction]=\"syncPromise\"\n    >\n      <span [hidden]=\"syncBtn.loading\">{{ \"syncVaultNow\" | i18n }}</span>\n      <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!syncBtn.loading\" aria-hidden=\"true\"></i>\n    </button>\n    <p class=\"text-center text-muted small\">{{ \"lastSync\" | i18n }} {{ lastSync }}</p>\n  </div>\n</content>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PopupUtilsService } from \"./services/popup-utils.service\";\n\n@Component({\n  selector: \"app-tabs\",\n  templateUrl: \"tabs.component.html\",\n})\nexport class TabsComponent implements OnInit {\n  showCurrentTab = true;\n\n  constructor(private popupUtilsService: PopupUtilsService) {}\n\n  ngOnInit() {\n    this.showCurrentTab = !this.popupUtilsService.inPopout(window);\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/itemView\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n}\n","import { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n}\n","import { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./itemView\";\nimport { LoginUriView } from \"./loginUriView\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secureNote\";\n\nimport { ItemView } from \"./itemView\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachmentView\";\nimport { CardView } from \"./cardView\";\nimport { FieldView } from \"./fieldView\";\nimport { IdentityView } from \"./identityView\";\nimport { LoginView } from \"./loginView\";\nimport { PasswordHistoryView } from \"./passwordHistoryView\";\nimport { SecureNoteView } from \"./secureNoteView\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View {\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: any;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/loginUri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && Utils.tldEndingRegex.test(this.uri)\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  saveWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { SecureNoteType } from \"jslib-common/enums/secureNoteType\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CardView } from \"jslib-common/models/view/cardView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\nimport { IdentityView } from \"jslib-common/models/view/identityView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\nimport { SecureNoteView } from \"jslib-common/models/view/secureNoteView\";\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders: FolderView[];\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected writeableCollections: CollectionView[];\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership)) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders = await this.folderService.getAllDecrypted();\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (\n      this.cipher.login != null &&\n      this.cipher.login.password != null &&\n      this.cipher.login.password.length\n    ) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipherService.saveWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<div class=\"box\">\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <!-- Current custom fields -->\n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n      <div\n        class=\"box-content-row box-content-row-multi box-draggable-row\"\n        appBoxRow\n        cdkDrag\n        *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n        [ngClass]=\"{ 'box-content-row-checkbox': f.type === fieldType.Boolean }\"\n      >\n        <button\n          type=\"button\"\n          appStopClick\n          (click)=\"removeField(f)\"\n          appA11yTitle=\"{{ 'remove' | i18n }}\"\n        >\n          <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <label for=\"fieldName{{ i }}\" class=\"sr-only\">{{ \"name\" | i18n }}</label>\n        <label for=\"fieldValue{{ i }}\" class=\"sr-only\">{{ \"value\" | i18n }}</label>\n        <div class=\"row-main\">\n          <input\n            id=\"fieldName{{ i }}\"\n            type=\"text\"\n            name=\"Field.Name{{ i }}\"\n            [(ngModel)]=\"f.name\"\n            class=\"row-label\"\n            placeholder=\"{{ 'name' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Text -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"text\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            *ngIf=\"f.type === fieldType.Text\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            appInputVerbatim\n          />\n          <!-- Hidden -->\n          <input\n            id=\"fieldValue{{ i }}\"\n            type=\"{{ f.showValue ? 'text' : 'password' }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.value\"\n            class=\"monospaced\"\n            appInputVerbatim\n            *ngIf=\"f.type === fieldType.Hidden\"\n            placeholder=\"{{ 'value' | i18n }}\"\n            [disabled]=\"!cipher.viewPassword && !f.newField\"\n          />\n          <!-- Linked -->\n          <select\n            id=\"fieldValue{{ i }}\"\n            name=\"Field.Value{{ i }}\"\n            [(ngModel)]=\"f.linkedId\"\n            *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n          >\n            <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <!-- Boolean -->\n        <input\n          id=\"fieldValue{{ i }}\"\n          name=\"Field.Value{{ i }}\"\n          type=\"checkbox\"\n          [(ngModel)]=\"f.value\"\n          *ngIf=\"f.type === fieldType.Boolean\"\n          appTrueFalseValue\n          trueValue=\"true\"\n          falseValue=\"false\"\n        />\n        <div\n          class=\"action-buttons\"\n          *ngIf=\"f.type === fieldType.Hidden && (cipher.viewPassword || f.newField)\"\n        >\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appBlurClick\n            appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n            (click)=\"toggleFieldValue(f)\"\n            [attr.aria-pressed]=\"f.showValue\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n            ></i>\n          </button>\n        </div>\n        <div class=\"drag-handle\" appA11yTitle=\"{{ 'dragToSort' | i18n }}\" cdkDragHandle>\n          <i class=\"bwi bwi-hamburger\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </div>\n    <!-- Add new custom field -->\n    <div class=\"box-content-row box-content-row-newmulti\" appBoxRow>\n      <button type=\"button\" appStopClick (click)=\"addField()\">\n        <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i>\n        {{ \"newCustomField\" | i18n }}\n      </button>\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\" class=\"field-type\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"jslib-angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ title }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content *ngIf=\"cipher\">\n    <app-callout type=\"info\" *ngIf=\"allowOwnershipOptions() && !allowPersonal\">\n      {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n    </app-callout>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"itemInformation\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" *ngIf=\"!editMode\" appBoxRow>\n          <label for=\"type\">{{ \"type\" | i18n }}</label>\n          <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\">\n            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input id=\"name\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\" />\n        </div>\n        <!-- Login -->\n        <div *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              name=\"Login.Username\"\n              [(ngModel)]=\"cipher.login.username\"\n              inputmode=\"email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n              <input\n                id=\"loginPassword\"\n                class=\"monospaced\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"Login.Password\"\n                [(ngModel)]=\"cipher.login.password\"\n                appInputVerbatim\n                [disabled]=\"!cipher.viewPassword\"\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                #checkPasswordBtn\n                class=\"row-btn btn\"\n                appBlurClick\n                appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                (click)=\"checkPassword()\"\n                [appApiAction]=\"checkPasswordPromise\"\n                [disabled]=\"checkPasswordBtn.loading\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg bwi-check-circle\"\n                  [hidden]=\"checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                  [hidden]=\"!checkPasswordBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n                [attr.aria-pressed]=\"showPassword\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                (click)=\"generatePassword()\"\n                *ngIf=\"cipher.viewPassword\"\n              >\n                <i class=\"bwi bwi-lg bwi-generate\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n            <input\n              id=\"loginTotp\"\n              type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n              name=\"Login.Totp\"\n              class=\"monospaced\"\n              [(ngModel)]=\"cipher.login.totp\"\n              appInputVerbatim\n              [disabled]=\"!cipher.viewPassword\"\n            />\n          </div>\n        </div>\n        <!-- Card -->\n        <div *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n            <input\n              id=\"cardCardholderName\"\n              type=\"text\"\n              name=\"Card.CardCardholderName\"\n              [(ngModel)]=\"cipher.card.cardholderName\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <input\n                id=\"cardNumber\"\n                class=\"monospaced\"\n                type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                name=\"Card.Number\"\n                [(ngModel)]=\"cipher.card.number\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardNumber()\"\n                [attr.aria-pressed]=\"showCardNumber\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n            <select id=\"cardBrand\" name=\"Card.Brand\" [(ngModel)]=\"cipher.card.brand\">\n              <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n            <select id=\"cardExpMonth\" name=\"Card.ExpMonth\" [(ngModel)]=\"cipher.card.expMonth\">\n              <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n            <input\n              id=\"cardExpYear\"\n              type=\"text\"\n              name=\"Card.ExpYear\"\n              [(ngModel)]=\"cipher.card.expYear\"\n              placeholder=\"{{ 'ex' | i18n }} {{ currentDate | date: 'yyyy' }}\"\n            />\n          </div>\n          <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n            <div class=\"row-main\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <input\n                id=\"cardCode\"\n                class=\"monospaced\"\n                type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                name=\"Card.Code\"\n                [(ngModel)]=\"cipher.card.code\"\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleCardCode()\"\n                [attr.aria-pressed]=\"showCardCode\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <!-- Identity -->\n        <div *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n            <select id=\"idTitle\" name=\"Identity.Title\" [(ngModel)]=\"cipher.identity.title\">\n              <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                {{ o.name }}\n              </option>\n            </select>\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n            <input\n              id=\"idFirstName\"\n              type=\"text\"\n              name=\"Identity.FirstName\"\n              [(ngModel)]=\"cipher.identity.firstName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n            <input\n              id=\"idMiddleName\"\n              type=\"text\"\n              name=\"Identity.MiddleName\"\n              [(ngModel)]=\"cipher.identity.middleName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n            <input\n              id=\"idLastName\"\n              type=\"text\"\n              name=\"Identity.LastName\"\n              [(ngModel)]=\"cipher.identity.lastName\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n            <input\n              id=\"idUsername\"\n              type=\"text\"\n              name=\"Identity.Username\"\n              [(ngModel)]=\"cipher.identity.username\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n            <input\n              id=\"idCompany\"\n              type=\"text\"\n              name=\"Identity.Company\"\n              [(ngModel)]=\"cipher.identity.company\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n            <input\n              id=\"idSsn\"\n              type=\"text\"\n              name=\"Identity.SSN\"\n              [(ngModel)]=\"cipher.identity.ssn\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n            <input\n              id=\"idPassportNumber\"\n              type=\"text\"\n              name=\"Identity.PassportNumber\"\n              [(ngModel)]=\"cipher.identity.passportNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n            <input\n              id=\"idLicenseNumber\"\n              type=\"text\"\n              name=\"Identity.LicenseNumber\"\n              [(ngModel)]=\"cipher.identity.licenseNumber\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"idEmail\"\n              type=\"text\"\n              name=\"Identity.Email\"\n              [(ngModel)]=\"cipher.identity.email\"\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n            <input\n              id=\"idPhone\"\n              type=\"text\"\n              name=\"Identity.Phone\"\n              [(ngModel)]=\"cipher.identity.phone\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n            <input\n              id=\"idAddress1\"\n              type=\"text\"\n              name=\"Identity.Address1\"\n              [(ngModel)]=\"cipher.identity.address1\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n            <input\n              id=\"idAddress2\"\n              type=\"text\"\n              name=\"Identity.Address2\"\n              [(ngModel)]=\"cipher.identity.address2\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n            <input\n              id=\"idAddress3\"\n              type=\"text\"\n              name=\"Identity.Address3\"\n              [(ngModel)]=\"cipher.identity.address3\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n            <input\n              id=\"idCity\"\n              type=\"text\"\n              name=\"Identity.City\"\n              [(ngModel)]=\"cipher.identity.city\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n            <input\n              id=\"idState\"\n              type=\"text\"\n              name=\"Identity.State\"\n              [(ngModel)]=\"cipher.identity.state\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n            <input\n              id=\"idPostalCode\"\n              type=\"text\"\n              name=\"Identity.PostalCode\"\n              [(ngModel)]=\"cipher.identity.postalCode\"\n            />\n          </div>\n          <div class=\"box-content-row\" appBoxRow>\n            <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n            <input\n              id=\"idCountry\"\n              type=\"text\"\n              name=\"Identity.Country\"\n              [(ngModel)]=\"cipher.identity.country\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"cipher.type === cipherType.Login\">\n      <div class=\"box-content\">\n        <ng-container *ngIf=\"cipher.login.hasUris\">\n          <div\n            class=\"box-content-row box-content-row-multi\"\n            appBoxRow\n            *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n          >\n            <button\n              type=\"button\"\n              appStopClick\n              (click)=\"removeUri(u)\"\n              appA11yTitle=\"{{ 'remove' | i18n }}\"\n            >\n              <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"row-main\">\n              <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n              <input\n                id=\"loginUri{{ i }}\"\n                type=\"text\"\n                name=\"Login.Uris[{{ i }}].Uri\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"u.showUriOptionsInput === true\"\n                placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                inputmode=\"url\"\n                appInputVerbatim\n              />\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"currentUri\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                *ngIf=\"currentUris && currentUris.length\"\n                id=\"currentUris{{ i }}\"\n                name=\"Login.Uris[{{ i }}].CurrentUris\"\n                [(ngModel)]=\"u.uri\"\n                [hidden]=\"!u.showCurrentUris\"\n              >\n                <option [ngValue]=\"null\">-- {{ \"select\" | i18n }} --</option>\n                <option *ngFor=\"let u of currentUris\" [ngValue]=\"u\">{{ u }}</option>\n              </select>\n              <label for=\"loginUriMatch{{ i }}\" class=\"sr-only\">\n                {{ \"matchDetection\" | i18n }} {{ i + 1 }}\n              </label>\n              <select\n                id=\"loginUriMatch{{ i }}\"\n                name=\"Login.Uris[{{ i }}].Match\"\n                [(ngModel)]=\"u.match\"\n                [hidden]=\"u.showOptions === false || (u.showOptions == null && u.match == null)\"\n                (change)=\"loginUriMatchChanged(u)\"\n              >\n                <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n            <div class=\"action-buttons\">\n              <button\n                type=\"button\"\n                *ngIf=\"currentUris && currentUris.length\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleCurrentUris' | i18n }}\"\n                (click)=\"toggleUriInput(u)\"\n              >\n                <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-list\"></i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"row-btn\"\n                appStopClick\n                appBlurClick\n                appA11yTitle=\"{{ 'toggleOptions' | i18n }}\"\n                (click)=\"toggleUriOptions(u)\"\n              >\n                <i class=\"bwi bwi-lg bwi-cog\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n        </ng-container>\n        <button\n          type=\"button\"\n          appStopClick\n          appBlurClick\n          (click)=\"addUri()\"\n          class=\"box-content-row box-content-row-newmulti\"\n        >\n          <i class=\"bwi bwi-plus-circle bwi-fw bwi-lg\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"showAutoFillOnPageLoadOptions\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"autofillOnPageLoad\">{{ \"itemAutoFillOnPageLoad\" | i18n }} </label>\n          <select\n            id=\"autofillOnPageLoad\"\n            name=\"AutofillOnPageLoad\"\n            [(ngModel)]=\"cipher.login.autofillOnPageLoad\"\n          >\n            <option *ngFor=\"let o of autofillOnPageLoadOptions\" [ngValue]=\"o.value\">\n              {{ o.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\">\n            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow>\n          <label for=\"favorite\">{{ \"favorite\" | i18n }}</label>\n          <input id=\"favorite\" type=\"checkbox\" name=\"Favorite\" [(ngModel)]=\"cipher.favorite\" />\n        </div>\n        <div class=\"box-content-row box-content-row-checkbox\" appBoxRow *ngIf=\"canUseReprompt\">\n          <label for=\"passwordPrompt\">\n            {{ \"passwordPrompt\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </label>\n          <input\n            id=\"passwordPrompt\"\n            type=\"checkbox\"\n            name=\"PasswordPrompt\"\n            [ngModel]=\"reprompt\"\n            (change)=\"repromptChanged()\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"attachments()\"\n          *ngIf=\"editMode && showAttachments && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"attachments\" | i18n }}</div>\n          <i\n            class=\"bwi bwi-external-link bwi-lg bwi-fw\"\n            aria-hidden=\"true\"\n            *ngIf=\"openAttachmentsInPopup\"\n          ></i>\n          <i\n            class=\"bwi bwi-angle-right row-sub-icon\"\n            aria-hidden=\"true\"\n            *ngIf=\"!openAttachmentsInPopup\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row box-content-row-flex text-default\"\n          appStopClick\n          appBlurClick\n          (click)=\"editCollections()\"\n          *ngIf=\"editMode && cipher.organizationId && !cloneMode\"\n        >\n          <div class=\"row-main\">{{ \"collections\" | i18n }}</div>\n          <i class=\"bwi bwi-angle-right row-sub-icon\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\"></textarea>\n        </div>\n      </div>\n    </div>\n    <app-vault-add-edit-custom-fields\n      [cipher]=\"cipher\"\n      [thisCipherType]=\"cipher.type\"\n      [editMode]=\"editMode\"\n    >\n    </app-vault-add-edit-custom-fields>\n    <div class=\"box\" *ngIf=\"allowOwnershipOptions()\">\n      <h2 class=\"box-header\">\n        {{ \"ownership\" | i18n }}\n      </h2>\n      <div class=\"box-content\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n          <select\n            id=\"organizationId\"\n            class=\"form-control\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"cipher.organizationId\"\n            (change)=\"organizationChanged()\"\n          >\n            <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"editMode && !cloneMode\">\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"delete()\"\n          [appApiAction]=\"deletePromise\"\n          #deleteBtn\n        >\n          <div class=\"row-main text-danger\">\n            <div class=\"icon text-danger\" aria-hidden=\"true\">\n              <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"deleteBtn.loading\"></i>\n              <i class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\" [hidden]=\"!deleteBtn.loading\"></i>\n            </div>\n            <span>{{ \"deleteItem\" | i18n }}</span>\n          </div>\n        </button>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"jslib-angular/components/add-edit.component\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  currentUris: string[];\n  showAttachments = true;\n  openAttachmentsInPopup: boolean;\n  showAutoFillOnPageLoadOptions: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    eventService: EventService,\n    policyService: PolicyService,\n    private popupUtilsService: PopupUtilsService,\n    organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      }\n      if (params.folderId) {\n        this.folderId = params.folderId;\n      }\n      if (params.collectionId) {\n        const collection = this.writeableCollections.find((c) => c.id === params.collectionId);\n        if (collection != null) {\n          this.collectionIds = [collection.id];\n          this.organizationId = collection.organizationId;\n        }\n      }\n      if (params.type) {\n        const type = parseInt(params.type, null);\n        this.type = type;\n      }\n      this.editMode = !params.cipherId;\n\n      if (params.cloneMode != null) {\n        this.cloneMode = params.cloneMode === \"true\";\n      }\n      await this.load();\n\n      if (!this.editMode || this.cloneMode) {\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.name &&\n          (this.cipher.name == null || this.cipher.name === \"\")\n        ) {\n          this.cipher.name = params.name;\n        }\n        if (\n          !this.popupUtilsService.inPopout(window) &&\n          params.uri &&\n          (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n        ) {\n          this.cipher.login.uris[0].uri = params.uri;\n        }\n      }\n\n      this.openAttachmentsInPopup = this.popupUtilsService.inPopup(window);\n    });\n\n    if (!this.editMode) {\n      const tabs = await BrowserApi.tabsQuery({ windowType: \"normal\" });\n      this.currentUris =\n        tabs == null\n          ? null\n          : tabs.filter((tab) => tab.url != null && tab.url !== \"\").map((tab) => tab.url);\n    }\n\n    window.setTimeout(() => {\n      if (!this.editMode) {\n        if (this.cipher.name != null && this.cipher.name !== \"\") {\n          document.getElementById(\"loginUsername\").focus();\n        } else {\n          document.getElementById(\"name\").focus();\n        }\n      }\n    }, 200);\n  }\n\n  async load() {\n    await super.load();\n    this.showAutoFillOnPageLoadOptions =\n      this.cipher.type === CipherType.Login &&\n      (await this.stateService.getEnableAutoFillOnPageLoad());\n  }\n\n  async submit(): Promise<boolean> {\n    if (await super.submit()) {\n      if (this.cloneMode) {\n        this.router.navigate([\"/tabs/vault\"]);\n      } else {\n        this.location.back();\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  attachments() {\n    super.attachments();\n\n    if (this.openAttachmentsInPopup) {\n      const destinationUrl = this.router\n        .createUrlTree([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } })\n        .toString();\n      const currentBaseUrl = window.location.href.replace(this.router.url, \"\");\n      this.popupUtilsService.popOut(window, currentBaseUrl + destinationUrl);\n    } else {\n      this.router.navigate([\"/attachments\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  editCollections() {\n    super.editCollections();\n    if (this.cipher.organizationId != null) {\n      this.router.navigate([\"/collections\"], { queryParams: { cipherId: this.cipher.id } });\n    }\n  }\n\n  cancel() {\n    super.cancel();\n    this.location.back();\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      this.stateService.setAddEditCipherInfo({\n        cipher: this.cipher,\n        collectionIds:\n          this.collections == null\n            ? []\n            : this.collections.filter((c) => (c as any).checked).map((c) => c.id),\n      });\n      this.router.navigate([\"generator\"]);\n    }\n    return confirmed;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await super.delete();\n    if (confirmed) {\n      this.router.navigate([\"/tabs/vault\"]);\n    }\n    return confirmed;\n  }\n\n  toggleUriInput(uri: LoginUriView) {\n    const u = uri as any;\n    u.showCurrentUris = !u.showCurrentUris;\n  }\n\n  allowOwnershipOptions(): boolean {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    } else {\n      if (status === 429) {\n        this.message = \"Rate limit exceeded. Try again later.\";\n      }\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const buf = await response.arrayBuffer();\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"close()\" *ngIf=\"openedAttachmentsInPopup\">\n        {{ \"close\" | i18n }}\n      </button>\n      <button type=\"button\" appBlurClick (click)=\"back()\" *ngIf=\"!openedAttachmentsInPopup\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"attachments\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\" *ngIf=\"cipher && cipher.hasAttachments\">\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let a of cipher.attachments\">\n          <div class=\"row-main\">\n            {{ a.fileName }}\n          </div>\n          <small class=\"row-sub-label\">{{ a.sizeName }}</small>\n          <div class=\"action-buttons no-pad\">\n            <button\n              type=\"button\"\n              class=\"row-btn btn\"\n              type=\"button\"\n              appStopClick\n              appBlurClick\n              appA11yTitle=\"{{ 'deleteAttachment' | i18n }}\"\n              (click)=\"delete(a)\"\n              #deleteBtn\n              [appApiAction]=\"deletePromises[a.id]\"\n              [disabled]=\"deleteBtn.loading\"\n            >\n              <i\n                class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                [hidden]=\"deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                [hidden]=\"!deleteBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"box\">\n      <h2 class=\"box-header\">\n        {{ \"newAttachment\" | i18n }}\n      </h2>\n      <div class=\"box-content no-hover\">\n        <div class=\"box-content-row\">\n          <label for=\"file\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" name=\"file\" required />\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"maxFileSize\" | i18n }}\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"jslib-angular/components/attachments.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  openedAttachmentsInPopup: boolean;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    private location: Location,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.init();\n    });\n\n    this.openedAttachmentsInPopup = history.length === 1;\n  }\n\n  back() {\n    this.location.back();\n  }\n\n  close() {\n    window.close();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    this.ciphers = [];\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import {\n  CdkFixedSizeVirtualScroll,\n  FixedSizeVirtualScrollStrategy,\n  VIRTUAL_SCROLL_STRATEGY,\n} from \"@angular/cdk/scrolling\";\nimport { Directive, forwardRef } from \"@angular/core\";\n\n// Custom virtual scroll strategy for cdk-virtual-scroll\n// Uses a sample list item to set the itemSize for FixedSizeVirtualScrollStrategy\n// The use case is the same as FixedSizeVirtualScrollStrategy, but it avoids locking in pixel sizes in the template.\nexport class CipherListVirtualScrollStrategy extends FixedSizeVirtualScrollStrategy {\n  private checkItemSizeCallback: any;\n  private timeout: any;\n\n  constructor(\n    itemSize: number,\n    minBufferPx: number,\n    maxBufferPx: number,\n    checkItemSizeCallback: any\n  ) {\n    super(itemSize, minBufferPx, maxBufferPx);\n    this.checkItemSizeCallback = checkItemSizeCallback;\n  }\n\n  onContentRendered() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n\n    this.timeout = setTimeout(this.checkItemSizeCallback, 500);\n  }\n}\n\nexport function _cipherListVirtualScrollStrategyFactory(cipherListDir: CipherListVirtualScroll) {\n  return cipherListDir._scrollStrategy;\n}\n\n@Directive({\n  selector: \"cdk-virtual-scroll-viewport[itemSize]\",\n  providers: [\n    {\n      provide: VIRTUAL_SCROLL_STRATEGY,\n      useFactory: _cipherListVirtualScrollStrategyFactory,\n      deps: [forwardRef(() => CipherListVirtualScroll)],\n    },\n  ],\n})\nexport class CipherListVirtualScroll extends CdkFixedSizeVirtualScroll {\n  _scrollStrategy: CipherListVirtualScrollStrategy;\n\n  constructor() {\n    super();\n    this._scrollStrategy = new CipherListVirtualScrollStrategy(\n      this.itemSize,\n      this.minBufferPx,\n      this.maxBufferPx,\n      this.checkAndUpdateItemSize\n    );\n  }\n\n  checkAndUpdateItemSize = () => {\n    const sampleItem = document.querySelector(\n      \"cdk-virtual-scroll-viewport .virtual-scroll-item\"\n    ) as HTMLElement;\n    const newItemSize = sampleItem?.offsetHeight;\n\n    if (newItemSize != null && newItemSize !== this.itemSize) {\n      this.itemSize = newItemSize;\n      this._scrollStrategy.updateItemAndBufferSize(\n        this.itemSize,\n        this.minBufferPx,\n        this.maxBufferPx\n      );\n    }\n  };\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<span\n  class=\"row-btn\"\n  (click)=\"view()\"\n  appStopClick\n  appStopProp\n  appA11yTitle=\"{{ 'view' | i18n }}\"\n  *ngIf=\"showView\"\n>\n  <i class=\"bwi bwi-lg bwi-list-alt\" aria-hidden=\"true\"></i>\n</span>\n<ng-container *ngIf=\"cipher.type === cipherType.Login\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'launch' | i18n }}\"\n    (click)=\"launchCipher()\"\n    *ngIf=\"!showView\"\n    [ngClass]=\"{ disabled: !cipher.login.canLaunch }\"\n  >\n    <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.username, 'username', 'Username')\"\n    [ngClass]=\"{ disabled: !cipher.login.username }\"\n  >\n    <i class=\"bwi bwi-lg bwi-user\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.password, 'password', 'Password')\"\n    [ngClass]=\"{ disabled: !cipher.login.password || !cipher.viewPassword }\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.login.totp, 'verificationCodeTotp', 'TOTP')\"\n    [ngClass]=\"{ disabled: !displayTotpCopyButton(cipher) }\"\n  >\n    <i class=\"bwi bwi-lg bwi-clock\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.Card\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.number, 'number', 'Card Number')\"\n    [ngClass]=\"{ disabled: !cipher.card.number }\"\n  >\n    <i class=\"bwi bwi-lg bwi-hashtag\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n    (click)=\"copy(cipher, cipher.card.code, 'securityCode', 'Security Code')\"\n    [ngClass]=\"{ disabled: !cipher.card.code }\"\n  >\n    <i class=\"bwi bwi-lg bwi-key\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n<ng-container *ngIf=\"cipher.type === cipherType.SecureNote\">\n  <span\n    class=\"row-btn\"\n    appStopClick\n    appStopProp\n    appA11yTitle=\"{{ 'copyNote' | i18n }}\"\n    (click)=\"copy(cipher, cipher.notes, 'note', 'Note')\"\n    [ngClass]=\"{ disabled: !cipher.notes }\"\n  >\n    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n  </span>\n</ng-container>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-action-buttons\",\n  templateUrl: \"action-buttons.component.html\",\n})\nexport class ActionButtonsComponent {\n  @Output() onView = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() showView = false;\n\n  cipherType = CipherType;\n  userHasPremiumAccess = false;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private eventService: EventService,\n    private totpService: TotpService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  launchCipher() {\n    this.launchEvent.emit(this.cipher);\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.cipher.reprompt !== CipherRepromptType.None &&\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  view() {\n    this.onView.emit(this.cipher);\n  }\n}\n","<button\n  type=\"button\"\n  (click)=\"selectCipher(cipher)\"\n  (dblclick)=\"launchCipher(cipher)\"\n  appStopClick\n  title=\"{{ title }} - {{ cipher.name }}\"\n  class=\"box-content-row box-content-row-flex virtual-scroll-item\"\n  [ngClass]=\"{ 'override-last': !last }\"\n>\n  <div class=\"row-main\">\n    <app-vault-icon [cipher]=\"cipher\"></app-vault-icon>\n    <div class=\"row-main-content\">\n      <span class=\"text\">\n        {{ cipher.name }}\n        <ng-container *ngIf=\"cipher.organizationId\">\n          <i\n            class=\"bwi bwi-collection text-muted\"\n            title=\"{{ 'shared' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"cipher.hasAttachments\">\n          <i\n            class=\"bwi bwi-paperclip text-muted\"\n            title=\"{{ 'attachments' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n        </ng-container>\n      </span>\n      <span class=\"detail\">{{ cipher.subTitle }}</span>\n    </div>\n  </div>\n  <app-action-buttons\n    [cipher]=\"cipher\"\n    [showView]=\"showView\"\n    (onView)=\"viewCipher(cipher)\"\n    (launchEvent)=\"launchCipher(cipher)\"\n    class=\"action-buttons\"\n  >\n  </app-action-buttons>\n</button>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\n@Component({\n  selector: \"app-cipher-row\",\n  templateUrl: \"cipher-row.component.html\",\n})\nexport class CipherRowComponent {\n  @Output() onSelected = new EventEmitter<CipherView>();\n  @Output() launchEvent = new EventEmitter<CipherView>();\n  @Output() onView = new EventEmitter<CipherView>();\n  @Input() cipher: CipherView;\n  @Input() last: boolean;\n  @Input() showView = false;\n  @Input() title: string;\n\n  selectCipher(c: CipherView) {\n    this.onSelected.emit(c);\n  }\n\n  launchCipher(c: CipherView) {\n    this.launchEvent.emit(c);\n  }\n\n  viewCipher(c: CipherView) {\n    this.onView.emit(c);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"back()\">\n      <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n      <span>{{ \"back\" | i18n }}</span>\n    </button>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ searchPlaceholder || ('searchVault' | i18n) }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content [ngClass]=\"{ 'stacked-boxes': showGroupings() }\">\n  <ng-container *ngIf=\"showGroupings()\">\n    <div class=\"box list\" *ngIf=\"nestedFolders && nestedFolders.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let c of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(c.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-collection\" aria-hidden=\"true\"></i>\n            </div>\n            <span class=\"text\">{{ c.node.name }}</span>\n          </div>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\" aria-hidden=\"true\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"ciphers\">\n    <div class=\"no-items\" *ngIf=\"!ciphers.length\">\n      <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\" aria-hidden=\"true\"></i>\n      <ng-container *ngIf=\"loaded\">\n        <p>{{ \"noItemsInList\" | i18n }}</p>\n        <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n          {{ \"addItem\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers.length\"\n      #virtualScrollViewport\n    >\n      <div class=\"box list only-list\">\n        <h2 class=\"box-header\">\n          {{ groupingTitle }}\n          <span class=\"flex-right\">{{ isSearching() ? ciphers.length : ciphers.length }}</span>\n        </h2>\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let c of ciphers; let last = last\"\n            [cipher]=\"c\"\n            [last]=\"last\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          ></app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"jslib-angular/components/ciphers.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"src/models/browserComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"CiphersComponent\";\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnInit, OnDestroy {\n  groupingTitle: string;\n  state: BrowserComponentState;\n  folderId: string = null;\n  collectionId: string = null;\n  type: CipherType = null;\n  nestedFolders: TreeNode<FolderView>[];\n  nestedCollections: TreeNode<CollectionView>[];\n  searchTypeSearch = false;\n\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private applySavedState = true;\n  private scrollingContainer = \"cdk-virtual-scroll-viewport\";\n\n  constructor(\n    searchService: SearchService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private stateService: StateService,\n    private popupUtils: PopupUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService\n  ) {\n    super(searchService);\n    this.applySavedState =\n      (window as any).previousPopupUrl != null &&\n      !(window as any).previousPopupUrl.startsWith(\"/ciphers\");\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (this.applySavedState) {\n        this.state = await this.stateService.getBrowserCipherComponentState();\n        if (this.state?.searchText) {\n          this.searchText = this.state.searchText;\n        }\n      }\n\n      if (params.deleted) {\n        this.groupingTitle = this.i18nService.t(\"trash\");\n        this.searchPlaceholder = this.i18nService.t(\"searchTrash\");\n        await this.load(null, true);\n      } else if (params.type) {\n        this.searchPlaceholder = this.i18nService.t(\"searchType\");\n        this.type = parseInt(params.type, null);\n        switch (this.type) {\n          case CipherType.Login:\n            this.groupingTitle = this.i18nService.t(\"logins\");\n            break;\n          case CipherType.Card:\n            this.groupingTitle = this.i18nService.t(\"cards\");\n            break;\n          case CipherType.Identity:\n            this.groupingTitle = this.i18nService.t(\"identities\");\n            break;\n          case CipherType.SecureNote:\n            this.groupingTitle = this.i18nService.t(\"secureNotes\");\n            break;\n          default:\n            break;\n        }\n        await this.load((c) => c.type === this.type);\n      } else if (params.folderId) {\n        this.folderId = params.folderId === \"none\" ? null : params.folderId;\n        this.searchPlaceholder = this.i18nService.t(\"searchFolder\");\n        if (this.folderId != null) {\n          const folderNode = await this.folderService.getNested(this.folderId);\n          if (folderNode != null && folderNode.node != null) {\n            this.groupingTitle = folderNode.node.name;\n            this.nestedFolders =\n              folderNode.children != null && folderNode.children.length > 0\n                ? folderNode.children\n                : null;\n          }\n        } else {\n          this.groupingTitle = this.i18nService.t(\"noneFolder\");\n        }\n        await this.load((c) => c.folderId === this.folderId);\n      } else if (params.collectionId) {\n        this.collectionId = params.collectionId;\n        this.searchPlaceholder = this.i18nService.t(\"searchCollection\");\n        const collectionNode = await this.collectionService.getNested(this.collectionId);\n        if (collectionNode != null && collectionNode.node != null) {\n          this.groupingTitle = collectionNode.node.name;\n          this.nestedCollections =\n            collectionNode.children != null && collectionNode.children.length > 0\n              ? collectionNode.children\n              : null;\n        }\n        await this.load(\n          (c) => c.collectionIds != null && c.collectionIds.indexOf(this.collectionId) > -1\n        );\n      } else {\n        this.groupingTitle = this.i18nService.t(\"allItems\");\n        await this.load();\n      }\n\n      if (this.applySavedState && this.state != null) {\n        window.setTimeout(\n          () =>\n            this.popupUtils.setContentScrollY(window, this.state.scrollY, this.scrollingContainer),\n          0\n        );\n      }\n      await this.stateService.setBrowserCipherComponentState(null);\n    });\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              window.setTimeout(() => {\n                this.refresh();\n              }, 500);\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        super.selectCipher(cipher);\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  selectFolder(folder: FolderView) {\n    if (folder.id != null) {\n      this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id } });\n    }\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  addCipher() {\n    if (this.deleted) {\n      return false;\n    }\n    super.addCipher();\n    this.router.navigate([\"/add-cipher\"], {\n      queryParams: {\n        folderId: this.folderId,\n        type: this.type,\n        collectionId: this.collectionId,\n      },\n    });\n  }\n\n  back() {\n    (window as any).routeDirection = \"b\";\n    this.location.back();\n  }\n\n  showGroupings() {\n    return (\n      !this.isSearching() &&\n      ((this.nestedFolders && this.nestedFolders.length) ||\n        (this.nestedCollections && this.nestedCollections.length))\n    );\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window, this.scrollingContainer),\n      searchText: this.searchText,\n    };\n    await this.stateService.setBrowserCipherComponentState(this.state);\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"back()\">\n        <span class=\"header-icon\"><i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i></span>\n        <span>{{ \"back\" | i18n }}</span>\n      </button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"collections\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button type=\"submit\" appBlurClick [disabled]=\"form.loading\">\n        <span [hidden]=\"form.loading\">{{ \"save\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"jslib-angular/components/collections.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private location: Location,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  async ngOnInit() {\n    this.onSavedCollections.subscribe(() => {\n      this.back();\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  back() {\n    this.location.back();\n  }\n}\n","import AutofillPageDetails from \"../../models/autofillPageDetails\";\n\nexport abstract class AutofillService {\n  getFormsWithPasswordFields: (pageDetails: AutofillPageDetails) => any[];\n  doAutoFill: (options: any) => Promise<string>;\n  doAutoFillActiveTab: (pageDetails: any, fromCommand: boolean) => Promise<string>;\n}\n","<header>\n  <h1 class=\"sr-only\">{{ \"currentTab\" | i18n }}</h1>\n  <div class=\"left\">\n    <app-pop-out [show]=\"!inSidebar\"></app-pop-out>\n    <button\n      type=\"button\"\n      appBlurClick\n      (click)=\"refresh()\"\n      appA11yTitle=\"{{ 'refresh' | i18n }}\"\n      *ngIf=\"inSidebar\"\n    >\n      <i class=\"bwi bwi-refresh-tab bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"searchVault()\"\n      autocomplete=\"off\"\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\" aria-hidden=\"true\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"no-items\" *ngIf=\"!loaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <ng-container *ngIf=\"loaded\">\n    <div class=\"box list\" *ngIf=\"loginCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"typeLogins\" | i18n }}\n        <span class=\"flex-right\">{{ loginCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let loginCipher of loginCiphers\"\n          [cipher]=\"loginCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        >\n        </app-cipher-row>\n        <div class=\"box-content-row padded no-hover\" *ngIf=\"!loginCiphers.length\">\n          <p class=\"text-center\">{{ \"autoFillInfo\" | i18n }}</p>\n          <button type=\"button\" class=\"btn primary link block\" (click)=\"addCipher()\">\n            {{ \"addLogin\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"cardCiphers && cardCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"cards\" | i18n }}\n        <span class=\"flex-right\">{{ cardCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let cardCipher of cardCiphers\"\n          [cipher]=\"cardCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"identityCiphers && identityCiphers.length\">\n      <h2 class=\"box-header\">\n        {{ \"identities\" | i18n }}\n        <span class=\"flex-right\">{{ identityCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let identityCipher of identityCiphers\"\n          [cipher]=\"identityCipher\"\n          title=\"{{ 'autoFill' | i18n }}\"\n          [showView]=\"true\"\n          (onSelected)=\"fillCipher($event)\"\n          (onView)=\"viewCipher($event)\"\n        ></app-cipher-row>\n      </div>\n    </div>\n  </ng-container>\n</content>\n","import { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"CurrentTabComponent\";\n\n@Component({\n  selector: \"app-current-tab\",\n  templateUrl: \"current-tab.component.html\",\n})\nexport class CurrentTabComponent implements OnInit, OnDestroy {\n  pageDetails: any[] = [];\n  cardCiphers: CipherView[];\n  identityCiphers: CipherView[];\n  loginCiphers: CipherView[];\n  url: string;\n  hostname: string;\n  searchText: string;\n  inSidebar = false;\n  searchTypeSearch = false;\n  loaded = false;\n\n  private totpCode: string;\n  private totpTimeout: number;\n  private loadedTimeout: number;\n  private searchTimeout: number;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private popupUtilsService: PopupUtilsService,\n    private autofillService: AutofillService,\n    private i18nService: I18nService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private searchService: SearchService,\n    private stateService: StateService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.inSidebar = this.popupUtilsService.inSidebar(window);\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (this.loaded) {\n              window.setTimeout(() => {\n                this.load();\n              }, 500);\n            }\n            break;\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    if (!this.syncService.syncInProgress) {\n      await this.load();\n    } else {\n      this.loadedTimeout = window.setTimeout(async () => {\n        if (!this.loaded) {\n          await this.load();\n        }\n      }, 5000);\n    }\n\n    window.setTimeout(() => {\n      document.getElementById(\"search\").focus();\n    }, 100);\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.loadedTimeout);\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async refresh() {\n    await this.load();\n  }\n\n  addCipher() {\n    this.router.navigate([\"/add-cipher\"], { queryParams: { name: this.hostname, uri: this.url } });\n  }\n\n  viewCipher(cipher: CipherView) {\n    this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n  }\n\n  async fillCipher(cipher: CipherView) {\n    if (\n      cipher.reprompt !== CipherRepromptType.None &&\n      !(await this.passwordRepromptService.showPasswordPrompt())\n    ) {\n      return;\n    }\n\n    this.totpCode = null;\n    if (this.totpTimeout != null) {\n      window.clearTimeout(this.totpTimeout);\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n      if (this.popupUtilsService.inPopup(window)) {\n        if (this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari()) {\n          BrowserApi.closePopup(window);\n        } else {\n          // Slight delay to fix bug in Chromium browsers where popup closes without copying totp to clipboard\n          setTimeout(() => BrowserApi.closePopup(window), 50);\n        }\n      }\n    } catch {\n      this.ngZone.run(() => {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n  }\n\n  searchVault() {\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (!this.searchService.isSearchable(this.searchText)) {\n      return;\n    }\n    this.searchTimeout = window.setTimeout(async () => {\n      this.router.navigate([\"/tabs/vault\"], { queryParams: { searchText: this.searchText } });\n    }, 200);\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async load() {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab != null) {\n      this.url = tab.url;\n    } else {\n      this.loginCiphers = [];\n      this.loaded = true;\n      return;\n    }\n\n    this.hostname = Utils.getHostname(this.url);\n    this.pageDetails = [];\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: BroadcasterSubscriptionId,\n    });\n\n    const otherTypes: CipherType[] = [];\n    const dontShowCards = await this.stateService.getDontShowCardsCurrentTab();\n    const dontShowIdentities = await this.stateService.getDontShowIdentitiesCurrentTab();\n    if (!dontShowCards) {\n      otherTypes.push(CipherType.Card);\n    }\n    if (!dontShowIdentities) {\n      otherTypes.push(CipherType.Identity);\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(\n      this.url,\n      otherTypes.length > 0 ? otherTypes : null\n    );\n\n    this.loginCiphers = [];\n    this.cardCiphers = [];\n    this.identityCiphers = [];\n\n    ciphers.forEach((c) => {\n      switch (c.type) {\n        case CipherType.Login:\n          this.loginCiphers.push(c);\n          break;\n        case CipherType.Card:\n          this.cardCiphers.push(c);\n          break;\n        case CipherType.Identity:\n          this.identityCiphers.push(c);\n          break;\n        default:\n          break;\n      }\n    });\n\n    this.loginCiphers = this.loginCiphers.sort((a, b) =>\n      this.cipherService.sortCiphersByLastUsedThenName(a, b)\n    );\n    this.loaded = true;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { TreeNode } from \"jslib-common/models/domain/treeNode\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\n@Directive()\nexport class GroupingsComponent {\n  @Input() showFolders = true;\n  @Input() showCollections = true;\n  @Input() showFavorites = true;\n  @Input() showTrash = true;\n\n  @Output() onAllClicked = new EventEmitter();\n  @Output() onFavoritesClicked = new EventEmitter();\n  @Output() onTrashClicked = new EventEmitter();\n  @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n  @Output() onFolderClicked = new EventEmitter<FolderView>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n  @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n  folders: FolderView[];\n  nestedFolders: TreeNode<FolderView>[];\n  collections: CollectionView[];\n  nestedCollections: TreeNode<CollectionView>[];\n  loaded = false;\n  cipherType = CipherType;\n  selectedAll = false;\n  selectedFavorites = false;\n  selectedTrash = false;\n  selectedType: CipherType = null;\n  selectedFolder = false;\n  selectedFolderId: string = null;\n  selectedCollectionId: string = null;\n\n  private collapsedGroupings: Set<string>;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected folderService: FolderService,\n    protected stateService: StateService\n  ) {}\n\n  async load(setLoaded = true) {\n    const collapsedGroupings = await this.stateService.getCollapsedGroupings();\n    if (collapsedGroupings == null) {\n      this.collapsedGroupings = new Set<string>();\n    } else {\n      this.collapsedGroupings = new Set(collapsedGroupings);\n    }\n\n    await this.loadFolders();\n    await this.loadCollections();\n\n    if (setLoaded) {\n      this.loaded = true;\n    }\n  }\n\n  async loadCollections(organizationId?: string) {\n    if (!this.showCollections) {\n      return;\n    }\n    const collections = await this.collectionService.getAllDecrypted();\n    if (organizationId != null) {\n      this.collections = collections.filter((c) => c.organizationId === organizationId);\n    } else {\n      this.collections = collections;\n    }\n    this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n  }\n\n  async loadFolders() {\n    if (!this.showFolders) {\n      return;\n    }\n    this.folders = await this.folderService.getAllDecrypted();\n    this.nestedFolders = await this.folderService.getAllNested();\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.onAllClicked.emit();\n  }\n\n  selectFavorites() {\n    this.clearSelections();\n    this.selectedFavorites = true;\n    this.onFavoritesClicked.emit();\n  }\n\n  selectTrash() {\n    this.clearSelections();\n    this.selectedTrash = true;\n    this.onTrashClicked.emit();\n  }\n\n  selectType(type: CipherType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.onCipherTypeClicked.emit(type);\n  }\n\n  selectFolder(folder: FolderView) {\n    this.clearSelections();\n    this.selectedFolder = true;\n    this.selectedFolderId = folder.id;\n    this.onFolderClicked.emit(folder);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  selectCollection(collection: CollectionView) {\n    this.clearSelections();\n    this.selectedCollectionId = collection.id;\n    this.onCollectionClicked.emit(collection);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedFavorites = false;\n    this.selectedTrash = false;\n    this.selectedType = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n    this.selectedCollectionId = null;\n  }\n\n  async collapse(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    if (grouping.id == null) {\n      return;\n    }\n    const id = idPrefix + grouping.id;\n    if (this.isCollapsed(grouping, idPrefix)) {\n      this.collapsedGroupings.delete(id);\n    } else {\n      this.collapsedGroupings.add(id);\n    }\n    await this.stateService.setCollapsedGroupings(Array.from(this.collapsedGroupings));\n  }\n\n  isCollapsed(grouping: FolderView | CollectionView, idPrefix = \"\") {\n    return this.collapsedGroupings.has(idPrefix + grouping.id);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <app-pop-out></app-pop-out>\n  </div>\n  <h1 class=\"sr-only\">{{ \"myVault\" | i18n }}</h1>\n  <div class=\"search\">\n    <input\n      type=\"{{ searchTypeSearch ? 'search' : 'text' }}\"\n      placeholder=\"{{ 'searchVault' | i18n }}\"\n      id=\"search\"\n      [(ngModel)]=\"searchText\"\n      (input)=\"search(200)\"\n      autocomplete=\"off\"\n      appAutofocus\n      (keydown)=\"closeOnEsc($event)\"\n    />\n    <i class=\"bwi bwi-search\"></i>\n  </div>\n  <div class=\"right\">\n    <button type=\"button\" appBlurClick (click)=\"addCipher()\" appA11yTitle=\"{{ 'addItem' | i18n }}\">\n      <i class=\"bwi bwi-plus bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</header>\n<content>\n  <div class=\"no-items\" *ngIf=\"(!ciphers || !ciphers.length) && !showSearching()\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" *ngIf=\"!loaded\"></i>\n    <ng-container *ngIf=\"loaded\">\n      <img class=\"no-items-image\" aria-hidden=\"true\" />\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button type=\"button\" (click)=\"addCipher()\" class=\"btn block primary link\">\n        {{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n  <ng-container *ngIf=\"ciphers && ciphers.length && !showSearching()\">\n    <div class=\"box list\" *ngIf=\"favoriteCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"favorites\" | i18n }}\n        <span class=\"flex-right\">{{ favoriteCiphers.length }}</span>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let favoriteCipher of favoriteCiphers\"\n          [cipher]=\"favoriteCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\">\n      <h2 class=\"box-header\">\n        {{ \"types\" | i18n }}\n        <span class=\"flex-right\">4</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Login)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-globe\"></i></div>\n            <span class=\"text\">{{ \"typeLogin\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Login) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Card)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-credit-card\"></i></div>\n            <span class=\"text\">{{ \"typeCard\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Card) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.Identity)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-id-card\"></i></div>\n            <span class=\"text\">{{ \"typeIdentity\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.Identity) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectType(cipherType.SecureNote)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-sticky-note\"></i></div>\n            <span class=\"text\">{{ \"typeSecureNote\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ typeCounts.get(cipherType.SecureNote) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedFolders?.length\">\n      <h2 class=\"box-header\">\n        {{ \"folders\" | i18n }}\n        <span class=\"flex-right\">{{ folderCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let f of nestedFolders\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectFolder(f.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\">\n              <i class=\"bwi bwi-fw bwi-lg bwi-folder\"></i>\n            </div>\n            <span class=\"text\">{{ f.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ folderCounts.get(f.node.id) || 0 }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"nestedCollections && nestedCollections.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n        <span class=\"flex-right\">{{ nestedCollections.length }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          *ngFor=\"let nestedCollection of nestedCollections\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectCollection(nestedCollection.node)\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i></div>\n            <span class=\"text\">{{ nestedCollection.node.name }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{\n            collectionCounts.get(nestedCollection.node.id) || 0\n          }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"showNoFolderCiphers\">\n      <h2 class=\"box-header\">\n        {{ \"noneFolder\" | i18n }}\n        <div class=\"flex-right\">{{ noFolderCiphers.length }}</div>\n      </h2>\n      <div class=\"box-content\">\n        <app-cipher-row\n          *ngFor=\"let noFolderCipher of noFolderCiphers\"\n          [cipher]=\"noFolderCipher\"\n          title=\"{{ 'viewItem' | i18n }}\"\n          (onSelected)=\"selectCipher($event)\"\n          (launchEvent)=\"launchCipher($event)\"\n        >\n        </app-cipher-row>\n      </div>\n    </div>\n    <div class=\"box list\" *ngIf=\"deletedCount\">\n      <h2 class=\"box-header\">\n        {{ \"trash\" | i18n }}\n        <span class=\"flex-right\">{{ deletedCount }}</span>\n      </h2>\n      <div class=\"box-content single-line\">\n        <button\n          type=\"button\"\n          class=\"box-content-row\"\n          appStopClick\n          appBlurClick\n          (click)=\"selectTrash()\"\n        >\n          <div class=\"row-main\">\n            <div class=\"icon\"><i class=\"bwi bwi-fw bwi-lg bwi-trash\"></i></div>\n            <span class=\"text\">{{ \"trash\" | i18n }}</span>\n          </div>\n          <span class=\"row-sub-label\">{{ deletedCount }}</span>\n          <span><i class=\"bwi bwi-angle-right bwi-lg row-sub-icon\"></i></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"showSearching()\">\n    <div class=\"no-items\" *ngIf=\"!ciphers || !ciphers.length\">\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n    </div>\n    <cdk-virtual-scroll-viewport\n      itemSize=\"46\"\n      minBufferPx=\"400\"\n      maxBufferPx=\"600\"\n      *ngIf=\"ciphers && ciphers.length > 0\"\n    >\n      <div class=\"box list full-list\">\n        <div class=\"box-content\">\n          <app-cipher-row\n            *cdkVirtualFor=\"let searchedCipher of ciphers\"\n            [cipher]=\"searchedCipher\"\n            title=\"{{ 'viewItem' | i18n }}\"\n            (onSelected)=\"selectCipher($event)\"\n            (launchEvent)=\"launchCipher($event)\"\n          >\n          </app-cipher-row>\n        </div>\n      </div>\n    </cdk-virtual-scroll-viewport>\n  </ng-container>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { GroupingsComponent as BaseGroupingsComponent } from \"jslib-angular/components/groupings.component\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { SearchService } from \"jslib-common/abstractions/search.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserGroupingsComponentState } from \"src/models/browserGroupingsComponentState\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { StateService } from \"../../services/abstractions/state.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst ComponentId = \"GroupingsComponent\";\n\n@Component({\n  selector: \"app-vault-groupings\",\n  templateUrl: \"groupings.component.html\",\n})\nexport class GroupingsComponent extends BaseGroupingsComponent implements OnInit, OnDestroy {\n  get showNoFolderCiphers(): boolean {\n    return (\n      this.noFolderCiphers != null &&\n      this.noFolderCiphers.length < this.noFolderListSize &&\n      this.collections.length === 0\n    );\n  }\n\n  get folderCount(): number {\n    return this.nestedFolders.length - (this.showNoFolderCiphers ? 0 : 1);\n  }\n  ciphers: CipherView[];\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  folderCounts = new Map<string, number>();\n  collectionCounts = new Map<string, number>();\n  typeCounts = new Map<CipherType, number>();\n  searchText: string;\n  state: BrowserGroupingsComponentState;\n  showLeftHeader = true;\n  searchPending = false;\n  searchTypeSearch = false;\n  deletedCount = 0;\n\n  private loadedTimeout: number;\n  private selectedTimeout: number;\n  private preventSelected = false;\n  private noFolderListSize = 100;\n  private searchTimeout: any = null;\n  private hasSearched = false;\n  private hasLoadedAllCiphers = false;\n  private allCiphers: CipherView[] = null;\n\n  constructor(\n    collectionService: CollectionService,\n    folderService: FolderService,\n    private cipherService: CipherService,\n    private router: Router,\n    private ngZone: NgZone,\n    private broadcasterService: BroadcasterService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private route: ActivatedRoute,\n    private popupUtils: PopupUtilsService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private location: Location,\n    private browserStateService: StateService\n  ) {\n    super(collectionService, folderService, browserStateService);\n    this.noFolderListSize = 100;\n  }\n\n  async ngOnInit() {\n    this.searchTypeSearch = !this.platformUtilsService.isSafari();\n    this.showLeftHeader = !(\n      this.popupUtils.inSidebar(window) && this.platformUtilsService.isFirefox()\n    );\n    await this.browserStateService.setBrowserCipherComponentState(null);\n\n    this.broadcasterService.subscribe(ComponentId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            window.setTimeout(() => {\n              this.load();\n            }, 500);\n            break;\n          default:\n            break;\n        }\n\n        this.changeDetectorRef.detectChanges();\n      });\n    });\n\n    const restoredScopeState = await this.restoreState();\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.state = await this.browserStateService.getBrowserGroupingComponentState();\n      if (this.state?.searchText) {\n        this.searchText = this.state.searchText;\n      } else if (params.searchText) {\n        this.searchText = params.searchText;\n        this.location.replaceState(\"vault\");\n      }\n\n      if (!this.syncService.syncInProgress) {\n        this.load();\n      } else {\n        this.loadedTimeout = window.setTimeout(() => {\n          if (!this.loaded) {\n            this.load();\n          }\n        }, 5000);\n      }\n\n      if (!this.syncService.syncInProgress || restoredScopeState) {\n        window.setTimeout(() => this.popupUtils.setContentScrollY(window, this.state?.scrollY), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.loadedTimeout != null) {\n      window.clearTimeout(this.loadedTimeout);\n    }\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.saveState();\n    this.broadcasterService.unsubscribe(ComponentId);\n  }\n\n  async load() {\n    await super.load(false);\n    await this.loadCiphers();\n    if (this.showNoFolderCiphers && this.nestedFolders.length > 0) {\n      // Remove \"No Folder\" from folder listing\n      this.nestedFolders = this.nestedFolders.slice(0, this.nestedFolders.length - 1);\n    }\n\n    super.loaded = true;\n  }\n\n  async loadCiphers() {\n    this.allCiphers = await this.cipherService.getAllDecrypted();\n    if (!this.hasLoadedAllCiphers) {\n      this.hasLoadedAllCiphers = !this.searchService.isSearchable(this.searchText);\n    }\n    this.deletedCount = this.allCiphers.filter((c) => c.isDeleted).length;\n    await this.search(null);\n    let favoriteCiphers: CipherView[] = null;\n    let noFolderCiphers: CipherView[] = null;\n    const folderCounts = new Map<string, number>();\n    const collectionCounts = new Map<string, number>();\n    const typeCounts = new Map<CipherType, number>();\n\n    this.ciphers.forEach((c) => {\n      if (c.isDeleted) {\n        return;\n      }\n      if (c.favorite) {\n        if (favoriteCiphers == null) {\n          favoriteCiphers = [];\n        }\n        favoriteCiphers.push(c);\n      }\n\n      if (c.folderId == null) {\n        if (noFolderCiphers == null) {\n          noFolderCiphers = [];\n        }\n        noFolderCiphers.push(c);\n      }\n\n      if (typeCounts.has(c.type)) {\n        typeCounts.set(c.type, typeCounts.get(c.type) + 1);\n      } else {\n        typeCounts.set(c.type, 1);\n      }\n\n      if (folderCounts.has(c.folderId)) {\n        folderCounts.set(c.folderId, folderCounts.get(c.folderId) + 1);\n      } else {\n        folderCounts.set(c.folderId, 1);\n      }\n\n      if (c.collectionIds != null) {\n        c.collectionIds.forEach((colId) => {\n          if (collectionCounts.has(colId)) {\n            collectionCounts.set(colId, collectionCounts.get(colId) + 1);\n          } else {\n            collectionCounts.set(colId, 1);\n          }\n        });\n      }\n    });\n\n    this.favoriteCiphers = favoriteCiphers;\n    this.noFolderCiphers = noFolderCiphers;\n    this.typeCounts = typeCounts;\n    this.folderCounts = folderCounts;\n    this.collectionCounts = collectionCounts;\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    const filterDeleted = (c: CipherView) => !c.isDeleted;\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.ciphers = await this.searchService.searchCiphers(\n        this.searchText,\n        filterDeleted,\n        this.allCiphers\n      );\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      if (!this.hasLoadedAllCiphers && !this.hasSearched) {\n        await this.loadCiphers();\n      } else {\n        this.ciphers = await this.searchService.searchCiphers(\n          this.searchText,\n          filterDeleted,\n          this.allCiphers\n        );\n      }\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async selectType(type: CipherType) {\n    super.selectType(type);\n    this.router.navigate([\"/ciphers\"], { queryParams: { type: type } });\n  }\n\n  async selectFolder(folder: FolderView) {\n    super.selectFolder(folder);\n    this.router.navigate([\"/ciphers\"], { queryParams: { folderId: folder.id || \"none\" } });\n  }\n\n  async selectCollection(collection: CollectionView) {\n    super.selectCollection(collection);\n    this.router.navigate([\"/ciphers\"], { queryParams: { collectionId: collection.id } });\n  }\n\n  async selectTrash() {\n    super.selectTrash();\n    this.router.navigate([\"/ciphers\"], { queryParams: { deleted: true } });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    this.selectedTimeout = window.setTimeout(() => {\n      if (!this.preventSelected) {\n        this.router.navigate([\"/view-cipher\"], { queryParams: { cipherId: cipher.id } });\n      }\n      this.preventSelected = false;\n    }, 200);\n  }\n\n  async launchCipher(cipher: CipherView) {\n    if (cipher.type !== CipherType.Login || !cipher.login.canLaunch) {\n      return;\n    }\n\n    if (this.selectedTimeout != null) {\n      window.clearTimeout(this.selectedTimeout);\n    }\n    this.preventSelected = true;\n    await this.cipherService.updateLastLaunchedDate(cipher.id);\n    BrowserApi.createNewTab(cipher.login.launchUri);\n    if (this.popupUtils.inPopup(window)) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  async addCipher() {\n    this.router.navigate([\"/add-cipher\"]);\n  }\n\n  showSearching() {\n    return (\n      this.hasSearched || (!this.searchPending && this.searchService.isSearchable(this.searchText))\n    );\n  }\n\n  closeOnEsc(e: KeyboardEvent) {\n    // If input not empty, use browser default behavior of clearing input instead\n    if (e.key === \"Escape\" && (this.searchText == null || this.searchText === \"\")) {\n      BrowserApi.closePopup(window);\n    }\n  }\n\n  private async saveState() {\n    this.state = {\n      scrollY: this.popupUtils.getContentScrollY(window),\n      searchText: this.searchText,\n      favoriteCiphers: this.favoriteCiphers,\n      noFolderCiphers: this.noFolderCiphers,\n      ciphers: this.ciphers,\n      collectionCounts: this.collectionCounts,\n      folderCounts: this.folderCounts,\n      typeCounts: this.typeCounts,\n      folders: this.folders,\n      collections: this.collections,\n      deletedCount: this.deletedCount,\n    };\n    await this.browserStateService.setBrowserGroupingComponentState(this.state);\n  }\n\n  private async restoreState(): Promise<boolean> {\n    this.state = await this.browserStateService.getBrowserGroupingComponentState();\n    if (this.state == null) {\n      return false;\n    }\n\n    if (this.state.favoriteCiphers != null) {\n      this.favoriteCiphers = this.state.favoriteCiphers;\n    }\n    if (this.state.noFolderCiphers != null) {\n      this.noFolderCiphers = this.state.noFolderCiphers;\n    }\n    if (this.state.ciphers != null) {\n      this.ciphers = this.state.ciphers;\n    }\n    if (this.state.collectionCounts != null) {\n      this.collectionCounts = this.state.collectionCounts;\n    }\n    if (this.state.folderCounts != null) {\n      this.folderCounts = this.state.folderCounts;\n    }\n    if (this.state.typeCounts != null) {\n      this.typeCounts = this.state.typeCounts;\n    }\n    if (this.state.folders != null) {\n      this.folders = this.state.folders;\n    }\n    if (this.state.collections != null) {\n      this.collections = this.state.collections;\n    }\n    if (this.state.deletedCount != null) {\n      this.deletedCount = this.state.deletedCount;\n    }\n\n    return true;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PasswordHistoryView } from \"jslib-common/models/view/passwordHistoryView\";\n\n@Directive()\nexport class PasswordHistoryComponent implements OnInit {\n  cipherId: string;\n  history: PasswordHistoryView[] = [];\n\n  constructor(\n    protected cipherService: CipherService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  protected async init() {\n    const cipher = await this.cipherService.get(this.cipherId);\n    const decCipher = await cipher.decrypt();\n    this.history = decCipher.passwordHistory == null ? [] : decCipher.passwordHistory;\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"passwordHistory\" | i18n }}</span>\n  </h1>\n  <div class=\"right\"></div>\n</header>\n<content>\n  <div class=\"box list full-list\" *ngIf=\"history && history.length\">\n    <div class=\"box-content\">\n      <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let h of history\">\n        <div class=\"row-main\">\n          <div class=\"row-main-content\">\n            <span class=\"text monospaced no-ellipsis\">\n              {{ h.password }}\n            </span>\n            <span class=\"detail\">{{ h.lastUsedDate | date: \"medium\" }}</span>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n            (click)=\"copy(h.password)\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"no-items\" *ngIf=\"!history || !history.length\">\n    <p>{{ \"noPasswordsInList\" | i18n }}</p>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PasswordHistoryComponent as BasePasswordHistoryComponent } from \"jslib-angular/components/password-history.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-history\",\n  templateUrl: \"password-history.component.html\",\n})\nexport class PasswordHistoryComponent extends BasePasswordHistoryComponent {\n  constructor(\n    cipherService: CipherService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    private location: Location,\n    private route: ActivatedRoute\n  ) {\n    super(cipherService, platformUtilsService, i18nService, window);\n  }\n\n  async ngOnInit() {\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n      await this.init();\n    });\n  }\n\n  close() {\n    this.location.back();\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"jslib-common/enums/organizationUserStatusType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { Organization } from \"jslib-common/models/domain/organization\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\n\n@Directive()\nexport class ShareComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collections: CollectionView[] = [];\n  organizations: Organization[] = [];\n\n  protected writeableCollections: CollectionView[] = [];\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n    const orgs = await this.organizationService.getAll();\n    this.organizations = orgs\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgName =\n      this.organizations.find((o) => o.id === this.organizationId)?.name ??\n      this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if ((this.collections[i] as any).checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n  <header>\n    <div class=\"left\">\n      <button type=\"button\" appBlurClick (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n    </div>\n    <h1 class=\"center\">\n      <span class=\"title\">{{ \"moveToOrganization\" | i18n }}</span>\n    </h1>\n    <div class=\"right\">\n      <button\n        type=\"submit\"\n        appBlurClick\n        [disabled]=\"form.loading || !canSave\"\n        *ngIf=\"organizations && organizations.length\"\n      >\n        <span [hidden]=\"form.loading\">{{ \"move\" | i18n }}</span>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" [hidden]=\"!form.loading\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </header>\n  <content>\n    <div class=\"box\">\n      <div class=\"box-content\" *ngIf=\"!organizations || !organizations.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"organizations && organizations.length\">\n        <div class=\"box-content-row\" appBoxRow>\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"box-footer\">\n        {{ \"moveToOrgDesc\" | i18n }}\n      </div>\n    </div>\n    <div class=\"box\" *ngIf=\"organizations && organizations.length\">\n      <h2 class=\"box-header\">\n        {{ \"collections\" | i18n }}\n      </h2>\n      <div class=\"box-content\" *ngIf=\"!collections || !collections.length\">\n        <div class=\"box-content-row padded no-hover\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n      </div>\n      <div class=\"box-content\" *ngIf=\"collections && collections.length\">\n        <div\n          class=\"box-content-row box-content-row-checkbox\"\n          *ngFor=\"let c of collections; let i = index\"\n          appBoxRow\n        >\n          <label for=\"collection_{{ i }}\">{{ c.name }}</label>\n          <input\n            id=\"collection_{{ i }}\"\n            type=\"checkbox\"\n            [(ngModel)]=\"c.checked\"\n            name=\"Collection[{{ i }}].Checked\"\n          />\n        </div>\n      </div>\n    </div>\n  </content>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ShareComponent as BaseShareComponent } from \"jslib-angular/components/share.component\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    cipherService: CipherService,\n    private route: ActivatedRoute,\n    private router: Router,\n    organizationService: OrganizationService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    this.onSharedCipher.subscribe(() => {\n      this.router.navigate([\"view-cipher\", { cipherId: this.cipherId }]);\n    });\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      this.cipherId = params.cipherId;\n      await this.load();\n    });\n  }\n\n  async submit(): Promise<boolean> {\n    const success = await super.submit();\n    if (success) {\n      this.cancel();\n    }\n    return success;\n  }\n\n  cancel() {\n    this.router.navigate([\"/view-cipher\"], {\n      replaceUrl: true,\n      queryParams: { cipherId: this.cipher.id },\n    });\n  }\n}\n","import { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getPremium: () => Promise<boolean>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n} from \"@angular/core\";\n\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { ErrorResponse } from \"jslib-common/models/response/errorResponse\";\nimport { AttachmentView } from \"jslib-common/models/view/attachmentView\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nconst BroadcasterSubscriptionId = \"ViewComponent\";\n\n@Directive()\nexport class ViewComponent implements OnDestroy, OnInit {\n  @Input() cipherId: string;\n  @Output() onEditCipher = new EventEmitter<CipherView>();\n  @Output() onCloneCipher = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n\n  cipher: CipherView;\n  showPassword: boolean;\n  showPasswordCount: boolean;\n  showCardNumber: boolean;\n  showCardCode: boolean;\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  fieldType = FieldType;\n  checkPasswordPromise: Promise<number>;\n\n  private totpInterval: any;\n  private previousCipherId: string;\n  private passwordReprompted = false;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected totpService: TotpService,\n    protected tokenService: TokenService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected win: Window,\n    protected broadcasterService: BroadcasterService,\n    protected ngZone: NgZone,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected eventService: EventService,\n    protected apiService: ApiService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.cleanUp();\n  }\n\n  async load() {\n    this.cleanUp();\n\n    const cipher = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipher.decrypt();\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n\n    if (this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n  }\n\n  async edit() {\n    if (await this.promptPassword()) {\n      this.onEditCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async clone() {\n    if (await this.promptPassword()) {\n      this.onCloneCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async share() {\n    if (await this.promptPassword()) {\n      this.onShareCipher.emit(this.cipher);\n      return true;\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.deleteCipher();\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.restoreCipher();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async togglePassword() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showPassword = !this.showPassword;\n    this.showPasswordCount = false;\n    if (this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async togglePasswordCount() {\n    if (!this.showPassword) {\n      return;\n    }\n\n    this.showPasswordCount = !this.showPasswordCount;\n  }\n\n  async toggleCardNumber() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardCode() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    this.showCardCode = !this.showCardCode;\n    if (this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  async checkPassword() {\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  launch(uri: LoginUriView, cipherId?: string) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    if (cipherId) {\n      this.cipherService.updateLastLaunchedDate(cipherId);\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  async copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.promptPassword())\n    ) {\n      return;\n    }\n\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(value, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n    } else if (aType === \"H_Field\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n    }\n  }\n\n  setTextDataOnDrag(event: DragEvent, data: string) {\n    event.dataTransfer.setData(\"text\", data);\n  }\n\n  async downloadAttachment(attachment: AttachmentView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (this.cipher.organizationId == null && !this.canAccessPremium) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const buf = await response.arrayBuffer();\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n      this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  protected async promptPassword() {\n    if (this.cipher.reprompt === CipherRepromptType.None || this.passwordReprompted) {\n      return true;\n    }\n\n    return (this.passwordReprompted = await this.passwordRepromptService.showPasswordPrompt());\n  }\n\n  private cleanUp() {\n    this.totpCode = null;\n    this.cipher = null;\n    this.showPassword = false;\n    this.showCardNumber = false;\n    this.showCardCode = false;\n    this.passwordReprompted = false;\n    if (this.totpInterval) {\n      clearInterval(this.totpInterval);\n    }\n  }\n\n  private async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\n@Directive()\nexport class ViewCustomFieldsComponent {\n  @Input() cipher: CipherView;\n  @Input() promptPassword: () => Promise<boolean>;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  fieldType = FieldType;\n\n  constructor(private eventService: EventService) {}\n\n  async toggleFieldValue(field: FieldView) {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const f = field as any;\n    f.showValue = !f.showValue;\n    f.showCount = false;\n    if (f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  async toggleFieldCount(field: FieldView) {\n    if (!field.showValue) {\n      return;\n    }\n\n    field.showCount = !field.showCount;\n  }\n}\n","import { Pipe } from \"@angular/core\";\n\nimport { ColorPasswordPipe } from \"./color-password.pipe\";\n\n/*\n An updated pipe that extends ColourPasswordPipe to include a character count\n*/\n@Pipe({ name: \"colorPasswordCount\" })\nexport class ColorPasswordCountPipe extends ColorPasswordPipe {\n  transform(password: string) {\n    const template = (character: string, type: string, index: number) =>\n      `<span class=\"password-character password-${type}\">\n                ${character}<span class=\"password-count\">${index + 1}</span>\n            </span>`;\n    const colorizedPasswordCount = this.generateTemplate(password, template);\n\n    return colorizedPasswordCount;\n  }\n}\n","<ng-container>\n  <h2 class=\"box-header\">\n    {{ \"customFields\" | i18n }}\n  </h2>\n  <div class=\"box-content\">\n    <div class=\"box-content-row box-content-row-flex\" *ngFor=\"let field of cipher.fields\">\n      <div class=\"row-main\">\n        <span class=\"row-label\">{{ field.name }}</span>\n        <div *ngIf=\"field.type === fieldType.Text\">\n          {{ field.value || \"&nbsp;\" }}\n        </div>\n        <div *ngIf=\"field.type === fieldType.Hidden\">\n          <span *ngIf=\"!field.showValue\" class=\"monospaced\">{{ field.maskedValue }}</span>\n          <span\n            *ngIf=\"field.showValue && !field.showCount\"\n            class=\"monospaced show-whitespace\"\n            [innerHTML]=\"field.value | colorPassword\"\n          ></span>\n          <span\n            *ngIf=\"field.showValue && field.showCount\"\n            [innerHTML]=\"field.value | colorPasswordCount\"\n          ></span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Boolean\">\n          <i class=\"bwi bwi-check-square\" *ngIf=\"field.value === 'true'\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-square\" *ngIf=\"field.value !== 'true'\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ field.value }}</span>\n        </div>\n        <div *ngIf=\"field.type === fieldType.Linked\" class=\"box-content-row-flex\">\n          <div class=\"icon icon-small\">\n            <i\n              class=\"bwi bwi-link\"\n              aria-hidden=\"true\"\n              appA11yTitle=\"{{ 'linkedValue' | i18n }}\"\n            ></i>\n            <span class=\"sr-only\">{{ \"linkedValue\" | i18n }}</span>\n          </div>\n          <span>{{ cipher.linkedFieldI18nKey(field.linkedId) | i18n }}</span>\n        </div>\n      </div>\n      <div class=\"action-buttons\">\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword && field.showValue\"\n          (click)=\"toggleFieldCount(field)\"\n          [attr.aria-pressed]=\"field.showCount\"\n        >\n          <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n          *ngIf=\"field.type === fieldType.Hidden && cipher.viewPassword\"\n          (click)=\"toggleFieldValue(field)\"\n          [attr.aria-pressed]=\"field.showValue\"\n        >\n          <i\n            class=\"bwi bwi-lg\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{ 'bwi-eye': !field.showValue, 'bwi-eye-slash': field.showValue }\"\n          ></i>\n        </button>\n        <button\n          type=\"button\"\n          class=\"row-btn\"\n          appStopClick\n          attr.aria-label=\"{{ 'copyValue' | i18n }} {{ field.name }}\"\n          appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n          *ngIf=\"\n            field.value &&\n            field.type !== fieldType.Boolean &&\n            field.type !== fieldType.Linked &&\n            !(field.type === fieldType.Hidden && !cipher.viewPassword)\n          \"\n          (click)=\"\n            copy(field.value, 'value', field.type === fieldType.Hidden ? 'H_Field' : 'Field')\n          \"\n        >\n          <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { ViewCustomFieldsComponent as BaseViewCustomFieldsComponent } from \"jslib-angular/components/view-custom-fields.component\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\n\n@Component({\n  selector: \"app-vault-view-custom-fields\",\n  templateUrl: \"view-custom-fields.component.html\",\n})\nexport class ViewCustomFieldsComponent extends BaseViewCustomFieldsComponent {\n  constructor(eventService: EventService) {\n    super(eventService);\n  }\n}\n","<header>\n  <div class=\"left\">\n    <button type=\"button\" appBlurClick (click)=\"close()\">{{ \"close\" | i18n }}</button>\n  </div>\n  <h1 class=\"center\">\n    <span class=\"title\">{{ \"viewItem\" | i18n }}</span>\n  </h1>\n  <div class=\"right\" *ngIf=\"cipher\">\n    <button type=\"button\" appBlurClick (click)=\"edit()\" *ngIf=\"!cipher.isDeleted\">\n      {{ \"edit\" | i18n }}\n    </button>\n  </div>\n</header>\n<content *ngIf=\"cipher\">\n  <div class=\"box\">\n    <h2 class=\"box-header\">\n      {{ \"itemInformation\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" type=\"text\" [value]=\"cipher.name\" readonly aria-readonly=\"true\" />\n      </div>\n      <!-- Login -->\n      <div *ngIf=\"cipher.login\">\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.username\">\n          <div class=\"row-main\">\n            <label\n              for=\"loginUsername\"\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.username)\"\n              >{{ \"username\" | i18n }}\n            </label>\n            <input\n              id=\"loginUsername\"\n              type=\"text\"\n              [value]=\"cipher.login.username\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n              (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.login.password\">\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, cipher.login.password)\"\n              >{{ \"password\" | i18n }}</span\n            >\n            <div *ngIf=\"!showPassword\" class=\"monospaced\">\n              {{ cipher.login.maskedPassword }}\n            </div>\n            <div\n              *ngIf=\"showPassword && !showPasswordCount\"\n              class=\"monospaced password-wrapper\"\n              appSelectCopy\n              [innerHTML]=\"cipher.login.password | colorPassword\"\n            ></div>\n            <div\n              *ngIf=\"showPassword && showPasswordCount\"\n              [innerHTML]=\"cipher.login.password | colorPasswordCount\"\n            ></div>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              #checkPasswordBtn\n              class=\"row-btn btn\"\n              appBlurClick\n              appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n              (click)=\"checkPassword()\"\n              [appApiAction]=\"checkPasswordPromise\"\n              [disabled]=\"checkPasswordBtn.loading\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg bwi-check-circle\"\n                [hidden]=\"checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n              <i\n                class=\"bwi bwi-lg bwi-spinner bwi-spin\"\n                [hidden]=\"!checkPasswordBtn.loading\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleCharacterCount' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleCharacterCount' | i18n }}\"\n              (click)=\"togglePasswordCount()\"\n              *ngIf=\"showPassword\"\n              [attr.aria-pressed]=\"showPasswordCount\"\n            >\n              <i class=\"bwi bwi-lg bwi-numbered-list\" aria-hidden=\"true\"></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'password' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n              *ngIf=\"cipher.viewPassword\"\n              [attr.aria-pressed]=\"showPassword\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n              (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n              *ngIf=\"cipher.viewPassword\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div\n          class=\"box-content-row box-content-row-flex totp\"\n          [ngClass]=\"{ low: totpLow }\"\n          *ngIf=\"cipher.login.totp && totpCode\"\n        >\n          <div class=\"row-main\">\n            <span\n              class=\"row-label draggable\"\n              draggable=\"true\"\n              (dragstart)=\"setTextDataOnDrag($event, totpCode)\"\n              >{{ \"verificationCodeTotp\" | i18n }}</span\n            >\n            <span class=\"totp-code\">{{ totpCodeFormatted }}</span>\n          </div>\n          <span class=\"totp-countdown\">\n            <span class=\"totp-sec\">{{ totpSec }}</span>\n            <svg>\n              <g>\n                <circle\n                  class=\"totp-circle inner\"\n                  r=\"12.6\"\n                  cy=\"16\"\n                  cx=\"16\"\n                  [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                ></circle>\n                <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n              </g>\n            </svg>\n          </span>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n              (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Card -->\n      <div *ngIf=\"cipher.card\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.cardholderName\">\n          <span class=\"row-label\">{{ \"cardholderName\" | i18n }}</span>\n          {{ cipher.card.cardholderName }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.number\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"number\" | i18n }}</span>\n            <span [hidden]=\"showCardNumber\" class=\"monospaced\">{{ cipher.card.maskedNumber }}</span>\n            <span [hidden]=\"!showCardNumber\" class=\"monospaced\">{{ cipher.card.number }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'number' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardNumber()\"\n              [attr.aria-pressed]=\"showCardNumber\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardNumber, 'bwi-eye-slash': showCardNumber }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n              (click)=\"copy(cipher.card.number, 'number', 'Card Number')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.brand\">\n          <span class=\"row-label\">{{ \"brand\" | i18n }}</span>\n          {{ cipher.card.brand }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.card.expiration\">\n          <span class=\"row-label\">{{ \"expiration\" | i18n }}</span>\n          {{ cipher.card.expiration }}\n        </div>\n        <div class=\"box-content-row box-content-row-flex\" *ngIf=\"cipher.card.code\">\n          <div class=\"row-main\">\n            <span class=\"row-label\">{{ \"securityCode\" | i18n }}</span>\n            <span [hidden]=\"showCardCode\" class=\"monospaced\">{{ cipher.card.maskedCode }}</span>\n            <span [hidden]=\"!showCardCode\" class=\"monospaced\">{{ cipher.card.code }}</span>\n          </div>\n          <div class=\"action-buttons\">\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              attr.aria-label=\"{{ 'toggleVisibility' | i18n }} {{ 'securityCode' | i18n }}\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"toggleCardCode()\"\n              [attr.aria-pressed]=\"showCardCode\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"row-btn\"\n              appStopClick\n              appA11yTitle=\"{{ 'copySecurityCode' | i18n }}\"\n              (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n            >\n              <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <!-- Identity -->\n      <div *ngIf=\"cipher.identity\">\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.fullName\">\n          <span class=\"row-label\">{{ \"identityName\" | i18n }}</span>\n          {{ cipher.identity.fullName }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.username\">\n          <span class=\"row-label\">{{ \"username\" | i18n }}</span>\n          {{ cipher.identity.username }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.company\">\n          <span class=\"row-label\">{{ \"company\" | i18n }}</span>\n          {{ cipher.identity.company }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.ssn\">\n          <span class=\"row-label\">{{ \"ssn\" | i18n }}</span>\n          {{ cipher.identity.ssn }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.passportNumber\">\n          <span class=\"row-label\">{{ \"passportNumber\" | i18n }}</span>\n          {{ cipher.identity.passportNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.licenseNumber\">\n          <span class=\"row-label\">{{ \"licenseNumber\" | i18n }}</span>\n          {{ cipher.identity.licenseNumber }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.email\">\n          <span class=\"row-label\">{{ \"email\" | i18n }}</span>\n          {{ cipher.identity.email }}\n        </div>\n        <div class=\"box-content-row\" *ngIf=\"cipher.identity.phone\">\n          <span class=\"row-label\">{{ \"phone\" | i18n }}</span>\n          {{ cipher.identity.phone }}\n        </div>\n        <div\n          class=\"box-content-row\"\n          *ngIf=\"cipher.identity.address1 || cipher.identity.city || cipher.identity.country\"\n        >\n          <span class=\"row-label\">{{ \"address\" | i18n }}</span>\n          <div *ngIf=\"cipher.identity.address1\">{{ cipher.identity.address1 }}</div>\n          <div *ngIf=\"cipher.identity.address2\">{{ cipher.identity.address2 }}</div>\n          <div *ngIf=\"cipher.identity.address3\">{{ cipher.identity.address3 }}</div>\n          <div *ngIf=\"cipher.identity.fullAddressPart2\">{{ cipher.identity.fullAddressPart2 }}</div>\n          <div *ngIf=\"cipher.identity.country\">{{ cipher.identity.country }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.login && cipher.login.hasUris\">\n    <div class=\"box-content\">\n      <div\n        class=\"box-content-row box-content-row-flex\"\n        *ngFor=\"let u of cipher.login.uris; let i = index\"\n      >\n        <div class=\"row-main\">\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"!u.isWebsite\">{{\n            \"uri\" | i18n\n          }}</label>\n          <label for=\"hostOrUri{{ i }}\" class=\"row-label\" *ngIf=\"u.isWebsite\">{{\n            \"website\" | i18n\n          }}</label>\n          <span title=\"{{ u.uri }}\">\n            <input\n              id=\"hostOrUri{{ i }}\"\n              type=\"text\"\n              [value]=\"u.hostOrUri\"\n              readonly\n              aria-readonly=\"true\"\n            />\n          </span>\n        </div>\n        <div class=\"action-buttons\">\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'launch' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'launch' | i18n }}\"\n            *ngIf=\"u.canLaunch\"\n            (click)=\"launch(u)\"\n          >\n            <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"row-btn\"\n            appStopClick\n            attr.aria-label=\"{{ 'copyUri' | i18n }} {{ u.uri }}\"\n            appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n            (click)=\"copy(u.uri, u.isWebsite ? 'website' : 'uri', 'URI')\"\n          >\n            <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.notes\">\n    <h2 class=\"box-header\">\n      <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n    </h2>\n    <div class=\"box-content\">\n      <div class=\"box-content-row\">\n        <textarea\n          id=\"notes\"\n          [value]=\"cipher.notes\"\n          rows=\"6\"\n          readonly\n          aria-readonly=\"true\"\n        ></textarea>\n      </div>\n    </div>\n  </div>\n  <div class=\"box\" *ngIf=\"cipher.hasFields\">\n    <app-vault-view-custom-fields\n      [cipher]=\"cipher\"\n      [promptPassword]=\"promptPassword.bind(this)\"\n      [copy]=\"copy.bind(this)\"\n    ></app-vault-view-custom-fields>\n  </div>\n  <div\n    class=\"box\"\n    *ngIf=\"cipher.hasAttachments && (canAccessPremium || cipher.organizationId) && showAttachments\"\n  >\n    <h2 class=\"box-header\">\n      {{ \"attachments\" | i18n }}\n    </h2>\n    <div class=\"box-content\">\n      <button\n        type=\"button\"\n        class=\"box-content-row box-content-row-flex text-default\"\n        *ngFor=\"let attachment of cipher.attachments\"\n        appStopClick\n        appBlurCLick\n        (click)=\"downloadAttachment(attachment)\"\n      >\n        <span class=\"row-main\">{{ attachment.fileName }}</span>\n        <small class=\"row-sub-label\">{{ attachment.sizeName }}</small>\n        <i\n          class=\"bwi bwi-download bwi-fw row-sub-icon\"\n          *ngIf=\"!attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n        <i\n          class=\"bwi bwi-spinner bwi-fw bwi-spin row-sub-icon\"\n          *ngIf=\"attachment.downloading\"\n          aria-hidden=\"true\"\n        ></i>\n      </button>\n    </div>\n  </div>\n  <div class=\"box list\">\n    <div class=\"box-content single-line\">\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipher()\"\n        *ngIf=\"cipher.type !== cipherType.SecureNote && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-pencil-square bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFill\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"fillCipherAndSave()\"\n        *ngIf=\"cipher.type === cipherType.Login && !cipher.isDeleted && !inPopout\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-bookmark bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"autoFillAndSave\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"clone()\"\n        *ngIf=\"!cipher.organizationId && !cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-files bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"cloneItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"share()\"\n        *ngIf=\"!cipher.organizationId\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-arrow-circle-right bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"moveToOrganization\" | i18n }}</span>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        class=\"box-content-row\"\n        appStopClick\n        appBlurClick\n        (click)=\"restore()\"\n        *ngIf=\"cipher.isDeleted\"\n      >\n        <div class=\"row-main text-primary\">\n          <div class=\"icon text-primary\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-undo bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ \"restoreItem\" | i18n }}</span>\n        </div>\n      </button>\n      <button type=\"button\" class=\"box-content-row\" appStopClick appBlurClick (click)=\"delete()\">\n        <div class=\"row-main text-danger\">\n          <div class=\"icon text-danger\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\"></i>\n          </div>\n          <span>{{ (cipher.isDeleted ? \"permanentlyDeleteItem\" : \"deleteItem\") | i18n }}</span>\n        </div>\n      </button>\n    </div>\n  </div>\n  <div class=\"box\">\n    <div class=\"box-footer\">\n      <div>\n        <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n        {{ cipher.revisionDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.passwordRevisionDisplayDate\">\n        <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n        {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n      </div>\n      <div *ngIf=\"cipher.hasPasswordHistory\">\n        <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n        <a\n          routerLink=\"/cipher-password-history\"\n          [queryParams]=\"{ cipherId: cipher.id }\"\n          appStopClick\n          title=\"{{ 'passwordHistory' | i18n }}\"\n        >\n          {{ cipher.passwordHistory.length }}\n        </a>\n      </div>\n    </div>\n  </div>\n</content>\n","import { Location } from \"@angular/common\";\nimport { ChangeDetectorRef, Component, NgZone } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ViewComponent as BaseViewComponent } from \"jslib-angular/components/view.component\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { Cipher } from \"jslib-common/models/domain/cipher\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\n\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { PopupUtilsService } from \"../services/popup-utils.service\";\n\nconst BroadcasterSubscriptionId = \"ChildViewComponent\";\n\n@Component({\n  selector: \"app-vault-view\",\n  templateUrl: \"view.component.html\",\n})\nexport class ViewComponent extends BaseViewComponent {\n  showAttachments = true;\n  pageDetails: any[] = [];\n  tab: any;\n  loadPageDetailsTimeout: number;\n  inPopout = false;\n  cipherType = CipherType;\n\n  constructor(\n    cipherService: CipherService,\n    totpService: TotpService,\n    tokenService: TokenService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    broadcasterService: BroadcasterService,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    stateService: StateService,\n    eventService: EventService,\n    private autofillService: AutofillService,\n    private messagingService: MessagingService,\n    private popupUtilsService: PopupUtilsService,\n    apiService: ApiService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      totpService,\n      tokenService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      auditService,\n      window,\n      broadcasterService,\n      ngZone,\n      changeDetectorRef,\n      eventService,\n      apiService,\n      passwordRepromptService,\n      logService,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    this.inPopout = this.popupUtilsService.inPopout(window);\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      if (params.cipherId) {\n        this.cipherId = params.cipherId;\n      } else {\n        this.close();\n      }\n\n      await this.load();\n    });\n\n    super.ngOnInit();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"collectPageDetailsResponse\":\n            if (message.sender === BroadcasterSubscriptionId) {\n              this.pageDetails.push({\n                frameId: message.webExtSender.frameId,\n                tab: message.tab,\n                details: message.details,\n              });\n            }\n            break;\n          case \"tabChanged\":\n          case \"windowChanged\":\n            if (this.loadPageDetailsTimeout != null) {\n              window.clearTimeout(this.loadPageDetailsTimeout);\n            }\n            this.loadPageDetailsTimeout = window.setTimeout(() => this.loadPageDetails(), 500);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    await super.load();\n    await this.loadPageDetails();\n  }\n\n  async edit() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n    if (!(await super.edit())) {\n      return false;\n    }\n\n    this.router.navigate([\"/edit-cipher\"], { queryParams: { cipherId: this.cipher.id } });\n    return true;\n  }\n\n  async clone() {\n    if (this.cipher.isDeleted) {\n      return false;\n    }\n\n    if (!(await super.clone())) {\n      return false;\n    }\n\n    this.router.navigate([\"/clone-cipher\"], {\n      queryParams: {\n        cloneMode: true,\n        cipherId: this.cipher.id,\n      },\n    });\n    return true;\n  }\n\n  async share() {\n    if (!(await super.share())) {\n      return false;\n    }\n\n    if (this.cipher.organizationId == null) {\n      this.router.navigate([\"/share-cipher\"], {\n        replaceUrl: true,\n        queryParams: { cipherId: this.cipher.id },\n      });\n    }\n    return true;\n  }\n\n  async fillCipher() {\n    const didAutofill = await this.doAutofill();\n    if (didAutofill) {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"autoFillSuccess\"));\n    }\n  }\n\n  async fillCipherAndSave() {\n    const didAutofill = await this.doAutofill();\n\n    if (didAutofill) {\n      if (this.tab == null) {\n        throw new Error(\"No tab found.\");\n      }\n\n      if (this.cipher.login.uris == null) {\n        this.cipher.login.uris = [];\n      } else {\n        if (this.cipher.login.uris.some((uri) => uri.uri === this.tab.url)) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n          );\n          return;\n        }\n      }\n\n      const loginUri = new LoginUriView();\n      loginUri.uri = this.tab.url;\n      this.cipher.login.uris.push(loginUri);\n\n      try {\n        const cipher: Cipher = await this.cipherService.encrypt(this.cipher);\n        await this.cipherService.saveWithServer(cipher);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"autoFillSuccessAndSavedUri\")\n        );\n        this.messagingService.send(\"editedCipher\");\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"unexpectedError\"));\n      }\n    }\n  }\n\n  async restore() {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n    if (await super.restore()) {\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  async delete() {\n    if (await super.delete()) {\n      this.messagingService.send(\"deletedCipher\");\n      this.close();\n      return true;\n    }\n    return false;\n  }\n\n  close() {\n    this.location.back();\n  }\n\n  private async loadPageDetails() {\n    this.pageDetails = [];\n    this.tab = await BrowserApi.getTabFromCurrentWindow();\n    if (this.tab == null) {\n      return;\n    }\n    BrowserApi.tabSendMessage(this.tab, {\n      command: \"collectPageDetails\",\n      tab: this.tab,\n      sender: BroadcasterSubscriptionId,\n    });\n  }\n\n  private async doAutofill() {\n    if (!(await this.promptPassword())) {\n      return false;\n    }\n\n    if (this.pageDetails == null || this.pageDetails.length === 0) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      return false;\n    }\n\n    try {\n      this.totpCode = await this.autofillService.doAutoFill({\n        cipher: this.cipher,\n        pageDetails: this.pageDetails,\n        doc: window.document,\n        fillNewPassword: true,\n      });\n      if (this.totpCode != null) {\n        this.platformUtilsService.copyToClipboard(this.totpCode, { window: window });\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"autofillError\"));\n      this.changeDetectorRef.detectChanges();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable, NgModule } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouteReuseStrategy, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from \"jslib-angular/services/auth-guard.service\";\nimport { LockGuardService } from \"jslib-angular/services/lock-guard.service\";\nimport { UnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { PasswordGeneratorComponent } from \"./generator/password-generator.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { DebounceNavigationService } from \"./services/debounceNavigationService\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"home\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"vault\",\n    redirectTo: \"/tabs/vault\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"home\",\n    component: HomeComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"home\" },\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"login\" },\n  },\n  {\n    path: \"lock\",\n    component: LockComponent,\n    canActivate: [LockGuardService],\n    data: { state: \"lock\" },\n  },\n  {\n    path: \"2fa\",\n    component: TwoFactorComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"2fa\" },\n  },\n  {\n    path: \"2fa-options\",\n    component: TwoFactorOptionsComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"2fa-options\" },\n  },\n  {\n    path: \"sso\",\n    component: SsoComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"sso\" },\n  },\n  {\n    path: \"set-password\",\n    component: SetPasswordComponent,\n    data: { state: \"set-password\" },\n  },\n  {\n    path: \"remove-password\",\n    component: RemovePasswordComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"remove-password\" },\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"register\" },\n  },\n  {\n    path: \"hint\",\n    component: HintComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"hint\" },\n  },\n  {\n    path: \"environment\",\n    component: EnvironmentComponent,\n    canActivate: [UnauthGuardService],\n    data: { state: \"environment\" },\n  },\n  {\n    path: \"ciphers\",\n    component: CiphersComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"ciphers\" },\n  },\n  {\n    path: \"view-cipher\",\n    component: ViewComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"view-cipher\" },\n  },\n  {\n    path: \"cipher-password-history\",\n    component: PasswordHistoryComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"cipher-password-history\" },\n  },\n  {\n    path: \"add-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService, DebounceNavigationService],\n    data: { state: \"add-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"edit-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService, DebounceNavigationService],\n    data: { state: \"edit-cipher\" },\n    runGuardsAndResolvers: \"always\",\n  },\n  {\n    path: \"share-cipher\",\n    component: ShareComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"share-cipher\" },\n  },\n  {\n    path: \"collections\",\n    component: CollectionsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"collections\" },\n  },\n  {\n    path: \"attachments\",\n    component: AttachmentsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"attachments\" },\n  },\n  {\n    path: \"generator\",\n    component: PasswordGeneratorComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"generator\" },\n  },\n  {\n    path: \"generator-history\",\n    component: PasswordGeneratorHistoryComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"generator-history\" },\n  },\n  {\n    path: \"export\",\n    component: ExportComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"export\" },\n  },\n  {\n    path: \"folders\",\n    component: FoldersComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"folders\" },\n  },\n  {\n    path: \"add-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"add-folder\" },\n  },\n  {\n    path: \"edit-folder\",\n    component: FolderAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"edit-folder\" },\n  },\n  {\n    path: \"sync\",\n    component: SyncComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"sync\" },\n  },\n  {\n    path: \"excluded-domains\",\n    component: ExcludedDomainsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"excluded-domains\" },\n  },\n  {\n    path: \"premium\",\n    component: PremiumComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"premium\" },\n  },\n  {\n    path: \"options\",\n    component: OptionsComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"options\" },\n  },\n  {\n    path: \"clone-cipher\",\n    component: AddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"clone-cipher\" },\n  },\n  {\n    path: \"send-type\",\n    component: SendTypeComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"send-type\" },\n  },\n  {\n    path: \"add-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"add-send\" },\n  },\n  {\n    path: \"edit-send\",\n    component: SendAddEditComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"edit-send\" },\n  },\n  {\n    path: \"update-temp-password\",\n    component: UpdateTempPasswordComponent,\n    canActivate: [AuthGuardService],\n    data: { state: \"update-temp-password\" },\n  },\n  {\n    path: \"tabs\",\n    component: TabsComponent,\n    data: { state: \"tabs\" },\n    children: [\n      {\n        path: \"\",\n        redirectTo: \"/tabs/vault\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"current\",\n        component: CurrentTabComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_current\" },\n        runGuardsAndResolvers: \"always\",\n      },\n      {\n        path: \"vault\",\n        component: GroupingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_vault\" },\n      },\n      {\n        path: \"generator\",\n        component: PasswordGeneratorComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_generator\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_settings\" },\n      },\n      {\n        path: \"send\",\n        component: SendGroupingsComponent,\n        canActivate: [AuthGuardService],\n        data: { state: \"tabs_send\" },\n      },\n    ],\n  },\n];\n\n@Injectable()\nexport class NoRouteReuseStrategy implements RouteReuseStrategy {\n  shouldDetach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  store(route: ActivatedRouteSnapshot, handle: {}) {\n    /* Nothing */\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot) {\n    return false;\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): any {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {\n    return false;\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: \"reload\",\n      /*enableTracing: true,*/\n    }),\n  ],\n  exports: [RouterModule],\n  providers: [{ provide: RouteReuseStrategy, useClass: NoRouteReuseStrategy }],\n})\nexport class AppRoutingModule {}\n","import { animate, group, query, style, transition, trigger } from \"@angular/animations\";\n\nconst queryShown = query(\n  \":enter, :leave\",\n  [style({ position: \"fixed\", width: \"100%\", height: \"100%\" })],\n  {\n    optional: true,\n  }\n);\n\n// ref: https://github.com/angular/angular/issues/15477\nconst queryChildRoute = query(\"router-outlet ~ *\", [style({}), animate(1, style({}))], {\n  optional: true,\n});\n\nconst speed = \"0.4s\";\n\nexport function queryTranslate(\n  direction: string,\n  axis: string,\n  from: number,\n  to: number,\n  zIndex = 1000\n) {\n  return query(\n    \":\" + direction,\n    [\n      style({\n        transform: \"translate\" + axis + \"(\" + from + \"%)\",\n        zIndex: zIndex,\n        boxShadow: \"0 3px 2px -2px gray\",\n      }),\n      animate(speed + \" ease-in-out\", style({ transform: \"translate\" + axis + \"(\" + to + \"%)\" })),\n    ],\n    { optional: true }\n  );\n}\n\nexport function queryTranslateX(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"X\", from, to, zIndex);\n}\n\nexport function queryTranslateY(direction: string, from: number, to: number, zIndex = 1000) {\n  return queryTranslate(direction, \"Y\", from, to, zIndex);\n}\n\nconst inSlideLeft = [\n  queryShown,\n  group([queryTranslateX(\"enter\", 100, 0), queryTranslateX(\"leave\", 0, -100), queryChildRoute]),\n];\n\nconst outSlideRight = [\n  queryShown,\n  group([queryTranslateX(\"enter\", -100, 0), queryTranslateX(\"leave\", 0, 100)]),\n];\n\nconst inSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\nconst outSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, 100, 1010)]),\n];\n\nconst inSlideDown = [\n  queryShown,\n  group([queryTranslateY(\"enter\", -100, 0, 1010), queryTranslateY(\"leave\", 0, 0), queryChildRoute]),\n];\n\n// eslint-disable-next-line\nconst outSlideUp = [\n  queryShown,\n  group([queryTranslateY(\"enter\", 0, 0), queryTranslateY(\"leave\", 0, -100, 1010)]),\n];\n\nexport function tabsToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null || toState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return (\n    (fromState.indexOf(\"ciphers_\") === 0 && fromState.indexOf(\"ciphers_direction=b\") === -1) ||\n    fromState === \"tabs\"\n  );\n}\n\nexport function ciphersToTabs(fromState: string, toState: string) {\n  if (fromState == null || toState === null || fromState.indexOf(\"ciphers_\") === -1) {\n    return false;\n  }\n  return toState.indexOf(\"ciphers_direction=b\") === 0 || toState === \"tabs\";\n}\n\nexport function ciphersToView(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    fromState.indexOf(\"ciphers_\") === 0 &&\n    (toState === \"view-cipher\" || toState === \"add-cipher\" || toState === \"clone-cipher\")\n  );\n}\n\nexport function viewToCiphers(fromState: string, toState: string) {\n  if (fromState == null || toState === null) {\n    return false;\n  }\n  return (\n    (fromState === \"view-cipher\" || fromState === \"add-cipher\" || fromState === \"clone-cipher\") &&\n    toState.indexOf(\"ciphers_\") === 0\n  );\n}\n\nexport const routerTransition = trigger(\"routerTransition\", [\n  transition(\"void => home\", inSlideLeft),\n  transition(\"void => tabs\", inSlideLeft),\n\n  transition(\"home => environment, home => login, home => register\", inSlideUp),\n\n  transition(\"login => home\", outSlideDown),\n  transition(\"login => hint\", inSlideUp),\n  transition(\"login => tabs, login => 2fa\", inSlideLeft),\n\n  transition(\"hint => login, register => home, environment => home\", outSlideDown),\n\n  transition(\"2fa => login\", outSlideRight),\n  transition(\"2fa => 2fa-options\", inSlideUp),\n  transition(\"2fa-options => 2fa\", outSlideDown),\n  transition(\"2fa => tabs\", inSlideLeft),\n\n  transition(tabsToCiphers, inSlideLeft),\n  transition(ciphersToTabs, outSlideRight),\n\n  transition(ciphersToView, inSlideUp),\n  transition(viewToCiphers, outSlideDown),\n\n  transition(\"tabs => view-cipher\", inSlideUp),\n  transition(\"view-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => edit-cipher, view-cipher => cipher-password-history\", inSlideUp),\n  transition(\n    \"edit-cipher => view-cipher, cipher-password-history => view-cipher, edit-cipher => tabs\",\n    outSlideDown\n  ),\n\n  transition(\"view-cipher => clone-cipher\", inSlideUp),\n  transition(\"clone-cipher => view-cipher, clone-cipher => tabs\", outSlideDown),\n\n  transition(\"view-cipher => share-cipher\", inSlideUp),\n  transition(\"share-cipher => view-cipher\", outSlideDown),\n\n  transition(\"tabs => add-cipher\", inSlideUp),\n  transition(\"add-cipher => tabs\", outSlideDown),\n\n  transition(\"generator => generator-history, tabs => generator-history\", inSlideLeft),\n  transition(\"generator-history => generator, generator-history => tabs\", outSlideRight),\n\n  transition(\n    \"add-cipher => generator, edit-cipher => generator, clone-cipher => generator\",\n    inSlideUp\n  ),\n  transition(\n    \"generator => add-cipher, generator => edit-cipher, generator => clone-cipher\",\n    outSlideDown\n  ),\n\n  transition(\"edit-cipher => attachments, edit-cipher => collections\", inSlideLeft),\n  transition(\"attachments => edit-cipher, collections => edit-cipher\", outSlideRight),\n\n  transition(\"clone-cipher => attachments, clone-cipher => collections\", inSlideLeft),\n  transition(\"attachments => clone-cipher, collections => clone-cipher\", outSlideRight),\n\n  transition(\"tabs => export\", inSlideLeft),\n  transition(\"export => tabs\", outSlideRight),\n\n  transition(\"tabs => folders\", inSlideLeft),\n  transition(\"folders => tabs\", outSlideRight),\n\n  transition(\"folders => edit-folder, folders => add-folder\", inSlideUp),\n  transition(\"edit-folder => folders, add-folder => folders\", outSlideDown),\n\n  transition(\"tabs => sync\", inSlideLeft),\n  transition(\"sync => tabs\", outSlideRight),\n\n  transition(\"tabs => excluded-domains\", inSlideLeft),\n  transition(\"excluded-domains => tabs\", outSlideRight),\n\n  transition(\"tabs => options\", inSlideLeft),\n  transition(\"options => tabs\", outSlideRight),\n\n  transition(\"tabs => premium\", inSlideLeft),\n  transition(\"premium => tabs\", outSlideRight),\n\n  transition(\"tabs => lock\", inSlideDown),\n\n  transition(\"tabs => send-type\", inSlideLeft),\n  transition(\"send-type => tabs\", outSlideRight),\n\n  transition(\"tabs => add-send, send-type => add-send\", inSlideUp),\n  transition(\"add-send => tabs, add-send => send-type\", outSlideDown),\n\n  transition(\"tabs => edit-send, send-type => edit-send\", inSlideUp),\n  transition(\"edit-send => tabs, edit-send => send-type\", outSlideDown),\n]);\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Latest = Four,\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { ChangeDetectorRef, Component, NgZone, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router, RouterOutlet } from \"@angular/router\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2/src/sweetalert2.js\";\n\nimport { AuthService } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService } from \"jslib-common/abstractions/broadcaster.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { routerTransition } from \"./app-routing.animations\";\n\n@Component({\n  selector: \"app-root\",\n  styles: [],\n  animations: [routerTransition],\n  template: ` <main [@routerTransition]=\"getState(o)\">\n    <router-outlet #o=\"outlet\"></router-outlet>\n  </main>`,\n})\nexport class AppComponent implements OnInit {\n  private lastActivity: number = null;\n  private activeUserId: string;\n\n  constructor(\n    private toastrService: ToastrService,\n    private broadcasterService: BroadcasterService,\n    private authService: AuthService,\n    private i18nService: I18nService,\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private ngZone: NgZone,\n    private sanitizer: DomSanitizer,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    this.stateService.activeAccount.subscribe((userId) => {\n      this.activeUserId = userId;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    (window as any).bitwardenPopupMainMessageListener = async (\n      msg: any,\n      sender: any,\n      sendResponse: any\n    ) => {\n      if (msg.command === \"doneLoggingOut\") {\n        this.ngZone.run(async () => {\n          this.authService.logOut(async () => {\n            if (msg.expired) {\n              this.showToast({\n                type: \"warning\",\n                title: this.i18nService.t(\"loggedOut\"),\n                text: this.i18nService.t(\"loginExpired\"),\n              });\n            }\n\n            if (this.stateService.activeAccount.getValue() == null) {\n              this.router.navigate([\"home\"]);\n            }\n          });\n          this.changeDetectorRef.detectChanges();\n        });\n      } else if (msg.command === \"authBlocked\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"home\"]);\n        });\n      } else if (msg.command === \"locked\") {\n        if (msg.userId == null || msg.userId === (await this.stateService.getUserId())) {\n          this.ngZone.run(() => {\n            this.router.navigate([\"lock\"]);\n          });\n        }\n      } else if (msg.command === \"showDialog\") {\n        await this.showDialog(msg);\n      } else if (msg.command === \"showToast\") {\n        this.ngZone.run(() => {\n          this.showToast(msg);\n        });\n      } else if (msg.command === \"reloadProcess\") {\n        const windowReload =\n          this.platformUtilsService.isSafari() ||\n          this.platformUtilsService.isFirefox() ||\n          this.platformUtilsService.isOpera();\n        if (windowReload) {\n          // Wait to make sure background has reloaded first.\n          window.setTimeout(() => BrowserApi.reloadExtension(window), 2000);\n        }\n      } else if (msg.command === \"reloadPopup\") {\n        this.ngZone.run(() => {\n          this.router.navigate([\"/\"]);\n        });\n      } else if (msg.command === \"convertAccountToKeyConnector\") {\n        this.ngZone.run(async () => {\n          this.router.navigate([\"/remove-password\"]);\n        });\n      } else {\n        msg.webExtSender = sender;\n        this.broadcasterService.send(msg);\n      }\n    };\n\n    BrowserApi.messageListener(\"app.component\", (window as any).bitwardenPopupMainMessageListener);\n\n    this.router.events.subscribe(async (event) => {\n      if (event instanceof NavigationEnd) {\n        const url = event.urlAfterRedirects || event.url || \"\";\n        if (\n          url.startsWith(\"/tabs/\") &&\n          (window as any).previousPopupUrl != null &&\n          (window as any).previousPopupUrl.startsWith(\"/tabs/\")\n        ) {\n          await this.stateService.setBrowserGroupingComponentState(null);\n          await this.stateService.setBrowserCipherComponentState(null);\n          await this.stateService.setBrowserSendComponentState(null);\n          await this.stateService.setBrowserSendTypeComponentState(null);\n        }\n        if (url.startsWith(\"/tabs/\")) {\n          await this.stateService.setAddEditCipherInfo(null);\n        }\n        (window as any).previousPopupUrl = url;\n\n        // Clear route direction after animation (400ms)\n        if ((window as any).routeDirection != null) {\n          window.setTimeout(() => {\n            (window as any).routeDirection = null;\n          }, 400);\n        }\n      }\n    });\n  }\n\n  getState(outlet: RouterOutlet) {\n    if (outlet.activatedRouteData.state === \"ciphers\") {\n      const routeDirection =\n        (window as any).routeDirection != null ? (window as any).routeDirection : \"\";\n      return (\n        \"ciphers_direction=\" +\n        routeDirection +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.folderId +\n        \"_\" +\n        (outlet.activatedRoute.queryParams as any).value.collectionId\n      );\n    } else {\n      return outlet.activatedRouteData.state;\n    }\n  }\n\n  private async recordActivity() {\n    if (this.activeUserId == null) {\n      return;\n    }\n\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    await this.stateService.setLastActive(now, { userId: this.activeUserId });\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private async showDialog(msg: any) {\n    let iconClasses: string = null;\n    const type = msg.type;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const cancelText = msg.cancelText;\n    const confirmText = msg.confirmText;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml:\n        iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined,\n      text: msg.text,\n      html: msg.html,\n      titleText: msg.title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      timer: 300000,\n    });\n\n    this.messagingService.send(\"showDialogResolve\", {\n      dialogId: msg.dialogId,\n      confirmed: confirmed.value,\n    });\n  }\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","export abstract class SettingsService {\n  clearCache: () => Promise<void>;\n  getEquivalentDomains: () => Promise<any>;\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { StorageOptions } from \"../models/domain/storageOptions\";\n\nexport abstract class StorageService {\n  get: <T>(key: string, options?: StorageOptions) => Promise<T>;\n  has: (key: string, options?: StorageOptions) => Promise<boolean>;\n  save: (key: string, obj: any, options?: StorageOptions) => Promise<any>;\n  remove: (key: string, options?: StorageOptions) => Promise<any>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/globalState\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/globalState\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n}\n","import { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CollectionData } from \"../data/collectionData\";\nimport { EventData } from \"../data/eventData\";\nimport { FolderData } from \"../data/folderData\";\nimport { OrganizationData } from \"../data/organizationData\";\nimport { PolicyData } from \"../data/policyData\";\nimport { ProviderData } from \"../data/providerData\";\nimport { SendData } from \"../data/sendData\";\nimport { CipherView } from \"../view/cipherView\";\nimport { CollectionView } from \"../view/collectionView\";\nimport { FolderView } from \"../view/folderView\";\nimport { SendView } from \"../view/sendView\";\n\nimport { EncString } from \"./encString\";\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { GeneratedPasswordHistory } from \"./generatedPasswordHistory\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders?: DataEncryptionPair<FolderData, FolderView> = new DataEncryptionPair<\n    FolderData,\n    FolderView\n  >();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Map<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Map<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  legacyEtmKey?: SymmetricCryptoKey;\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricLocked?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  enableGravitars?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: any; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n}\n\nexport class AccountTokens {\n  accessToken?: string;\n  decodedToken?: any;\n  refreshToken?: string;\n  securityStamp?: string;\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environmentUrls\";\nimport { WindowState } from \"./windowState\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string = \"en\";\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nexport interface TokenRequestTwoFactor {\n  provider: TwoFactorProviderType;\n  token: string;\n  remember: boolean;\n}\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n\n  constructor(protected twoFactor: TokenRequestTwoFactor, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenRequestTwoFactor) {\n    this.twoFactor = twoFactor;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nimport { LoginUriApi } from \"./loginUriApi\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/baseResponse\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nimport { AttachmentResponse } from \"./attachmentResponse\";\nimport { BaseResponse } from \"./baseResponse\";\nimport { PasswordHistoryResponse } from \"./passwordHistoryResponse\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { GlobalDomainResponse } from \"./globalDomainResponse\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/baseResponse\";\nimport { SsoConfigView } from \"../view/ssoConfigView\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/ssoConfigApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keysResponse\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { PlanResponse } from \"./planResponse\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { OrganizationResponse } from \"./organizationResponse\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscriptionResponse\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SelectionReadOnlyResponse } from \"./selectionReadOnlyResponse\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileOrganizationResponse } from \"./profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"./profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"./profileProviderResponse\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premium: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premium = this.getResponseProperty(\"Premium\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organizationUserBulkPublicKeyResponse\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissionsApi\";\nimport { BaseResponse } from \"../baseResponse\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/baseResponse\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./baseResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\nimport { CipherResponse } from \"./cipherResponse\";\nimport { CollectionDetailsResponse } from \"./collectionResponse\";\nimport { DomainsResponse } from \"./domainsResponse\";\nimport { FolderResponse } from \"./folderResponse\";\nimport { PolicyResponse } from \"./policyResponse\";\nimport { ProfileResponse } from \"./profileResponse\";\nimport { SendResponse } from \"./sendResponse\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./baseResponse\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { BitPayInvoiceRequest } from \"../models/request/bitPayInvoiceRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CollectionRequest } from \"../models/request/collectionRequest\";\nimport { DeleteRecoverRequest } from \"../models/request/deleteRecoverRequest\";\nimport { EmailRequest } from \"../models/request/emailRequest\";\nimport { EmailTokenRequest } from \"../models/request/emailTokenRequest\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergencyAccessAcceptRequest\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergencyAccessConfirmRequest\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergencyAccessInviteRequest\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergencyAccessPasswordRequest\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergencyAccessUpdateRequest\";\nimport { EventRequest } from \"../models/request/eventRequest\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { GroupRequest } from \"../models/request/groupRequest\";\nimport { IapCheckRequest } from \"../models/request/iapCheckRequest\";\nimport { ApiTokenRequest } from \"../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../models/request/identityToken/ssoTokenRequest\";\nimport { ImportCiphersRequest } from \"../models/request/importCiphersRequest\";\nimport { ImportDirectoryRequest } from \"../models/request/importDirectoryRequest\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/importOrganizationCiphersRequest\";\nimport { KdfRequest } from \"../models/request/kdfRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organizationSponsorshipCreateRequest\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organizationSponsorshipRedeemRequest\";\nimport { OrganizationSsoRequest } from \"../models/request/organization/organizationSsoRequest\";\nimport { OrganizationCreateRequest } from \"../models/request/organizationCreateRequest\";\nimport { OrganizationImportRequest } from \"../models/request/organizationImportRequest\";\nimport { OrganizationKeysRequest } from \"../models/request/organizationKeysRequest\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../models/request/organizationSubscriptionUpdateRequest\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../models/request/organizationTaxInfoUpdateRequest\";\nimport { OrganizationUpdateRequest } from \"../models/request/organizationUpdateRequest\";\nimport { OrganizationUpgradeRequest } from \"../models/request/organizationUpgradeRequest\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organizationUserAcceptRequest\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organizationUserBulkConfirmRequest\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organizationUserBulkRequest\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organizationUserConfirmRequest\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organizationUserInviteRequest\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organizationUserResetPasswordEnrollmentRequest\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organizationUserResetPasswordRequest\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organizationUserUpdateGroupsRequest\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organizationUserUpdateRequest\";\nimport { PasswordHintRequest } from \"../models/request/passwordHintRequest\";\nimport { PasswordRequest } from \"../models/request/passwordRequest\";\nimport { PaymentRequest } from \"../models/request/paymentRequest\";\nimport { PolicyRequest } from \"../models/request/policyRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/providerAddOrganizationRequest\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/providerOrganizationCreateRequest\";\nimport { ProviderSetupRequest } from \"../models/request/provider/providerSetupRequest\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/providerUpdateRequest\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/providerUserAcceptRequest\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/providerUserBulkConfirmRequest\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/providerUserBulkRequest\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/providerUserConfirmRequest\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/providerUserInviteRequest\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/providerUserUpdateRequest\";\nimport { RegisterRequest } from \"../models/request/registerRequest\";\nimport { SeatRequest } from \"../models/request/seatRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selectionReadOnlyRequest\";\nimport { SendAccessRequest } from \"../models/request/sendAccessRequest\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { SetPasswordRequest } from \"../models/request/setPasswordRequest\";\nimport { StorageRequest } from \"../models/request/storageRequest\";\nimport { TaxInfoUpdateRequest } from \"../models/request/taxInfoUpdateRequest\";\nimport { TwoFactorEmailRequest } from \"../models/request/twoFactorEmailRequest\";\nimport { TwoFactorProviderRequest } from \"../models/request/twoFactorProviderRequest\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/twoFactorRecoveryRequest\";\nimport { UpdateDomainsRequest } from \"../models/request/updateDomainsRequest\";\nimport { UpdateKeyRequest } from \"../models/request/updateKeyRequest\";\nimport { UpdateProfileRequest } from \"../models/request/updateProfileRequest\";\nimport { UpdateTempPasswordRequest } from \"../models/request/updateTempPasswordRequest\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/updateTwoFactorAuthenticatorRequest\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/updateTwoFactorDuoRequest\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/updateTwoFactorEmailRequest\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/updateTwoFactorWebAuthnDeleteRequest\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/updateTwoFactorWebAuthnRequest\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/updateTwoFactorYubioOtpRequest\";\nimport { VerifyBankRequest } from \"../models/request/verifyBankRequest\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verifyDeleteRecoverRequest\";\nimport { VerifyEmailRequest } from \"../models/request/verifyEmailRequest\";\nimport { ApiKeyResponse } from \"../models/response/apiKeyResponse\";\nimport { AttachmentResponse } from \"../models/response/attachmentResponse\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { BillingResponse } from \"../models/response/billingResponse\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergencyAccessResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { EventResponse } from \"../models/response/eventResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/groupResponse\";\nimport { IdentityCaptchaResponse } from \"../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identityTwoFactorResponse\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/keyConnectorUserKeyResponse\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { OrganizationSsoResponse } from \"../models/response/organization/organizationSsoResponse\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../models/response/organizationAutoEnrollStatusResponse\";\nimport { OrganizationKeysResponse } from \"../models/response/organizationKeysResponse\";\nimport { OrganizationResponse } from \"../models/response/organizationResponse\";\nimport { OrganizationSubscriptionResponse } from \"../models/response/organizationSubscriptionResponse\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organizationUserBulkPublicKeyResponse\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organizationUserBulkResponse\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../models/response/organizationUserResponse\";\nimport { PaymentResponse } from \"../models/response/paymentResponse\";\nimport { PlanResponse } from \"../models/response/planResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { PreloginResponse } from \"../models/response/preloginResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/providerOrganizationResponse\";\nimport { ProviderResponse } from \"../models/response/provider/providerResponse\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/providerUserBulkPublicKeyResponse\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/providerUserBulkResponse\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/providerUserResponse\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selectionReadOnlyResponse\";\nimport { SendAccessResponse } from \"../models/response/sendAccessResponse\";\nimport { SendFileDownloadDataResponse } from \"../models/response/sendFileDownloadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SubscriptionResponse } from \"../models/response/subscriptionResponse\";\nimport { SyncResponse } from \"../models/response/syncResponse\";\nimport { TaxInfoResponse } from \"../models/response/taxInfoResponse\";\nimport { TaxRateResponse } from \"../models/response/taxRateResponse\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/twoFactorAuthenticatorResponse\";\nimport { TwoFactorDuoResponse } from \"../models/response/twoFactorDuoResponse\";\nimport { TwoFactorEmailResponse } from \"../models/response/twoFactorEmailResponse\";\nimport { TwoFactorProviderResponse } from \"../models/response/twoFactorProviderResponse\";\nimport { TwoFactorRecoverResponse } from \"../models/response/twoFactorRescoverResponse\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/twoFactorWebAuthnResponse\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/twoFactorYubiKeyResponse\";\nimport { UserKeyResponse } from \"../models/response/userKeyResponse\";\nimport { SendAccessView } from \"../models/view/sendAccessView\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  protected apiKeyRefresh: (clientId: string, clientSecret: string) => Promise<any>;\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserBilling(): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  deleteAccount(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  postRegister(request: RegisterRequest): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      false,\n      this.platformUtilsService.isDev()\n        ? this.environmentService.getIdentityUrl()\n        : this.environmentService.getApiUrl()\n    );\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postAccountRequestOTP(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Folder APIs\n\n  async getFolder(id: string): Promise<FolderResponse> {\n    const r = await this.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  deleteFolder(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Policy APIs\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async putPolicy(\n    organizationId: string,\n    type: PolicyType,\n    request: PolicyRequest\n  ): Promise<PolicyResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  async getOrganizationAutoEnrollStatus(\n    identifier: string\n  ): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, true, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + organizationId + \"/import\", request, true, false);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getOrganization(id: string): Promise<OrganizationResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getOrganizationBilling(id: string): Promise<BillingResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/billing\", null, true, true);\n    return new BillingResponse(r);\n  }\n\n  async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/subscription\", null, true, true);\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n    return this.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async getOrganizationSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations\", request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganization(\n    id: string,\n    request: OrganizationUpdateRequest\n  ): Promise<OrganizationResponse> {\n    const r = await this.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async putOrganizationTaxInfo(\n    id: string,\n    request: OrganizationTaxInfoUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  postLeaveOrganization(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n  }\n\n  async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async postOrganizationApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async postOrganizationSso(\n    id: string,\n    request: OrganizationSsoRequest\n  ): Promise<OrganizationSsoResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/sso\", request, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async postOrganizationUpgrade(\n    id: string,\n    request: OrganizationUpgradeRequest\n  ): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/upgrade\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationUpdateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/subscription\", request, true, false);\n  }\n\n  async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/seat\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/verify-bank\", request, true, false);\n  }\n\n  postOrganizationCancel(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  postOrganizationReinstate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  deleteOrganization(id: string, request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n  }\n\n  async getOrganizationKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async postOrganizationKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.send(\"POST\", \"/organizations/\" + id + \"/keys\", request, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<boolean> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      return true;\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" + sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (\n      Utils.isNullOrWhitespace(clientId) ||\n      Utils.isNullOrWhitespace(clientSecret) ||\n      this.apiKeyRefresh == null\n    ) {\n      throw new Error();\n    }\n\n    await this.apiKeyRefresh(clientId, clientSecret);\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  private async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    if (hasResponse && response.status === 200) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: StorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breachAccountResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../../models/domain/logInCredentials\";\nimport { DeviceRequest } from \"../../models/request/deviceRequest\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequest\";\nimport { KeysRequest } from \"../../models/request/keysRequest\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identityCaptchaResponse\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identityTwoFactorResponse\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenRequestTwoFactor) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return {\n        token: storedTwoFactorToken,\n        provider: TwoFactorProviderType.Remember,\n        remember: false,\n      };\n    }\n\n    return {\n      token: null,\n      provider: null,\n      remember: false,\n    };\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    await this.stateService.setBiometricLocked(false);\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { ApiTokenRequest } from \"../../models/request/identityToken/apiTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captchaProtectedRequest\";\nimport { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/authResult\";\nimport { PasswordLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetricCryptoKey\";\nimport { PasswordTokenRequest } from \"../../models/request/identityToken/passwordTokenRequest\";\nimport { TokenRequestTwoFactor } from \"../../models/request/identityToken/tokenRequest\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../deviceRequest\";\n\nimport { TokenRequest, TokenRequestTwoFactor } from \"./tokenRequest\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenRequestTwoFactor,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/logInCredentials\";\nimport { SsoTokenRequest } from \"../../models/request/identityToken/ssoTokenRequest\";\nimport { IdentityTokenResponse } from \"../../models/response/identityTokenResponse\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/authResult\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n} from \"../models/domain/logInCredentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TokenRequestTwoFactor } from \"../models/request/identityToken/tokenRequest\";\nimport { PreloginRequest } from \"../models/request/preloginRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy ? this.logInStrategy.email : null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  private logInStrategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n  private sessionTimeout: any;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials: ApiLogInCredentials | PasswordLogInCredentials | SsoLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy;\n\n    if (credentials.type === AuthenticationType.Password) {\n      strategy = new PasswordLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this\n      );\n    } else if (credentials.type === AuthenticationType.Sso) {\n      strategy = new SsoLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.keyConnectorService\n      );\n    } else if (credentials.type === AuthenticationType.Api) {\n      strategy = new ApiLogInStrategy(\n        this.cryptoService,\n        this.apiService,\n        this.tokenService,\n        this.appIdService,\n        this.platformUtilsService,\n        this.messagingService,\n        this.logService,\n        this.stateService,\n        this.twoFactorService,\n        this.environmentService,\n        this.keyConnectorService\n      );\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenRequestTwoFactor,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  private saveState(strategy: ApiLogInStrategy | PasswordLogInStrategy | SsoLogInStrategy) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { AttachmentResponse } from \"../response/attachmentResponse\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/cardApi\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/fieldApi\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identityApi\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/loginApi\";\n\nimport { LoginUriData } from \"./loginUriData\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/passwordHistoryResponse\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipherResponse\";\n\nimport { AttachmentData } from \"./attachmentData\";\nimport { CardData } from \"./cardData\";\nimport { FieldData } from \"./fieldData\";\nimport { IdentityData } from \"./identityData\";\nimport { LoginData } from \"./loginData\";\nimport { PasswordHistoryData } from \"./passwordHistoryData\";\nimport { SecureNoteData } from \"./secureNoteData\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  userId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  sizeName: string;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.userId = userId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetricCryptoKey\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachmentData\";\nimport { AttachmentView } from \"../view/attachmentView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string;\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      let cryptoService: CryptoService;\n      const containerService = (Utils.global as any).bitwardenContainerService;\n      if (containerService) {\n        cryptoService = containerService.getCryptoService();\n      } else {\n        throw new Error(\"global bitwardenContainerService not initialized.\");\n      }\n\n      try {\n        const orgKey = await cryptoService.getOrgKey(orgId);\n        const decValue = await cryptoService.decryptToBytes(this.key, orgKey ?? encKey);\n        view.key = new SymmetricCryptoKey(decValue);\n      } catch (e) {\n        // TODO: error?\n      }\n    }\n\n    return view;\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n}\n","import { CardData } from \"../data/cardData\";\nimport { CardView } from \"../view/cardView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/fieldData\";\nimport { FieldView } from \"../view/fieldView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n}\n","import { IdentityData } from \"../data/identityData\";\nimport { IdentityView } from \"../view/identityView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/loginUriData\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n}\n","import { LoginData } from \"../data/loginData\";\nimport { LoginView } from \"../view/loginView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { LoginUri } from \"./loginUri\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u, alreadyEncrypted));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n}\n","import { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n}\n","import { PasswordHistoryData } from \"../data/passwordHistoryData\";\nimport { PasswordHistoryView } from \"../view/passwordHistoryView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        password: null,\n      },\n      alreadyEncrypted\n    );\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secureNoteData\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nimport Domain from \"./domainBase\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherData } from \"../data/cipherData\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secureNote\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class Cipher extends Domain {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: any;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, alreadyEncrypted = false, localData: any = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        userId: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"userId\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login, alreadyEncrypted);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card, alreadyEncrypted);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(userId: string): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.userId = this.organizationId != null ? userId : null;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n}\n","import { CipherView } from \"../view/cipherView\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/cardApi\";\nimport { FieldApi } from \"../api/fieldApi\";\nimport { IdentityApi } from \"../api/identityApi\";\nimport { LoginApi } from \"../api/loginApi\";\nimport { LoginUriApi } from \"../api/loginUriApi\";\nimport { SecureNoteApi } from \"../api/secureNoteApi\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachmentRequest\";\nimport { PasswordHistoryRequest } from \"./passwordHistoryRequest\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipherWithIdRequest\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipherRequest\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domainBase\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/loginUri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secureNote\";\nimport { SortedCiphersCache } from \"../models/domain/sortedCiphersCache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { AttachmentRequest } from \"../models/request/attachmentRequest\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipherBulkDeleteRequest\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipherBulkMoveRequest\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipherBulkRestoreRequest\";\nimport { CipherBulkShareRequest } from \"../models/request/cipherBulkShareRequest\";\nimport { CipherCollectionsRequest } from \"../models/request/cipherCollectionsRequest\";\nimport { CipherCreateRequest } from \"../models/request/cipherCreateRequest\";\nimport { CipherRequest } from \"../models/request/cipherRequest\";\nimport { CipherShareRequest } from \"../models/request/cipherShareRequest\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { AttachmentView } from \"../models/view/attachmentView\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { FieldView } from \"../models/view/fieldView\";\nimport { PasswordHistoryView } from \"../models/view/passwordHistoryView\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    const userId = await this.stateService.getUserId();\n    if ((await this.getDecryptedCipherCache()) != null) {\n      if (\n        this.searchService != null &&\n        (this.searchService().indexedEntityId ?? userId) !== userId\n      ) {\n        await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n      }\n      return await this.getDecryptedCipherCache();\n    }\n\n    const decCiphers: CipherView[] = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: any[] = [];\n    const ciphers = await this.getAll();\n    ciphers.forEach(async (cipher) => {\n      promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.getLocaleSortingFunction());\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n            let matches: any[] = [];\n            eqDomains.forEach((eqDomain) => {\n              if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                matches = matches.concat(eqDomain);\n              }\n            });\n\n            if (!matches.length) {\n              matches.push(domain);\n            }\n\n            return matches;\n          });\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n    if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n      const decCiphers: CipherView[] = [];\n      const promises: any[] = [];\n      ciphers.data.forEach((r) => {\n        const data = new CipherData(r);\n        const cipher = new Cipher(data);\n        promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n      });\n      await Promise.all(promises);\n      decCiphers.sort(this.getLocaleSortingFunction());\n      return decCiphers;\n    } else {\n      return [];\n    }\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async saveWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.id == null) {\n      if (cipher.collectionIds != null) {\n        const request = new CipherCreateRequest(cipher);\n        response = await this.apiService.postCipherCreate(request);\n      } else {\n        const request = new CipherRequest(cipher);\n        response = await this.apiService.postCipher(request);\n      }\n      cipher.id = response.id;\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, await this.stateService.getUserId(), collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    const userId = await this.stateService.getUserId();\n    await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(\n      response,\n      await this.stateService.getUserId(),\n      cipher.collectionIds\n    );\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData(await this.stateService.getUserId());\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const buf = await attachmentResponse.arrayBuffer();\n    const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/treeNode\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collectionResponse\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/treeNode\";\nimport { CollectionGroupDetailsResponse } from \"../response/collectionResponse\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { CollectionData } from \"../data/collectionData\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { CollectionView } from \"../models/view/collectionView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import * as hrtime from \"browser-hrtime\";\n\nimport { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  time(label = \"default\") {\n    if (!this.timersMap.has(label)) {\n      this.timersMap.set(label, hrtime());\n    }\n  }\n\n  timeEnd(label = \"default\"): [number, number] {\n    const elapsed = hrtime(this.timersMap.get(label));\n    this.timersMap.delete(label);\n    this.write(LogLevelType.Info, `${label}: ${elapsed[0] * 1000 + elapsed[1] / 10e6}ms`);\n    return elapsed;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","export class EncArrayBuffer {\n  constructor(public buffer: ArrayBuffer) {}\n}\n","import { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EncryptedObject } from \"../models/domain/encryptedObject\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { ProfileOrganizationResponse } from \"../models/response/profileOrganizationResponse\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profileProviderOrganizationResponse\";\nimport { ProfileProviderResponse } from \"../models/response/profileProviderResponse\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ): Promise<void> {\n    const orgKeys: any = {};\n    orgs.forEach((org) => {\n      orgKeys[org.id] = org.key;\n    });\n\n    for (const providerOrg of providerOrgs) {\n      // Convert provider encrypted keys to user encrypted.\n      const providerKey = await this.getProviderKey(providerOrg.providerId);\n      const decValue = await this.decryptToBytes(new EncString(providerOrg.key), providerKey);\n      orgKeys[providerOrg.id] = (await this.rsaEncrypt(decValue)).encryptedString;\n    }\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(orgKeys);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeys = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encOrgKeys) {\n      // eslint-disable-next-line\n      if (!encOrgKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n      orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(orgKeys);\n    }\n\n    return orgKeys;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    await this.stateService.setLegacyEtmKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const iv = Utils.fromB64ToArray(encString.iv).buffer;\n    const data = Utils.fromB64ToArray(encString.data).buffer;\n    const mac = encString.mac ? Utils.fromB64ToArray(encString.mac).buffer : null;\n    const decipher = await this.aesDecryptToBytes(encString.encryptionType, data, iv, mac, key);\n    if (decipher == null) {\n      return null;\n    }\n\n    return decipher;\n  }\n\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    return await this.aesDecryptToUtf8(\n      encString.encryptionType,\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n  }\n\n  async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuf == null) {\n      throw new Error(\"no encBuf.\");\n    }\n\n    const encBytes = new Uint8Array(encBuf);\n    const encType = encBytes[0];\n    let ctBytes: Uint8Array = null;\n    let ivBytes: Uint8Array = null;\n    let macBytes: Uint8Array = null;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encBytes.length <= 49) {\n          // 1 + 16 + 32 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        macBytes = encBytes.slice(17, 49);\n        ctBytes = encBytes.slice(49);\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encBytes.length <= 17) {\n          // 1 + 16 + ctLength\n          return null;\n        }\n\n        ivBytes = encBytes.slice(1, 17);\n        ctBytes = encBytes.slice(17);\n        break;\n      default:\n        return null;\n    }\n\n    return await this.aesDecryptToBytes(\n      encType,\n      ctBytes.buffer,\n      ivBytes.buffer,\n      macBytes != null ? macBytes.buffer : null,\n      key\n    );\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Helpers\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = await this.getKeyForEncryption(key);\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private async aesDecryptToUtf8(\n    encType: EncryptionType,\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): Promise<string> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  private async aesDecryptToBytes(\n    encType: EncryptionType,\n    data: ArrayBuffer,\n    iv: ArrayBuffer,\n    mac: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForEncryption(key);\n    const theKey = await this.resolveLegacyKey(encType, keyForEnc);\n\n    if (theKey.macKey != null && mac == null) {\n      return null;\n    }\n\n    if (theKey.encType !== encType) {\n      return null;\n    }\n\n    if (theKey.macKey != null && mac != null) {\n      const macData = new Uint8Array(iv.byteLength + data.byteLength);\n      macData.set(new Uint8Array(iv), 0);\n      macData.set(new Uint8Array(data), iv.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        theKey.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n      if (!macsMatch) {\n        this.logService.error(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n  }\n\n  private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    return await this.getKey();\n  }\n\n  private async resolveLegacyKey(\n    encType: EncryptionType,\n    key: SymmetricCryptoKey\n  ): Promise<SymmetricCryptoKey> {\n    if (\n      encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      // Old encrypt-then-mac scheme, make a new key\n      let legacyKey = await this.stateService.getLegacyEtmKey();\n      if (legacyKey == null) {\n        legacyKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n        await this.stateService.setLegacyEtmKey(legacyKey);\n      }\n      return legacyKey;\n    }\n\n    return key;\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EEFLongWordList.length);\n      hashNumber = hashNumber.divide(EEFLongWordList.length);\n      phrase.push(EEFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  private baseUrl: string;\n  private webVaultUrl: string;\n  private apiUrl: string;\n  private identityUrl: string;\n  private iconsUrl: string;\n  private notificationsUrl: string;\n  private eventsUrl: string;\n  private keyConnectorUrl: string;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount.subscribe(async () => {\n      await this.setUrlsFromStorage();\n    });\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/eventData\";\nimport { EventRequest } from \"../models/request/eventRequest\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/encString\";\nimport { CardView } from \"../view/cardView\";\n\nexport class Card {\n  static template(): Card {\n    const req = new Card();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: Card, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: Card, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/encString\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/fieldView\";\n\nexport class Field {\n  static template(): Field {\n    const req = new Field();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: Field, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: Field, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identityView\";\n\nexport class Identity {\n  static template(): Identity {\n    const req = new Identity();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: Identity, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: Identity, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/encString\";\nimport { LoginUri as LoginUriDomain } from \"../domain/loginUri\";\nimport { LoginUriView } from \"../view/loginUriView\";\n\nexport class LoginUri {\n  static template(): LoginUri {\n    const req = new LoginUri();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUri, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUri, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/loginView\";\n\nimport { LoginUri } from \"./loginUri\";\n\nexport class Login {\n  static template(): Login {\n    const req = new Login();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: Login, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUri.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: Login, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUri.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUri[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUri(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secureNote\";\nimport { SecureNoteView } from \"../view/secureNoteView\";\n\nexport class SecureNote {\n  static template(): SecureNote {\n    const req = new SecureNote();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNote, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNote, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/encString\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { SecureNote } from \"./secureNote\";\n\nexport class Cipher {\n  static template(): Cipher {\n    const req = new Cipher();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: Cipher, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => Field.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = Login.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNote.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = Card.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = Identity.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: Cipher, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => Field.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = Login.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = Card.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: Field[];\n  login: Login;\n  secureNote: SecureNote;\n  card: Card;\n  identity: Identity;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new Field(f));\n      } else {\n        this.fields = o.fields.map((f) => new Field(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new Login(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipherView\";\n\nimport { Cipher } from \"./cipher\";\n\nexport class CipherWithIds extends Cipher {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/encString\";\nimport { CollectionView } from \"../view/collectionView\";\n\nexport class Collection {\n  static template(): Collection {\n    const req = new Collection();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: Collection, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: Collection, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collectionView\";\n\nimport { Collection } from \"./collection\";\n\nexport class CollectionWithId extends Collection {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/eventView\";\n\nexport class Event {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n  }\n}\n","import { FolderData } from \"../data/folderData\";\nimport { FolderView } from \"../view/folderView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      alreadyEncrypted,\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n}\n","import { EncString } from \"../domain/encString\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nexport class Folder {\n  static template(): Folder {\n    const req = new Folder();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: Folder, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: Folder, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folderView\";\n\nimport { Folder } from \"./folder\";\n\nexport class FolderWithId extends Folder {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIds as CipherExport } from \"../models/export/cipherWithIds\";\nimport { CollectionWithId as CollectionExport } from \"../models/export/collectionWithId\";\nimport { Event } from \"../models/export/event\";\nimport { FolderWithId as FolderExport } from \"../models/export/folderWithId\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { EventView } from \"../models/view/eventView\";\nimport { FolderView } from \"../models/view/folderView\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = 100000;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new Event(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecrypted().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAll().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((collections) => {\n        const collectionPromises: any = [];\n        if (collections != null && collections.data != null && collections.data.length > 0) {\n          collections.data.forEach((c) => {\n            const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n            collectionPromises.push(\n              collection.decrypt().then((decCol) => {\n                decCollections.push(decCol);\n              })\n            );\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n        const cipherPromises: any = [];\n        if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n          ciphers.data\n            .filter((c) => c.deletedDate === null)\n            .forEach((c) => {\n              const cipher = new Cipher(new CipherData(c));\n              cipherPromises.push(\n                cipher.decrypt().then((decCipher) => {\n                  decCiphers.push(decCipher);\n                })\n              );\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\n\nexport class BitwardenFileUploadService {\n  constructor(private apiService: ApiService) {}\n\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachmentUploadDataResponse\";\nimport { SendFileUploadDataResponse } from \"../models/response/sendFileUploadDataResponse\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService(apiService);\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { FolderResponse } from \"../response/folderResponse\";\n\nexport class FolderData {\n  id: string;\n  userId: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse, userId: string) {\n    this.userId = userId;\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService as FolderServiceAbstraction } from \"../abstractions/folder.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { Folder } from \"../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { TreeNode } from \"../models/domain/treeNode\";\nimport { FolderRequest } from \"../models/request/folderRequest\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport { FolderView } from \"../models/view/folderView\";\n\nconst NestingDelimiter = \"/\";\n\nexport class FolderService implements FolderServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n  }\n\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = await this.stateService.getEncryptedFolders();\n    // eslint-disable-next-line\n    if (folders == null || !folders.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Folder(folders[id]);\n  }\n\n  async getAll(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<FolderView[]> {\n    const decryptedFolders = await this.stateService.getDecryptedFolders();\n    if (decryptedFolders != null) {\n      return decryptedFolders;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const decFolders: FolderView[] = [];\n    const promises: Promise<any>[] = [];\n    const folders = await this.getAll();\n    folders.forEach((folder) => {\n      promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n    });\n\n    await Promise.all(promises);\n    decFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decFolders.push(noneFolder);\n\n    await this.stateService.setDecryptedFolders(decFolders);\n    return decFolders;\n  }\n\n  async getAllNested(): Promise<TreeNode<FolderView>[]> {\n    const folders = await this.getAllDecrypted();\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n\n  async saveWithServer(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.apiService.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.apiService.putFolder(folder.id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new FolderData(response, userId);\n    await this.upsert(data);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<any> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<any> {\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedFolders(null, { userId: userId });\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.stateService.setDecryptedFolders(null);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteFolder(id);\n    await this.delete(id);\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keysRequest\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/setKeyConnectorKeyRequest\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/keyConnectorUserKeyRequest\";\nimport { KeysRequest } from \"../models/request/keysRequest\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.logService.error(e);\n      throw new Error(\"Unable to reach key connector\");\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      throw new Error(\"Unable to reach key connector\");\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./baseResponse\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync.service\";\nimport { VaultTimeoutService } from \"../abstractions/vaultTimeout.service\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: () => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback();\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    if (await this.stateService.getIsAuthenticated()) {\n      const locked = await this.vaultTimeoutService.isLocked();\n      return !locked;\n    }\n    return false;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { OrganizationData } from \"../data/organizationData\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return this.isAdmin || this.permissions.accessEventLogs;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return this.isAdmin || this.permissions.manageGroups;\n  }\n\n  get canManageSso() {\n    return this.isAdmin || this.permissions.manageSso;\n  }\n\n  get canManagePolicies() {\n    return this.isAdmin || this.permissions.managePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n}\n","import { OrganizationService as OrganizationServiceAbstraction } from \"../abstractions/organization.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { Organization } from \"../models/domain/organization\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Organization> {\n    const organizations = await this.stateService.getOrganizations();\n    // eslint-disable-next-line\n    if (organizations == null || !organizations.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Organization(organizations[id]);\n  }\n\n  async getByIdentifier(identifier: string): Promise<Organization> {\n    const organizations = await this.getAll();\n    if (organizations == null || organizations.length === 0) {\n      return null;\n    }\n\n    return organizations.find((o) => o.identifier === identifier);\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizations = await this.stateService.getOrganizations({ userId: userId });\n    const response: Organization[] = [];\n    for (const id in organizations) {\n      // eslint-disable-next-line\n      if (organizations.hasOwnProperty(id) && !organizations[id].isProviderUser) {\n        response.push(new Organization(organizations[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(organizations: { [id: string]: OrganizationData }) {\n    return await this.stateService.setOrganizations(organizations);\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const orgs = await this.getAll();\n    return orgs.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  async hasOrganizations(userId?: string): Promise<boolean> {\n    const organizations = await this.getAll(userId);\n    return organizations.length > 0;\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EEFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/encString\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/passwordGeneratorPolicyOptions\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: any): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EEFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EEFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = DefaultOptions;\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: any\n  ): Promise<[any, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await this.policyService.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<any> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policyResponse\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policyData\";\n\nimport Domain from \"./domainBase\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domainBase\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"../abstractions/policy.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { MasterPasswordPolicyOptions } from \"../models/domain/masterPasswordPolicyOptions\";\nimport { Organization } from \"../models/domain/organization\";\nimport { Policy } from \"../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../models/domain/resetPasswordPolicyOptions\";\nimport { ListResponse } from \"../models/response/listResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\n\nexport class PolicyService implements PolicyServiceAbstraction {\n  policyCache: Policy[];\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private apiService: ApiService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedPolicies(null);\n  }\n\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        // eslint-disable-next-line\n        if (diskPolicies.hasOwnProperty(id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  async getPolicyForOrganization(policyType: PolicyType, organizationId: string): Promise<Policy> {\n    const org = await this.organizationService.get(organizationId);\n    if (org?.isProviderUser) {\n      const orgPolicies = await this.apiService.getPolicies(organizationId);\n      const policy = orgPolicies.data.find((p) => p.organizationId === organizationId);\n\n      if (policy == null) {\n        return null;\n      }\n\n      return new Policy(new PolicyData(policy));\n    }\n\n    const policies = await this.getAll(policyType);\n    return policies.find((p) => p.organizationId === organizationId);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.apiService.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.mapPoliciesFromToken(response);\n    return this.getMasterPasswordPolicyOptions(policies);\n  }\n\n  async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n    let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n    if (policies == null) {\n      policies = await this.getAll(PolicyType.MasterPassword);\n    } else {\n      policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n    }\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new MasterPasswordPolicyOptions();\n      }\n\n      if (\n        currentPolicy.data.minComplexity != null &&\n        currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n      ) {\n        enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.requireUpper) {\n        enforcedOptions.requireUpper = true;\n      }\n\n      if (currentPolicy.data.requireLower) {\n        enforcedOptions.requireLower = true;\n      }\n\n      if (currentPolicy.data.requireNumbers) {\n        enforcedOptions.requireNumbers = true;\n      }\n\n      if (currentPolicy.data.requireSpecial) {\n        enforcedOptions.requireSpecial = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n    const organizations = await this.organizationService.getAll(userId);\n    let filteredPolicies;\n\n    if (policyFilter != null) {\n      filteredPolicies = policies.filter((p) => p.enabled && policyFilter(p));\n    } else {\n      filteredPolicies = policies.filter((p) => p.enabled);\n    }\n\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        !this.isExcemptFromPolicies(o, policyType) &&\n        policySet.has(o.id)\n    );\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/providerData\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private searchableMinLength = 2;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    if ([\"zh-CN\", \"zh-TW\"].indexOf(i18nService.locale) !== -1) {\n      this.searchableMinLength = 1;\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.logService.time(\"search indexing\");\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", { boost: 10 });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.timeEnd(\"search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = query.trim().toLowerCase();\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = query.trim().toLowerCase();\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = query.trim().toLocaleLowerCase();\n\n    return sends.filter((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        return true;\n      }\n      if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n    });\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n}\n","import { SendFileApi } from \"../api/sendFileApi\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.key = data.key;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/sendTextApi\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/sendResponse\";\n\nimport { SendFileData } from \"./sendFileData\";\nimport { SendTextData } from \"./sendTextData\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse, userId?: string) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.userId = userId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFileData } from \"../data/sendFileData\";\nimport { SendFileView } from \"../view/sendFileView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/sendTextData\";\nimport { SendTextView } from \"../view/sendTextView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SymmetricCryptoKey } from \"./symmetricCryptoKey\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      alreadyEncrypted,\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/sendData\";\nimport { SendView } from \"../view/sendView\";\n\nimport Domain from \"./domainBase\";\nimport { EncString } from \"./encString\";\nimport { SendFile } from \"./sendFile\";\nimport { SendText } from \"./sendText\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  userId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData, alreadyEncrypted = false) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        userId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      alreadyEncrypted,\n      [\"id\", \"accessId\", \"userId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text, alreadyEncrypted);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file, alreadyEncrypted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    let cryptoService: CryptoService;\n    const containerService = (Utils.global as any).bitwardenContainerService;\n    if (containerService) {\n      cryptoService = containerService.getCryptoService();\n    } else {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/sendFileApi\";\nimport { SendTextApi } from \"../api/sendTextApi\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/sendData\";\nimport { EncArrayBuffer } from \"../models/domain/encArrayBuffer\";\nimport { EncString } from \"../models/domain/encString\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/sendFile\";\nimport { SendText } from \"../models/domain/sendText\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { SendRequest } from \"../models/request/sendRequest\";\nimport { ErrorResponse } from \"../models/response/errorResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\nimport { SendView } from \"../models/view/sendView\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        100000\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const userId = await this.stateService.getUserId();\n    const data = new SendData(response, userId);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nconst Keys = {\n  settingsPrefix: \"settings_\",\n  equivalentDomains: \"equivalentDomains\",\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setSettings(null);\n  }\n\n  getEquivalentDomains(): Promise<any> {\n    return this.getSettingsKey(Keys.equivalentDomains);\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n\n  // Helpers\n\n  private async getSettings(): Promise<any> {\n    const settings = await this.stateService.getSettings();\n    if (settings == null) {\n      // eslint-disable-next-line\n      const userId = await this.stateService.getUserId();\n    }\n    return settings;\n  }\n\n  private async getSettingsKey(key: string): Promise<any> {\n    const settings = await this.getSettings();\n    if (settings != null && settings[key]) {\n      return settings[key];\n    }\n    return null;\n  }\n\n  private async setSettingsKey(key: string, value: any): Promise<void> {\n    let settings = await this.getSettings();\n    if (!settings) {\n      settings = {};\n    }\n\n    settings[key] = value;\n    await this.stateService.setSettings(settings);\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Account } from \"./account\";\nimport { GlobalState } from \"./globalState\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountData } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/encString\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\nimport { WindowState } from \"../models/domain/windowState\";\nimport { CipherView } from \"../models/view/cipherView\";\nimport { CollectionView } from \"../models/view/collectionView\";\nimport { FolderView } from \"../models/view/folderView\";\nimport { SendView } from \"../models/view/sendView\";\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  activeAccount = new BehaviorSubject<string>(null);\n\n  protected state: State<TGlobalState, TAccount> = new State<TGlobalState, TAccount>(\n    this.createGlobals()\n  );\n\n  private hasBeenInited = false;\n\n  private accountDiskCache: Map<string, TAccount>;\n\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    this.accountDiskCache = new Map<string, TAccount>();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    this.state.authenticatedAccounts =\n      (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n    for (const i in this.state.authenticatedAccounts) {\n      if (i != null) {\n        await this.syncAccountFromDisk(this.state.authenticatedAccounts[i]);\n      }\n    }\n    const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n    if (storedActiveUser != null) {\n      this.state.activeUserId = storedActiveUser;\n    }\n    await this.pushAccounts();\n    this.activeAccount.next(this.state.activeUserId);\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    this.state.accounts[userId] = this.createAccount();\n    const diskAccount = await this.getAccountFromDisk({ userId: userId });\n    this.state.accounts[userId].profile = diskAccount.profile;\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    this.state.authenticatedAccounts.push(account.profile.userId);\n    await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    this.state.accounts[account.profile.userId] = account;\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccount.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    this.state.activeUserId = userId;\n    await this.storageService.save(keys.activeUserId, userId);\n    this.activeAccount.next(this.state.activeUserId);\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, this.defaultInMemoryOptions);\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === this.state.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricLocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.settings\n        ?.biometricLocked ?? false\n    );\n  }\n\n  async setBiometricLocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.biometricLocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    if (account.profile.hasPremiumPersonally) {\n      return true;\n    }\n\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(`${options.userId}${partialKeys.autoKey}`, options);\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  async getDecodedToken(options?: StorageOptions): Promise<any> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.decodedToken;\n  }\n\n  async setDecodedToken(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.decodedToken = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedFolders(options?: StorageOptions): Promise<FolderView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.folders?.decrypted;\n  }\n\n  async setDecryptedFolders(value: FolderView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.folders.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.organizationKeys?.decrypted;\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.organizationKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.privateKey?.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.providerKeys?.decrypted;\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.providerKeys.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.email = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableGravitars(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableGravitars ?? false\n    );\n  }\n\n  async setEnableGravitars(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableGravitars = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if (this.state.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))?.profile\n        ?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLegacyEtmKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.legacyEtmKey;\n  }\n\n  async setLegacyEtmKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.legacyEtmKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n  async setLocalData(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLoginRedirect(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.loginRedirect;\n  }\n\n  async setLoginRedirect(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.loginRedirect = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (await this.getGlobals(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(globals, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getSettings(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected getGlobalsFromMemory(): TGlobalState {\n    return this.state.globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected saveGlobalsToMemory(globals: TGlobalState): void {\n    this.state.globals = globals;\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected getAccountFromMemory(options: StorageOptions): TAccount {\n    if (this.state.accounts == null) {\n      return null;\n    }\n    return this.state.accounts[this.getUserIdFromMemory(options)];\n  }\n\n  protected getUserIdFromMemory(options: StorageOptions): string {\n    return options?.userId != null\n      ? this.state.accounts[options.userId]?.profile?.userId\n      : this.state.activeUserId;\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && this.state.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      this.state.accounts[account.profile.userId] = account;\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<any>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    if (this.state?.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      this.accounts.next(null);\n      return;\n    }\n\n    this.accounts.next(this.state.accounts);\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected get defaultInMemoryOptions(): StorageOptions {\n    return { storageLocation: StorageLocation.Memory, userId: this.state.activeUserId };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: this.state.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: this.state.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(\n    userId: string = this.state.activeUserId\n  ): Promise<void> {\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected removeAccountFromMemory(userId: string = this.state.activeUserId): void {\n    delete this.state.accounts[userId];\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(userId);\n    }\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in this.state.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected clearDecryptedDataForActiveUser() {\n    const userId = this.state.activeUserId;\n    if (userId == null || this.state?.accounts[userId]?.data == null) {\n      return;\n    }\n    this.state.accounts[userId].data = new AccountData();\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string) {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    const index = this.state.authenticatedAccounts.indexOf(userId);\n    if (index > -1) {\n      this.state.authenticatedAccounts.splice(index, 1);\n      await this.storageService.save(keys.authenticatedAccounts, this.state.authenticatedAccounts);\n    }\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    if (this.state.accounts == null || Object.keys(this.state.accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in this.state.accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? this.defaultInMemoryOptions\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identityTokenResponse\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    const storedToken = await this.stateService.getDecodedToken();\n    if (token === null && storedToken != null) {\n      return storedToken;\n    }\n\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getPremium(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.premium === \"undefined\") {\n      return false;\n    }\n\n    return decoded.premium as boolean;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { StorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { EventData } from \"../models/data/eventData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { Account, AccountSettings } from \"../models/domain/account\";\nimport { EnvironmentUrls } from \"../models/domain/environmentUrls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generatedPasswordHistory\";\nimport { GlobalState } from \"../models/domain/globalState\";\nimport { StorageOptions } from \"../models/domain/storageOptions\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableGravatars: \"enableGravatars\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: StorageService,\n    protected secureStorageService: StorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricLocked: null,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      enableGravitars:\n        (await this.get<boolean>(v1Keys.enableGravatars)) ??\n        defaultAccount.settings.enableGravitars,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      },\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings: userId == null ? null : await this.get<any>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissionsApi\";\nimport { ProfileOrganizationResponse } from \"../response/profileOrganizationResponse\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profileProviderResponse\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { OrganizationService } from \"../abstractions/organization.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { ProviderService } from \"../abstractions/provider.service\";\nimport { SendService } from \"../abstractions/send.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../abstractions/sync.service\";\nimport { CipherData } from \"../models/data/cipherData\";\nimport { CollectionData } from \"../models/data/collectionData\";\nimport { FolderData } from \"../models/data/folderData\";\nimport { OrganizationData } from \"../models/data/organizationData\";\nimport { PolicyData } from \"../models/data/policyData\";\nimport { ProviderData } from \"../models/data/providerData\";\nimport { SendData } from \"../models/data/sendData\";\nimport { CipherResponse } from \"../models/response/cipherResponse\";\nimport { CollectionDetailsResponse } from \"../models/response/collectionResponse\";\nimport { DomainsResponse } from \"../models/response/domainsResponse\";\nimport { FolderResponse } from \"../models/response/folderResponse\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notificationResponse\";\nimport { PolicyResponse } from \"../models/response/policyResponse\";\nimport { ProfileResponse } from \"../models/response/profileResponse\";\nimport { SendResponse } from \"../models/response/sendResponse\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: PolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    const userId = await this.stateService.getUserId();\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(userId, response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(userId, response.ciphers);\n      await this.syncSends(userId, response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.apiService.getFolder(notification.id);\n          if (remoteFolder != null) {\n            const userId = await this.stateService.getUserId();\n            await this.folderService.upsert(new FolderData(remoteFolder, userId));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getCipher(notification.id);\n          if (remoteCipher != null) {\n            const userId = await this.stateService.getUserId();\n            await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            const userId = await this.stateService.getUserId();\n            await this.sendService.upsert(new SendData(remoteSend, userId));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.save(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(userId: string, response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f, userId);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(userId: string, response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c, userId);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(userId: string, response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s, userId);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  async isAutoCopyEnabled(): Promise<boolean> {\n    return !(await this.stateService.getDisableAutoTotpCopy());\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../abstractions/userVerification.service\";\nimport { VerificationType } from \"../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../models/request/account/verifyOTPRequest\";\nimport { SecretVerificationRequest } from \"../models/request/secretVerificationRequest\";\nimport { Verification } from \"../types/verification\";\n\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.apiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.apiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPassRequired\"));\n      }\n    }\n  }\n}\n","import { CipherService } from \"../abstractions/cipher.service\";\nimport { CollectionService } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { FolderService } from \"../abstractions/folder.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { PolicyService } from \"../abstractions/policy.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../abstractions/vaultTimeout.service\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PolicyType } from \"../enums/policyType\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  // Keys aren't stored for a device that is locked or logged out.\n  async isLocked(userId?: string): Promise<boolean> {\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    return !(await this.cryptoService.hasKeyInMemory(userId));\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(allowSoftLock = false, userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setBiometricLocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.folderService.clearCache(userId);\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(userId);\n    }\n  }\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n\n  private async isLoggedOut(userId?: string): Promise<boolean> {\n    return !(await this.stateService.getIsAuthenticated({ userId: userId }));\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    if (await this.isLoggedOut(userId)) {\n      return false;\n    }\n\n    if (await this.isLocked(userId)) {\n      return false;\n    }\n\n    const vaultTimeout = await this.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(true, userId);\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decryptParameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetricCryptoKey\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private isIE: boolean;\n  private isOldSafari: boolean;\n\n  constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.isIE = platformUtilsService.isIE();\n    const ua = win.navigator.userAgent;\n    this.isOldSafari =\n      platformUtilsService.isSafari() &&\n      (ua.indexOf(\" Version/10.\") > -1 || ua.indexOf(\" Version/9.\") > -1);\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    if (this.isIE || this.isOldSafari) {\n      const forgeLen = algorithm === \"sha256\" ? 32 : 64;\n      const passwordBytes = this.toByteString(password);\n      const saltBytes = this.toByteString(salt);\n      const derivedKeyBytes = (forge as any).pbkdf2(\n        passwordBytes,\n        saltBytes,\n        iterations,\n        forgeLen,\n        algorithm\n      );\n      return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n    }\n\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if ((this.isIE && algorithm === \"sha1\") || algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    if (this.isIE && algorithm === \"sha512\") {\n      const hmac = (forge as any).hmac.create();\n      const keyBytes = this.toByteString(key);\n      const valueBytes = this.toByteString(value);\n      hmac.start(algorithm, keyBytes);\n      hmac.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n    }\n\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = (forge as any).hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = (forge as any).hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n    const decipher = (forge as any).cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString(\"utf8\");\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"jslib-common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import { BroadcasterService as BroadcasterServiceAbstraction } from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n  send(message: any, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: any) => any) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"jslib-common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"jslib-common/abstractions/stateMigration.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { Account } from \"jslib-common/models/domain/account\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateService } from \"jslib-common/services/state.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { VaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { AuthGuardService } from \"./auth-guard.service\";\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\nimport { ValidationService } from \"./validation.service\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    { provide: \"WINDOW\", useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    ValidationService,\n    AuthGuardService,\n    UnauthGuardService,\n    LockGuardService,\n    ModalService,\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [StorageServiceAbstraction],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useFactory: (\n        tokenService: TokenServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction\n      ) =>\n        new ApiService(\n          tokenService,\n          platformUtilsService,\n          environmentService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useFactory: (\n        apiService: ApiServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        cipherService: CipherServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        sendService: SendServiceAbstraction,\n        logService: LogService,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction,\n        organizationService: OrganizationServiceAbstraction,\n        providerService: ProviderServiceAbstraction\n      ) =>\n        new SyncService(\n          apiService,\n          settingsService,\n          folderService,\n          cipherService,\n          cryptoService,\n          collectionService,\n          messagingService,\n          policyService,\n          sendService,\n          logService,\n          keyConnectorService,\n          stateService,\n          organizationService,\n          providerService,\n          async (expired: boolean) => messagingService.send(\"logout\", { expired: expired })\n        ),\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        ProviderServiceAbstraction,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useFactory: (\n        cipherService: CipherServiceAbstraction,\n        folderService: FolderServiceAbstraction,\n        collectionService: CollectionServiceAbstraction,\n        cryptoService: CryptoServiceAbstraction,\n        platformUtilsService: PlatformUtilsServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        searchService: SearchServiceAbstraction,\n        tokenService: TokenServiceAbstraction,\n        policyService: PolicyServiceAbstraction,\n        keyConnectorService: KeyConnectorServiceAbstraction,\n        stateService: StateServiceAbstraction\n      ) =>\n        new VaultTimeoutService(\n          cipherService,\n          folderService,\n          collectionService,\n          cryptoService,\n          platformUtilsService,\n          messagingService,\n          searchService,\n          tokenService,\n          policyService,\n          keyConnectorService,\n          stateService,\n          null,\n          async (userId?: string) =>\n            messagingService.send(\"logout\", { expired: false, userId: userId })\n        ),\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction,\n        logService: LogService,\n        stateMigrationService: StateMigrationServiceAbstraction\n      ) =>\n        new StateService(\n          storageService,\n          secureStorageService,\n          logService,\n          stateMigrationService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [\n        StorageServiceAbstraction,\n        \"SECURE_STORAGE\",\n        LogService,\n        StateMigrationServiceAbstraction,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useFactory: (\n        storageService: StorageServiceAbstraction,\n        secureStorageService: StorageServiceAbstraction\n      ) =>\n        new StateMigrationService(\n          storageService,\n          secureStorageService,\n          new StateFactory(GlobalState, Account)\n        ),\n      deps: [StorageServiceAbstraction, \"SECURE_STORAGE\"],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useFactory: (\n        syncService: SyncServiceAbstraction,\n        appIdService: AppIdServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        vaultTimeoutService: VaultTimeoutServiceAbstraction,\n        environmentService: EnvironmentServiceAbstraction,\n        messagingService: MessagingServiceAbstraction,\n        logService: LogService,\n        stateService: StateServiceAbstraction\n      ) =>\n        new NotificationsService(\n          syncService,\n          appIdService,\n          apiService,\n          vaultTimeoutService,\n          environmentService,\n          async () => messagingService.send(\"logout\", { expired: true }),\n          logService,\n          stateService\n        ),\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        VaultTimeoutServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [\"WINDOW\", PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, ApiServiceAbstraction],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n","import { CryptoService } from \"../abstractions/crypto.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService) {}\n\n  // deprecated, use attachToGlobal instead\n  attachToWindow(win: any) {\n    this.attachToGlobal(win);\n  }\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  getCryptoService(): CryptoService {\n    return this.cryptoService;\n  }\n}\n","import { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SystemService as SystemServiceAbstraction } from \"../abstractions/system.service\";\nimport { Utils } from \"../misc/utils\";\n\nexport class SystemService implements SystemServiceAbstraction {\n  private reloadInterval: any = null;\n  private clearClipboardTimeout: any = null;\n  private clearClipboardTimeoutFunction: () => Promise<any> = null;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private reloadCallback: () => Promise<void> = null,\n    private stateService: StateService\n  ) {}\n\n  async startProcessReload(): Promise<void> {\n    if (\n      (await this.stateService.getDecryptedPinProtected()) != null ||\n      (await this.stateService.getBiometricLocked()) ||\n      this.reloadInterval != null\n    ) {\n      return;\n    }\n    this.cancelProcessReload();\n    this.reloadInterval = setInterval(async () => {\n      let doRefresh = false;\n      const lastActive = await this.stateService.getLastActive();\n      if (lastActive != null) {\n        const diffSeconds = new Date().getTime() - lastActive;\n        // Don't refresh if they are still active in the window\n        doRefresh = diffSeconds >= 5000;\n      }\n      const biometricLockedFingerprintValidated =\n        (await this.stateService.getBiometricFingerprintValidated()) &&\n        (await this.stateService.getBiometricLocked());\n      if (doRefresh && !biometricLockedFingerprintValidated) {\n        clearInterval(this.reloadInterval);\n        this.reloadInterval = null;\n        this.messagingService.send(\"reloadProcess\");\n        if (this.reloadCallback != null) {\n          await this.reloadCallback();\n        }\n      }\n    }, 10000);\n  }\n\n  cancelProcessReload(): void {\n    if (this.reloadInterval != null) {\n      clearInterval(this.reloadInterval);\n      this.reloadInterval = null;\n    }\n  }\n\n  async clearClipboard(clipboardValue: string, timeoutMs: number = null): Promise<void> {\n    if (this.clearClipboardTimeout != null) {\n      clearTimeout(this.clearClipboardTimeout);\n      this.clearClipboardTimeout = null;\n    }\n    if (Utils.isNullOrWhitespace(clipboardValue)) {\n      return;\n    }\n    await this.stateService.getClearClipboard().then((clearSeconds) => {\n      if (clearSeconds == null) {\n        return;\n      }\n      if (timeoutMs == null) {\n        timeoutMs = clearSeconds * 1000;\n      }\n      this.clearClipboardTimeoutFunction = async () => {\n        const clipboardValueNow = await this.platformUtilsService.readFromClipboard();\n        if (clipboardValue === clipboardValueNow) {\n          this.platformUtilsService.copyToClipboard(\"\", { clearing: true });\n        }\n      };\n      this.clearClipboardTimeout = setTimeout(async () => {\n        await this.clearPendingClipboard();\n      }, timeoutMs);\n    });\n  }\n\n  async clearPendingClipboard() {\n    if (this.clearClipboardTimeoutFunction != null) {\n      await this.clearClipboardTimeoutFunction();\n      this.clearClipboardTimeoutFunction = null;\n    }\n  }\n}\n","export class BrowserComponentState {\n  scrollY: number;\n  searchText: string;\n}\n","import { CipherType } from \"jslib-common/enums/cipherType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { CollectionView } from \"jslib-common/models/view/collectionView\";\nimport { FolderView } from \"jslib-common/models/view/folderView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserGroupingsComponentState extends BrowserComponentState {\n  favoriteCiphers: CipherView[];\n  noFolderCiphers: CipherView[];\n  ciphers: CipherView[];\n  collectionCounts: Map<string, number>;\n  folderCounts: Map<string, number>;\n  typeCounts: Map<CipherType, number>;\n  folders: FolderView[];\n  collections: CollectionView[];\n  deletedCount: number;\n}\n","import { SendType } from \"jslib-common/enums/sendType\";\nimport { SendView } from \"jslib-common/models/view/sendView\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\n\nexport class BrowserSendComponentState extends BrowserComponentState {\n  sends: SendView[];\n  typeCounts: Map<SendType, number>;\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"jslib-common/models/domain/account\";\n\nimport { BrowserComponentState } from \"./browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"./browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"./browserSendComponentState\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout = -1; // On Restart\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n  groupings?: BrowserGroupingsComponentState;\n  send?: BrowserSendComponentState;\n  ciphers?: BrowserComponentState;\n  sendType?: BrowserComponentState;\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n    this.groupings = init?.groupings ?? new BrowserGroupingsComponentState();\n    this.send = init?.send ?? new BrowserSendComponentState();\n    this.ciphers = init?.ciphers ?? new BrowserComponentState();\n    this.sendType = init?.sendType ?? new BrowserComponentState();\n  }\n}\n","export default class AutofillScript {\n  script: string[][] = [];\n  documentUUID: any = {};\n  properties: any = {};\n  options: any = {};\n  metadata: any = {};\n  autosubmit: any = null;\n\n  constructor(documentUUID: string) {\n    this.documentUUID = documentUUID;\n  }\n}\n","export class AutoFillConstants {\n  static readonly UsernameFieldNames: string[] = [\n    // English\n    \"username\",\n    \"user name\",\n    \"email\",\n    \"email address\",\n    \"e-mail\",\n    \"e-mail address\",\n    \"userid\",\n    \"user id\",\n    \"customer id\",\n    \"login id\",\n    // German\n    \"benutzername\",\n    \"benutzer name\",\n    \"email adresse\",\n    \"e-mail adresse\",\n    \"benutzerid\",\n    \"benutzer id\",\n  ];\n\n  static readonly PasswordFieldIgnoreList: string[] = [\n    \"onetimepassword\",\n    \"captcha\",\n    \"findanything\",\n    \"forgot\",\n  ];\n\n  static readonly ExcludedAutofillTypes: string[] = [\n    \"radio\",\n    \"checkbox\",\n    \"hidden\",\n    \"file\",\n    \"button\",\n    \"image\",\n    \"reset\",\n    \"search\",\n  ];\n}\n\nexport class CreditCardAutoFillConstants {\n  static readonly CardAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly CardAttributesExtended: string[] = [\n    ...CreditCardAutoFillConstants.CardAttributes,\n    \"label-right\",\n  ];\n\n  static readonly CardHolderFieldNames: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"name\",\n    \"nom\",\n  ];\n\n  static readonly CardHolderFieldNameValues: string[] = [\n    \"cc-name\",\n    \"card-name\",\n    \"cardholder-name\",\n    \"cardholder\",\n    \"tbName\",\n  ];\n\n  static readonly CardNumberFieldNames: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"number\",\n    \"cc\",\n    \"cc-no\",\n    \"card-no\",\n    \"credit-card\",\n    \"numero-carte\",\n    \"carte\",\n    \"carte-credit\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardNumberFieldNameValues: string[] = [\n    \"cc-number\",\n    \"cc-num\",\n    \"card-number\",\n    \"card-num\",\n    \"cc-no\",\n    \"card-no\",\n    \"numero-carte\",\n    \"num-carte\",\n    \"cb-num\",\n  ];\n\n  static readonly CardExpiryFieldNames: string[] = [\n    \"cc-exp\",\n    \"card-exp\",\n    \"cc-expiration\",\n    \"card-expiration\",\n    \"cc-ex\",\n    \"card-ex\",\n    \"card-expire\",\n    \"card-expiry\",\n    \"validite\",\n    \"expiration\",\n    \"expiry\",\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n    \"payment-cc-date\",\n  ];\n\n  static readonly CardExpiryFieldNameValues: string[] = [\n    \"mm-yy\",\n    \"mm-yyyy\",\n    \"yy-mm\",\n    \"yyyy-mm\",\n    \"expiration-date\",\n    \"payment-card-expiration\",\n  ];\n\n  static readonly ExpiryMonthFieldNames: string[] = [\n    \"exp-month\",\n    \"cc-exp-month\",\n    \"cc-month\",\n    \"card-month\",\n    \"cc-mo\",\n    \"card-mo\",\n    \"exp-mo\",\n    \"card-exp-mo\",\n    \"cc-exp-mo\",\n    \"card-expiration-month\",\n    \"expiration-month\",\n    \"cc-mm\",\n    \"cc-m\",\n    \"card-mm\",\n    \"card-m\",\n    \"card-exp-mm\",\n    \"cc-exp-mm\",\n    \"exp-mm\",\n    \"exp-m\",\n    \"expire-month\",\n    \"expire-mo\",\n    \"expiry-month\",\n    \"expiry-mo\",\n    \"card-expire-month\",\n    \"card-expire-mo\",\n    \"card-expiry-month\",\n    \"card-expiry-mo\",\n    \"mois-validite\",\n    \"mois-expiration\",\n    \"m-validite\",\n    \"m-expiration\",\n    \"expiry-date-field-month\",\n    \"expiration-date-month\",\n    \"expiration-date-mm\",\n    \"exp-mon\",\n    \"validity-mo\",\n    \"exp-date-mo\",\n    \"cb-date-mois\",\n    \"date-m\",\n  ];\n\n  static readonly ExpiryYearFieldNames: string[] = [\n    \"exp-year\",\n    \"cc-exp-year\",\n    \"cc-year\",\n    \"card-year\",\n    \"cc-yr\",\n    \"card-yr\",\n    \"exp-yr\",\n    \"card-exp-yr\",\n    \"cc-exp-yr\",\n    \"card-expiration-year\",\n    \"expiration-year\",\n    \"cc-yy\",\n    \"cc-y\",\n    \"card-yy\",\n    \"card-y\",\n    \"card-exp-yy\",\n    \"cc-exp-yy\",\n    \"exp-yy\",\n    \"exp-y\",\n    \"cc-yyyy\",\n    \"card-yyyy\",\n    \"card-exp-yyyy\",\n    \"cc-exp-yyyy\",\n    \"expire-year\",\n    \"expire-yr\",\n    \"expiry-year\",\n    \"expiry-yr\",\n    \"card-expire-year\",\n    \"card-expire-yr\",\n    \"card-expiry-year\",\n    \"card-expiry-yr\",\n    \"an-validite\",\n    \"an-expiration\",\n    \"annee-validite\",\n    \"annee-expiration\",\n    \"expiry-date-field-year\",\n    \"expiration-date-year\",\n    \"cb-date-ann\",\n    \"expiration-date-yy\",\n    \"expiration-date-yyyy\",\n    \"validity-year\",\n    \"exp-date-year\",\n    \"date-y\",\n  ];\n\n  static readonly CVVFieldNames: string[] = [\n    \"cvv\",\n    \"cvc\",\n    \"cvv2\",\n    \"cc-csc\",\n    \"cc-cvv\",\n    \"card-csc\",\n    \"card-cvv\",\n    \"cvd\",\n    \"cid\",\n    \"cvc2\",\n    \"cnv\",\n    \"cvn2\",\n    \"cc-code\",\n    \"card-code\",\n    \"code-securite\",\n    \"security-code\",\n    \"crypto\",\n    \"card-verif\",\n    \"verification-code\",\n    \"csc\",\n    \"ccv\",\n  ];\n\n  static readonly CardBrandFieldNames: string[] = [\n    \"cc-type\",\n    \"card-type\",\n    \"card-brand\",\n    \"cc-brand\",\n    \"cb-type\",\n  ];\n\n  // Each index represents a language. These three arrays should all be the same length.\n  // 0: English, 1: Danish, 2: German/Dutch, 3: French/Spanish/Italian, 4: Russian, 5: Portuguese\n  static readonly MonthAbbr = [\"mm\", \"mm\", \"mm\", \"mm\", \"mm\", \"mm\"];\n  static readonly YearAbbrShort = [\"yy\", \"åå\", \"jj\", \"aa\", \"гг\", \"rr\"];\n  static readonly YearAbbrLong = [\"yyyy\", \"åååå\", \"jjjj\", \"aa\", \"гггг\", \"rrrr\"];\n}\n\nexport class IdentityAutoFillConstants {\n  static readonly IdentityAttributes: string[] = [\n    \"autoCompleteType\",\n    \"data-stripe\",\n    \"htmlName\",\n    \"htmlID\",\n    \"label-tag\",\n    \"placeholder\",\n    \"label-left\",\n    \"label-top\",\n    \"data-recurly\",\n  ];\n\n  static readonly FullNameFieldNames: string[] = [\"name\", \"full-name\", \"your-name\"];\n\n  static readonly FullNameFieldNameValues: string[] = [\"full-name\", \"your-name\"];\n\n  static readonly TitleFieldNames: string[] = [\"honorific-prefix\", \"prefix\", \"title\"];\n\n  static readonly FirstnameFieldNames: string[] = [\n    // English\n    \"f-name\",\n    \"first-name\",\n    \"given-name\",\n    \"first-n\",\n    // German\n    \"vorname\",\n  ];\n\n  static readonly MiddlenameFieldNames: string[] = [\n    \"m-name\",\n    \"middle-name\",\n    \"additional-name\",\n    \"middle-initial\",\n    \"middle-n\",\n    \"middle-i\",\n  ];\n\n  static readonly LastnameFieldNames: string[] = [\n    // English\n    \"l-name\",\n    \"last-name\",\n    \"s-name\",\n    \"surname\",\n    \"family-name\",\n    \"family-n\",\n    \"last-n\",\n    // German\n    \"nachname\",\n    \"familienname\",\n  ];\n\n  static readonly EmailFieldNames: string[] = [\"e-mail\", \"email-address\"];\n\n  static readonly AddressFieldNames: string[] = [\n    \"address\",\n    \"street-address\",\n    \"addr\",\n    \"street\",\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly AddressFieldNameValues: string[] = [\n    \"mailing-addr\",\n    \"billing-addr\",\n    \"mail-addr\",\n    \"bill-addr\",\n  ];\n\n  static readonly Address1FieldNames: string[] = [\n    \"address-1\",\n    \"address-line-1\",\n    \"addr-1\",\n    \"street-1\",\n  ];\n\n  static readonly Address2FieldNames: string[] = [\n    \"address-2\",\n    \"address-line-2\",\n    \"addr-2\",\n    \"street-2\",\n  ];\n\n  static readonly Address3FieldNames: string[] = [\n    \"address-3\",\n    \"address-line-3\",\n    \"addr-3\",\n    \"street-3\",\n  ];\n\n  static readonly PostalCodeFieldNames: string[] = [\n    \"postal\",\n    \"zip\",\n    \"zip2\",\n    \"zip-code\",\n    \"postal-code\",\n    \"post-code\",\n    \"address-zip\",\n    \"address-postal\",\n    \"address-code\",\n    \"address-postal-code\",\n    \"address-zip-code\",\n  ];\n\n  static readonly CityFieldNames: string[] = [\n    \"city\",\n    \"town\",\n    \"address-level-2\",\n    \"address-city\",\n    \"address-town\",\n  ];\n\n  static readonly StateFieldNames: string[] = [\n    \"state\",\n    \"province\",\n    \"provence\",\n    \"address-level-1\",\n    \"address-state\",\n    \"address-province\",\n  ];\n\n  static readonly CountryFieldNames: string[] = [\n    \"country\",\n    \"country-code\",\n    \"country-name\",\n    \"address-country\",\n    \"address-country-name\",\n    \"address-country-code\",\n  ];\n\n  static readonly PhoneFieldNames: string[] = [\n    \"phone\",\n    \"mobile\",\n    \"mobile-phone\",\n    \"tel\",\n    \"telephone\",\n    \"phone-number\",\n  ];\n\n  static readonly UserNameFieldNames: string[] = [\"user-name\", \"user-id\", \"screen-name\"];\n\n  static readonly CompanyFieldNames: string[] = [\n    \"company\",\n    \"company-name\",\n    \"organization\",\n    \"organization-name\",\n  ];\n\n  static readonly IsoCountries: { [id: string]: string } = {\n    afghanistan: \"AF\",\n    \"aland islands\": \"AX\",\n    albania: \"AL\",\n    algeria: \"DZ\",\n    \"american samoa\": \"AS\",\n    andorra: \"AD\",\n    angola: \"AO\",\n    anguilla: \"AI\",\n    antarctica: \"AQ\",\n    \"antigua and barbuda\": \"AG\",\n    argentina: \"AR\",\n    armenia: \"AM\",\n    aruba: \"AW\",\n    australia: \"AU\",\n    austria: \"AT\",\n    azerbaijan: \"AZ\",\n    bahamas: \"BS\",\n    bahrain: \"BH\",\n    bangladesh: \"BD\",\n    barbados: \"BB\",\n    belarus: \"BY\",\n    belgium: \"BE\",\n    belize: \"BZ\",\n    benin: \"BJ\",\n    bermuda: \"BM\",\n    bhutan: \"BT\",\n    bolivia: \"BO\",\n    \"bosnia and herzegovina\": \"BA\",\n    botswana: \"BW\",\n    \"bouvet island\": \"BV\",\n    brazil: \"BR\",\n    \"british indian ocean territory\": \"IO\",\n    \"brunei darussalam\": \"BN\",\n    bulgaria: \"BG\",\n    \"burkina faso\": \"BF\",\n    burundi: \"BI\",\n    cambodia: \"KH\",\n    cameroon: \"CM\",\n    canada: \"CA\",\n    \"cape verde\": \"CV\",\n    \"cayman islands\": \"KY\",\n    \"central african republic\": \"CF\",\n    chad: \"TD\",\n    chile: \"CL\",\n    china: \"CN\",\n    \"christmas island\": \"CX\",\n    \"cocos (keeling) islands\": \"CC\",\n    colombia: \"CO\",\n    comoros: \"KM\",\n    congo: \"CG\",\n    \"congo, democratic republic\": \"CD\",\n    \"cook islands\": \"CK\",\n    \"costa rica\": \"CR\",\n    \"cote d'ivoire\": \"CI\",\n    croatia: \"HR\",\n    cuba: \"CU\",\n    cyprus: \"CY\",\n    \"czech republic\": \"CZ\",\n    denmark: \"DK\",\n    djibouti: \"DJ\",\n    dominica: \"DM\",\n    \"dominican republic\": \"DO\",\n    ecuador: \"EC\",\n    egypt: \"EG\",\n    \"el salvador\": \"SV\",\n    \"equatorial guinea\": \"GQ\",\n    eritrea: \"ER\",\n    estonia: \"EE\",\n    ethiopia: \"ET\",\n    \"falkland islands\": \"FK\",\n    \"faroe islands\": \"FO\",\n    fiji: \"FJ\",\n    finland: \"FI\",\n    france: \"FR\",\n    \"french guiana\": \"GF\",\n    \"french polynesia\": \"PF\",\n    \"french southern territories\": \"TF\",\n    gabon: \"GA\",\n    gambia: \"GM\",\n    georgia: \"GE\",\n    germany: \"DE\",\n    ghana: \"GH\",\n    gibraltar: \"GI\",\n    greece: \"GR\",\n    greenland: \"GL\",\n    grenada: \"GD\",\n    guadeloupe: \"GP\",\n    guam: \"GU\",\n    guatemala: \"GT\",\n    guernsey: \"GG\",\n    guinea: \"GN\",\n    \"guinea-bissau\": \"GW\",\n    guyana: \"GY\",\n    haiti: \"HT\",\n    \"heard island & mcdonald islands\": \"HM\",\n    \"holy see (vatican city state)\": \"VA\",\n    honduras: \"HN\",\n    \"hong kong\": \"HK\",\n    hungary: \"HU\",\n    iceland: \"IS\",\n    india: \"IN\",\n    indonesia: \"ID\",\n    \"iran, islamic republic of\": \"IR\",\n    iraq: \"IQ\",\n    ireland: \"IE\",\n    \"isle of man\": \"IM\",\n    israel: \"IL\",\n    italy: \"IT\",\n    jamaica: \"JM\",\n    japan: \"JP\",\n    jersey: \"JE\",\n    jordan: \"JO\",\n    kazakhstan: \"KZ\",\n    kenya: \"KE\",\n    kiribati: \"KI\",\n    \"republic of korea\": \"KR\",\n    \"south korea\": \"KR\",\n    \"democratic people's republic of korea\": \"KP\",\n    \"north korea\": \"KP\",\n    kuwait: \"KW\",\n    kyrgyzstan: \"KG\",\n    \"lao people's democratic republic\": \"LA\",\n    latvia: \"LV\",\n    lebanon: \"LB\",\n    lesotho: \"LS\",\n    liberia: \"LR\",\n    \"libyan arab jamahiriya\": \"LY\",\n    liechtenstein: \"LI\",\n    lithuania: \"LT\",\n    luxembourg: \"LU\",\n    macao: \"MO\",\n    macedonia: \"MK\",\n    madagascar: \"MG\",\n    malawi: \"MW\",\n    malaysia: \"MY\",\n    maldives: \"MV\",\n    mali: \"ML\",\n    malta: \"MT\",\n    \"marshall islands\": \"MH\",\n    martinique: \"MQ\",\n    mauritania: \"MR\",\n    mauritius: \"MU\",\n    mayotte: \"YT\",\n    mexico: \"MX\",\n    \"micronesia, federated states of\": \"FM\",\n    moldova: \"MD\",\n    monaco: \"MC\",\n    mongolia: \"MN\",\n    montenegro: \"ME\",\n    montserrat: \"MS\",\n    morocco: \"MA\",\n    mozambique: \"MZ\",\n    myanmar: \"MM\",\n    namibia: \"NA\",\n    nauru: \"NR\",\n    nepal: \"NP\",\n    netherlands: \"NL\",\n    \"netherlands antilles\": \"AN\",\n    \"new caledonia\": \"NC\",\n    \"new zealand\": \"NZ\",\n    nicaragua: \"NI\",\n    niger: \"NE\",\n    nigeria: \"NG\",\n    niue: \"NU\",\n    \"norfolk island\": \"NF\",\n    \"northern mariana islands\": \"MP\",\n    norway: \"NO\",\n    oman: \"OM\",\n    pakistan: \"PK\",\n    palau: \"PW\",\n    \"palestinian territory, occupied\": \"PS\",\n    panama: \"PA\",\n    \"papua new guinea\": \"PG\",\n    paraguay: \"PY\",\n    peru: \"PE\",\n    philippines: \"PH\",\n    pitcairn: \"PN\",\n    poland: \"PL\",\n    portugal: \"PT\",\n    \"puerto rico\": \"PR\",\n    qatar: \"QA\",\n    reunion: \"RE\",\n    romania: \"RO\",\n    \"russian federation\": \"RU\",\n    rwanda: \"RW\",\n    \"saint barthelemy\": \"BL\",\n    \"saint helena\": \"SH\",\n    \"saint kitts and nevis\": \"KN\",\n    \"saint lucia\": \"LC\",\n    \"saint martin\": \"MF\",\n    \"saint pierre and miquelon\": \"PM\",\n    \"saint vincent and grenadines\": \"VC\",\n    samoa: \"WS\",\n    \"san marino\": \"SM\",\n    \"sao tome and principe\": \"ST\",\n    \"saudi arabia\": \"SA\",\n    senegal: \"SN\",\n    serbia: \"RS\",\n    seychelles: \"SC\",\n    \"sierra leone\": \"SL\",\n    singapore: \"SG\",\n    slovakia: \"SK\",\n    slovenia: \"SI\",\n    \"solomon islands\": \"SB\",\n    somalia: \"SO\",\n    \"south africa\": \"ZA\",\n    \"south georgia and sandwich isl.\": \"GS\",\n    spain: \"ES\",\n    \"sri lanka\": \"LK\",\n    sudan: \"SD\",\n    suriname: \"SR\",\n    \"svalbard and jan mayen\": \"SJ\",\n    swaziland: \"SZ\",\n    sweden: \"SE\",\n    switzerland: \"CH\",\n    \"syrian arab republic\": \"SY\",\n    taiwan: \"TW\",\n    tajikistan: \"TJ\",\n    tanzania: \"TZ\",\n    thailand: \"TH\",\n    \"timor-leste\": \"TL\",\n    togo: \"TG\",\n    tokelau: \"TK\",\n    tonga: \"TO\",\n    \"trinidad and tobago\": \"TT\",\n    tunisia: \"TN\",\n    turkey: \"TR\",\n    turkmenistan: \"TM\",\n    \"turks and caicos islands\": \"TC\",\n    tuvalu: \"TV\",\n    uganda: \"UG\",\n    ukraine: \"UA\",\n    \"united arab emirates\": \"AE\",\n    \"united kingdom\": \"GB\",\n    \"united states\": \"US\",\n    \"united states outlying islands\": \"UM\",\n    uruguay: \"UY\",\n    uzbekistan: \"UZ\",\n    vanuatu: \"VU\",\n    venezuela: \"VE\",\n    vietnam: \"VN\",\n    \"virgin islands, british\": \"VG\",\n    \"virgin islands, u.s.\": \"VI\",\n    \"wallis and futuna\": \"WF\",\n    \"western sahara\": \"EH\",\n    yemen: \"YE\",\n    zambia: \"ZM\",\n    zimbabwe: \"ZW\",\n  };\n\n  static readonly IsoStates: { [id: string]: string } = {\n    alabama: \"AL\",\n    alaska: \"AK\",\n    \"american samoa\": \"AS\",\n    arizona: \"AZ\",\n    arkansas: \"AR\",\n    california: \"CA\",\n    colorado: \"CO\",\n    connecticut: \"CT\",\n    delaware: \"DE\",\n    \"district of columbia\": \"DC\",\n    \"federated states of micronesia\": \"FM\",\n    florida: \"FL\",\n    georgia: \"GA\",\n    guam: \"GU\",\n    hawaii: \"HI\",\n    idaho: \"ID\",\n    illinois: \"IL\",\n    indiana: \"IN\",\n    iowa: \"IA\",\n    kansas: \"KS\",\n    kentucky: \"KY\",\n    louisiana: \"LA\",\n    maine: \"ME\",\n    \"marshall islands\": \"MH\",\n    maryland: \"MD\",\n    massachusetts: \"MA\",\n    michigan: \"MI\",\n    minnesota: \"MN\",\n    mississippi: \"MS\",\n    missouri: \"MO\",\n    montana: \"MT\",\n    nebraska: \"NE\",\n    nevada: \"NV\",\n    \"new hampshire\": \"NH\",\n    \"new jersey\": \"NJ\",\n    \"new mexico\": \"NM\",\n    \"new york\": \"NY\",\n    \"north carolina\": \"NC\",\n    \"north dakota\": \"ND\",\n    \"northern mariana islands\": \"MP\",\n    ohio: \"OH\",\n    oklahoma: \"OK\",\n    oregon: \"OR\",\n    palau: \"PW\",\n    pennsylvania: \"PA\",\n    \"puerto rico\": \"PR\",\n    \"rhode island\": \"RI\",\n    \"south carolina\": \"SC\",\n    \"south dakota\": \"SD\",\n    tennessee: \"TN\",\n    texas: \"TX\",\n    utah: \"UT\",\n    vermont: \"VT\",\n    \"virgin islands\": \"VI\",\n    virginia: \"VA\",\n    washington: \"WA\",\n    \"west virginia\": \"WV\",\n    wisconsin: \"WI\",\n    wyoming: \"WY\",\n  };\n\n  static readonly IsoProvinces: { [id: string]: string } = {\n    alberta: \"AB\",\n    \"british columbia\": \"BC\",\n    manitoba: \"MB\",\n    \"new brunswick\": \"NB\",\n    \"newfoundland and labrador\": \"NL\",\n    \"nova scotia\": \"NS\",\n    ontario: \"ON\",\n    \"prince edward island\": \"PE\",\n    quebec: \"QC\",\n    saskatchewan: \"SK\",\n  };\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { FieldType } from \"jslib-common/enums/fieldType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { FieldView } from \"jslib-common/models/view/fieldView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport AutofillField from \"../models/autofillField\";\nimport AutofillPageDetails from \"../models/autofillPageDetails\";\nimport AutofillScript from \"../models/autofillScript\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport { AutofillService as AutofillServiceInterface } from \"./abstractions/autofill.service\";\nimport {\n  AutoFillConstants,\n  CreditCardAutoFillConstants,\n  IdentityAutoFillConstants,\n} from \"./autofillConstants\";\n\nexport default class AutofillService implements AutofillServiceInterface {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private totpService: TotpService,\n    private eventService: EventService,\n    private logService: LogService\n  ) {}\n\n  getFormsWithPasswordFields(pageDetails: AutofillPageDetails): any[] {\n    const formData: any[] = [];\n\n    const passwordFields = this.loadPasswordFields(pageDetails, true, true, false, false);\n    if (passwordFields.length === 0) {\n      return formData;\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const formPasswordFields = passwordFields.filter((pf) => formKey === pf.form);\n      if (formPasswordFields.length > 0) {\n        let uf = this.findUsernameField(pageDetails, formPasswordFields[0], false, false, false);\n        if (uf == null) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          uf = this.findUsernameField(pageDetails, formPasswordFields[0], true, true, false);\n        }\n        formData.push({\n          form: pageDetails.forms[formKey],\n          password: formPasswordFields[0],\n          username: uf,\n          passwords: formPasswordFields,\n        });\n      }\n    }\n\n    return formData;\n  }\n\n  async doAutoFill(options: any) {\n    let totpPromise: Promise<string> = null;\n    const tab = await this.getActiveTab();\n    if (!tab || !options.cipher || !options.pageDetails || !options.pageDetails.length) {\n      throw new Error(\"Nothing to auto-fill.\");\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    let didAutofill = false;\n    options.pageDetails.forEach((pd: any) => {\n      // make sure we're still on correct tab\n      if (pd.tab.id !== tab.id || pd.tab.url !== tab.url) {\n        return;\n      }\n\n      const fillScript = this.generateFillScript(pd.details, {\n        skipUsernameOnlyFill: options.skipUsernameOnlyFill || false,\n        onlyEmptyFields: options.onlyEmptyFields || false,\n        onlyVisibleFields: options.onlyVisibleFields || false,\n        fillNewPassword: options.fillNewPassword || false,\n        cipher: options.cipher,\n      });\n\n      if (!fillScript || !fillScript.script || !fillScript.script.length) {\n        return;\n      }\n\n      // Add a small delay between operations\n      fillScript.properties.delay_between_operations = 20;\n\n      didAutofill = true;\n      if (!options.skipLastUsed) {\n        this.cipherService.updateLastUsedDate(options.cipher.id);\n      }\n\n      BrowserApi.tabSendMessage(\n        tab,\n        {\n          command: \"fillForm\",\n          fillScript: fillScript,\n          url: tab.url,\n        },\n        { frameId: pd.frameId }\n      );\n\n      if (\n        options.cipher.type !== CipherType.Login ||\n        totpPromise ||\n        !options.cipher.login.totp ||\n        (!canAccessPremium && !options.cipher.organizationUseTotp)\n      ) {\n        return;\n      }\n\n      totpPromise = this.totpService.isAutoCopyEnabled().then((enabled) => {\n        if (enabled) {\n          return this.totpService.getCode(options.cipher.login.totp);\n        }\n        return null;\n      });\n    });\n\n    if (didAutofill) {\n      this.eventService.collect(EventType.Cipher_ClientAutofilled, options.cipher.id);\n      if (totpPromise != null) {\n        return await totpPromise;\n      } else {\n        return null;\n      }\n    } else {\n      throw new Error(\"Did not auto-fill.\");\n    }\n  }\n\n  async doAutoFillActiveTab(pageDetails: any, fromCommand: boolean) {\n    const tab = await this.getActiveTab();\n    if (!tab || !tab.url) {\n      return;\n    }\n\n    let cipher: CipherView;\n    if (fromCommand) {\n      cipher = await this.cipherService.getNextCipherForUrl(tab.url);\n    } else {\n      const lastLaunchedCipher = await this.cipherService.getLastLaunchedForUrl(tab.url, true);\n      if (\n        lastLaunchedCipher &&\n        Date.now().valueOf() - lastLaunchedCipher.localData?.lastLaunched?.valueOf() < 30000\n      ) {\n        cipher = lastLaunchedCipher;\n      } else {\n        cipher = await this.cipherService.getLastUsedForUrl(tab.url, true);\n      }\n\n      if (cipher == null) {\n        return null;\n      }\n    }\n\n    if (cipher.reprompt !== CipherRepromptType.None) {\n      return;\n    }\n\n    const totpCode = await this.doAutoFill({\n      cipher: cipher,\n      pageDetails: pageDetails,\n      skipLastUsed: !fromCommand,\n      skipUsernameOnlyFill: !fromCommand,\n      onlyEmptyFields: !fromCommand,\n      onlyVisibleFields: !fromCommand,\n      fillNewPassword: fromCommand,\n    });\n\n    // Update last used index as autofill has succeed\n    if (fromCommand) {\n      this.cipherService.updateLastUsedIndexForUrl(tab.url);\n    }\n\n    return totpCode;\n  }\n\n  // Helpers\n\n  private async getActiveTab(): Promise<any> {\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (!tab) {\n      throw new Error(\"No tab found.\");\n    }\n\n    return tab;\n  }\n\n  private generateFillScript(pageDetails: AutofillPageDetails, options: any): AutofillScript {\n    if (!pageDetails || !options.cipher) {\n      return null;\n    }\n\n    let fillScript = new AutofillScript(pageDetails.documentUUID);\n    const filledFields: { [id: string]: AutofillField } = {};\n    const fields = options.cipher.fields;\n\n    if (fields && fields.length) {\n      const fieldNames: string[] = [];\n\n      fields.forEach((f: any) => {\n        if (this.hasValue(f.name)) {\n          fieldNames.push(f.name.toLowerCase());\n        }\n      });\n\n      pageDetails.fields.forEach((field: any) => {\n        // eslint-disable-next-line\n        if (filledFields.hasOwnProperty(field.opid)) {\n          return;\n        }\n\n        if (!field.viewable && field.tagName !== \"span\") {\n          return;\n        }\n\n        const matchingIndex = this.findMatchingFieldIndex(field, fieldNames);\n        if (matchingIndex > -1) {\n          const matchingField: FieldView = fields[matchingIndex];\n          let val;\n          if (matchingField.type === FieldType.Linked) {\n            // Assumption: Linked Field is not being used to autofill a boolean value\n            val = options.cipher.linkedFieldValue(matchingField.linkedId);\n          } else {\n            val = matchingField.value;\n            if (val == null && matchingField.type === FieldType.Boolean) {\n              val = \"false\";\n            }\n          }\n\n          filledFields[field.opid] = field;\n          this.fillByOpid(fillScript, field, val);\n        }\n      });\n    }\n\n    switch (options.cipher.type) {\n      case CipherType.Login:\n        fillScript = this.generateLoginFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Card:\n        fillScript = this.generateCardFillScript(fillScript, pageDetails, filledFields, options);\n        break;\n      case CipherType.Identity:\n        fillScript = this.generateIdentityFillScript(\n          fillScript,\n          pageDetails,\n          filledFields,\n          options\n        );\n        break;\n      default:\n        return null;\n    }\n\n    return fillScript;\n  }\n\n  private generateLoginFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.login) {\n      return null;\n    }\n\n    const passwords: AutofillField[] = [];\n    const usernames: AutofillField[] = [];\n    let pf: AutofillField = null;\n    let username: AutofillField = null;\n    const login = options.cipher.login;\n\n    if (!login.password || login.password === \"\") {\n      // No password for this login. Maybe they just wanted to auto-fill some custom fields?\n      fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n      return fillScript;\n    }\n\n    let passwordFields = this.loadPasswordFields(\n      pageDetails,\n      false,\n      false,\n      options.onlyEmptyFields,\n      options.fillNewPassword\n    );\n    if (!passwordFields.length && !options.onlyVisibleFields) {\n      // not able to find any viewable password fields. maybe there are some \"hidden\" ones?\n      passwordFields = this.loadPasswordFields(\n        pageDetails,\n        true,\n        true,\n        options.onlyEmptyFields,\n        options.fillNewPassword\n      );\n    }\n\n    for (const formKey in pageDetails.forms) {\n      // eslint-disable-next-line\n      if (!pageDetails.forms.hasOwnProperty(formKey)) {\n        continue;\n      }\n\n      const passwordFieldsForForm: AutofillField[] = [];\n      passwordFields.forEach((passField) => {\n        if (formKey === passField.form) {\n          passwordFieldsForForm.push(passField);\n        }\n      });\n\n      passwordFields.forEach((passField) => {\n        pf = passField;\n        passwords.push(pf);\n\n        if (login.username) {\n          username = this.findUsernameField(pageDetails, pf, false, false, false);\n\n          if (!username && !options.onlyVisibleFields) {\n            // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n            username = this.findUsernameField(pageDetails, pf, true, true, false);\n          }\n\n          if (username) {\n            usernames.push(username);\n          }\n        }\n      });\n    }\n\n    if (passwordFields.length && !passwords.length) {\n      // The page does not have any forms with password fields. Use the first password field on the page and the\n      // input field just before it as the username.\n\n      pf = passwordFields[0];\n      passwords.push(pf);\n\n      if (login.username && pf.elementNumber > 0) {\n        username = this.findUsernameField(pageDetails, pf, false, false, true);\n\n        if (!username && !options.onlyVisibleFields) {\n          // not able to find any viewable username fields. maybe there are some \"hidden\" ones?\n          username = this.findUsernameField(pageDetails, pf, true, true, true);\n        }\n\n        if (username) {\n          usernames.push(username);\n        }\n      }\n    }\n\n    if (!passwordFields.length && !options.skipUsernameOnlyFill) {\n      // No password fields on this page. Let's try to just fuzzy fill the username.\n      pageDetails.fields.forEach((f: any) => {\n        if (\n          f.viewable &&\n          (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\") &&\n          this.fieldIsFuzzyMatch(f, AutoFillConstants.UsernameFieldNames)\n        ) {\n          usernames.push(f);\n        }\n      });\n    }\n\n    usernames.forEach((u) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(u.opid)) {\n        return;\n      }\n\n      filledFields[u.opid] = u;\n      this.fillByOpid(fillScript, u, login.username);\n    });\n\n    passwords.forEach((p) => {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(p.opid)) {\n        return;\n      }\n\n      filledFields[p.opid] = p;\n      this.fillByOpid(fillScript, p, login.password);\n    });\n\n    fillScript = this.setFillScriptForFocus(filledFields, fillScript);\n    return fillScript;\n  }\n\n  private generateCardFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.card) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < CreditCardAutoFillConstants.CardAttributes.length; i++) {\n        const attr = CreditCardAutoFillConstants.CardAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.cardholderName &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardHolderFieldNames,\n            CreditCardAutoFillConstants.CardHolderFieldNameValues\n          )\n        ) {\n          fillFields.cardholderName = f;\n          break;\n        } else if (\n          !fillFields.number &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardNumberFieldNames,\n            CreditCardAutoFillConstants.CardNumberFieldNameValues\n          )\n        ) {\n          fillFields.number = f;\n          break;\n        } else if (\n          !fillFields.exp &&\n          this.isFieldMatch(\n            f[attr],\n            CreditCardAutoFillConstants.CardExpiryFieldNames,\n            CreditCardAutoFillConstants.CardExpiryFieldNameValues\n          )\n        ) {\n          fillFields.exp = f;\n          break;\n        } else if (\n          !fillFields.expMonth &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryMonthFieldNames)\n        ) {\n          fillFields.expMonth = f;\n          break;\n        } else if (\n          !fillFields.expYear &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.ExpiryYearFieldNames)\n        ) {\n          fillFields.expYear = f;\n          break;\n        } else if (\n          !fillFields.code &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CVVFieldNames)\n        ) {\n          fillFields.code = f;\n          break;\n        } else if (\n          !fillFields.brand &&\n          this.isFieldMatch(f[attr], CreditCardAutoFillConstants.CardBrandFieldNames)\n        ) {\n          fillFields.brand = f;\n          break;\n        }\n      }\n    });\n\n    const card = options.cipher.card;\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"cardholderName\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"number\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"code\");\n    this.makeScriptAction(fillScript, card, fillFields, filledFields, \"brand\");\n\n    if (fillFields.expMonth && this.hasValue(card.expMonth)) {\n      let expMonth: string = card.expMonth;\n\n      if (fillFields.expMonth.selectInfo && fillFields.expMonth.selectInfo.options) {\n        let index: number = null;\n        const siOptions = fillFields.expMonth.selectInfo.options;\n        if (siOptions.length === 12) {\n          index = parseInt(card.expMonth, null) - 1;\n        } else if (siOptions.length === 13) {\n          if (\n            siOptions[0][0] != null &&\n            siOptions[0][0] !== \"\" &&\n            (siOptions[12][0] == null || siOptions[12][0] === \"\")\n          ) {\n            index = parseInt(card.expMonth, null) - 1;\n          } else {\n            index = parseInt(card.expMonth, null);\n          }\n        }\n\n        if (index != null) {\n          const option = siOptions[index];\n          if (option.length > 1) {\n            expMonth = option[1];\n          }\n        }\n      } else if (\n        (this.fieldAttrsContain(fillFields.expMonth, \"mm\") ||\n          fillFields.expMonth.maxLength === 2) &&\n        expMonth.length === 1\n      ) {\n        expMonth = \"0\" + expMonth;\n      }\n\n      filledFields[fillFields.expMonth.opid] = fillFields.expMonth;\n      this.fillByOpid(fillScript, fillFields.expMonth, expMonth);\n    }\n\n    if (fillFields.expYear && this.hasValue(card.expYear)) {\n      let expYear: string = card.expYear;\n      if (fillFields.expYear.selectInfo && fillFields.expYear.selectInfo.options) {\n        for (let i = 0; i < fillFields.expYear.selectInfo.options.length; i++) {\n          const o: [string, string] = fillFields.expYear.selectInfo.options[i];\n          if (o[0] === card.expYear || o[1] === card.expYear) {\n            expYear = o[1];\n            break;\n          }\n          if (\n            o[1].length === 2 &&\n            card.expYear.length === 4 &&\n            o[1] === card.expYear.substring(2)\n          ) {\n            expYear = o[1];\n            break;\n          }\n          const colonIndex = o[1].indexOf(\":\");\n          if (colonIndex > -1 && o[1].length > colonIndex + 1) {\n            const val = o[1].substring(colonIndex + 2);\n            if (val != null && val.trim() !== \"\" && val === card.expYear) {\n              expYear = o[1];\n              break;\n            }\n          }\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yyyy\") ||\n        fillFields.expYear.maxLength === 4\n      ) {\n        if (expYear.length === 2) {\n          expYear = \"20\" + expYear;\n        }\n      } else if (\n        this.fieldAttrsContain(fillFields.expYear, \"yy\") ||\n        fillFields.expYear.maxLength === 2\n      ) {\n        if (expYear.length === 4) {\n          expYear = expYear.substr(2);\n        }\n      }\n\n      filledFields[fillFields.expYear.opid] = fillFields.expYear;\n      this.fillByOpid(fillScript, fillFields.expYear, expYear);\n    }\n\n    if (fillFields.exp && this.hasValue(card.expMonth) && this.hasValue(card.expYear)) {\n      const fullMonth = (\"0\" + card.expMonth).slice(-2);\n\n      let fullYear: string = card.expYear;\n      let partYear: string = null;\n      if (fullYear.length === 2) {\n        partYear = fullYear;\n        fullYear = \"20\" + fullYear;\n      } else if (fullYear.length === 4) {\n        partYear = fullYear.substr(2, 2);\n      }\n\n      let exp: string = null;\n      for (let i = 0; i < CreditCardAutoFillConstants.MonthAbbr.length; i++) {\n        if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"/\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"/\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"/\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"/\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + \"-\" + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + \"-\" + fullYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] +\n              \"-\" +\n              CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + \"-\" + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrShort[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = partYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.YearAbbrLong[i] + CreditCardAutoFillConstants.MonthAbbr[i]\n          )\n        ) {\n          exp = fullYear + fullMonth;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrShort[i]\n          ) &&\n          partYear != null\n        ) {\n          exp = fullMonth + partYear;\n        } else if (\n          this.fieldAttrsContain(\n            fillFields.exp,\n            CreditCardAutoFillConstants.MonthAbbr[i] + CreditCardAutoFillConstants.YearAbbrLong[i]\n          )\n        ) {\n          exp = fullMonth + fullYear;\n        }\n\n        if (exp != null) {\n          break;\n        }\n      }\n\n      if (exp == null) {\n        exp = fullYear + \"-\" + fullMonth;\n      }\n\n      this.makeScriptActionWithValue(fillScript, exp, fillFields.exp, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private fieldAttrsContain(field: any, containsVal: string) {\n    if (!field) {\n      return false;\n    }\n\n    let doesContain = false;\n    CreditCardAutoFillConstants.CardAttributesExtended.forEach((attr) => {\n      // eslint-disable-next-line\n      if (doesContain || !field.hasOwnProperty(attr) || !field[attr]) {\n        return;\n      }\n\n      let val = field[attr];\n      val = val.replace(/ /g, \"\").toLowerCase();\n      doesContain = val.indexOf(containsVal) > -1;\n    });\n\n    return doesContain;\n  }\n\n  private generateIdentityFillScript(\n    fillScript: AutofillScript,\n    pageDetails: any,\n    filledFields: { [id: string]: AutofillField },\n    options: any\n  ): AutofillScript {\n    if (!options.cipher.identity) {\n      return null;\n    }\n\n    const fillFields: { [id: string]: AutofillField } = {};\n\n    pageDetails.fields.forEach((f: any) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      if (this.isExcludedType(f.type, AutoFillConstants.ExcludedAutofillTypes)) {\n        return;\n      }\n\n      for (let i = 0; i < IdentityAutoFillConstants.IdentityAttributes.length; i++) {\n        const attr = IdentityAutoFillConstants.IdentityAttributes[i];\n        // eslint-disable-next-line\n        if (!f.hasOwnProperty(attr) || !f[attr] || !f.viewable) {\n          continue;\n        }\n\n        // ref https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n        // ref https://developers.google.com/web/fundamentals/design-and-ux/input/forms/\n        if (\n          !fillFields.name &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.FullNameFieldNames,\n            IdentityAutoFillConstants.FullNameFieldNameValues\n          )\n        ) {\n          fillFields.name = f;\n          break;\n        } else if (\n          !fillFields.firstName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.FirstnameFieldNames)\n        ) {\n          fillFields.firstName = f;\n          break;\n        } else if (\n          !fillFields.middleName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.MiddlenameFieldNames)\n        ) {\n          fillFields.middleName = f;\n          break;\n        } else if (\n          !fillFields.lastName &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.LastnameFieldNames)\n        ) {\n          fillFields.lastName = f;\n          break;\n        } else if (\n          !fillFields.title &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.TitleFieldNames)\n        ) {\n          fillFields.title = f;\n          break;\n        } else if (\n          !fillFields.email &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.EmailFieldNames)\n        ) {\n          fillFields.email = f;\n          break;\n        } else if (\n          !fillFields.address &&\n          this.isFieldMatch(\n            f[attr],\n            IdentityAutoFillConstants.AddressFieldNames,\n            IdentityAutoFillConstants.AddressFieldNameValues\n          )\n        ) {\n          fillFields.address = f;\n          break;\n        } else if (\n          !fillFields.address1 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address1FieldNames)\n        ) {\n          fillFields.address1 = f;\n          break;\n        } else if (\n          !fillFields.address2 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address2FieldNames)\n        ) {\n          fillFields.address2 = f;\n          break;\n        } else if (\n          !fillFields.address3 &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.Address3FieldNames)\n        ) {\n          fillFields.address3 = f;\n          break;\n        } else if (\n          !fillFields.postalCode &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PostalCodeFieldNames)\n        ) {\n          fillFields.postalCode = f;\n          break;\n        } else if (\n          !fillFields.city &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CityFieldNames)\n        ) {\n          fillFields.city = f;\n          break;\n        } else if (\n          !fillFields.state &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.StateFieldNames)\n        ) {\n          fillFields.state = f;\n          break;\n        } else if (\n          !fillFields.country &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CountryFieldNames)\n        ) {\n          fillFields.country = f;\n          break;\n        } else if (\n          !fillFields.phone &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.PhoneFieldNames)\n        ) {\n          fillFields.phone = f;\n          break;\n        } else if (\n          !fillFields.username &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.UserNameFieldNames)\n        ) {\n          fillFields.username = f;\n          break;\n        } else if (\n          !fillFields.company &&\n          this.isFieldMatch(f[attr], IdentityAutoFillConstants.CompanyFieldNames)\n        ) {\n          fillFields.company = f;\n          break;\n        }\n      }\n    });\n\n    const identity = options.cipher.identity;\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"title\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"firstName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"middleName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"lastName\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address1\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address2\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"address3\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"city\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"postalCode\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"company\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"email\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"phone\");\n    this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"username\");\n\n    let filledState = false;\n    if (fillFields.state && identity.state && identity.state.length > 2) {\n      const stateLower = identity.state.toLowerCase();\n      const isoState =\n        IdentityAutoFillConstants.IsoStates[stateLower] ||\n        IdentityAutoFillConstants.IsoProvinces[stateLower];\n      if (isoState) {\n        filledState = true;\n        this.makeScriptActionWithValue(fillScript, isoState, fillFields.state, filledFields);\n      }\n    }\n\n    if (!filledState) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"state\");\n    }\n\n    let filledCountry = false;\n    if (fillFields.country && identity.country && identity.country.length > 2) {\n      const countryLower = identity.country.toLowerCase();\n      const isoCountry = IdentityAutoFillConstants.IsoCountries[countryLower];\n      if (isoCountry) {\n        filledCountry = true;\n        this.makeScriptActionWithValue(fillScript, isoCountry, fillFields.country, filledFields);\n      }\n    }\n\n    if (!filledCountry) {\n      this.makeScriptAction(fillScript, identity, fillFields, filledFields, \"country\");\n    }\n\n    if (fillFields.name && (identity.firstName || identity.lastName)) {\n      let fullName = \"\";\n      if (this.hasValue(identity.firstName)) {\n        fullName = identity.firstName;\n      }\n      if (this.hasValue(identity.middleName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.middleName;\n      }\n      if (this.hasValue(identity.lastName)) {\n        if (fullName !== \"\") {\n          fullName += \" \";\n        }\n        fullName += identity.lastName;\n      }\n\n      this.makeScriptActionWithValue(fillScript, fullName, fillFields.name, filledFields);\n    }\n\n    if (fillFields.address && this.hasValue(identity.address1)) {\n      let address = \"\";\n      if (this.hasValue(identity.address1)) {\n        address = identity.address1;\n      }\n      if (this.hasValue(identity.address2)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address2;\n      }\n      if (this.hasValue(identity.address3)) {\n        if (address !== \"\") {\n          address += \", \";\n        }\n        address += identity.address3;\n      }\n\n      this.makeScriptActionWithValue(fillScript, address, fillFields.address, filledFields);\n    }\n\n    return fillScript;\n  }\n\n  private isExcludedType(type: string, excludedTypes: string[]) {\n    return excludedTypes.indexOf(type) > -1;\n  }\n\n  private isFieldMatch(value: string, options: string[], containsOptions?: string[]): boolean {\n    value = value\n      .trim()\n      .toLowerCase()\n      .replace(/[^a-zA-Z0-9]+/g, \"\");\n    for (let i = 0; i < options.length; i++) {\n      let option = options[i];\n      const checkValueContains = containsOptions == null || containsOptions.indexOf(option) > -1;\n      option = option.toLowerCase().replace(/-/g, \"\");\n      if (value === option || (checkValueContains && value.indexOf(option) > -1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private makeScriptAction(\n    fillScript: AutofillScript,\n    cipherData: any,\n    fillFields: { [id: string]: AutofillField },\n    filledFields: { [id: string]: AutofillField },\n    dataProp: string,\n    fieldProp?: string\n  ) {\n    fieldProp = fieldProp || dataProp;\n    this.makeScriptActionWithValue(\n      fillScript,\n      cipherData[dataProp],\n      fillFields[fieldProp],\n      filledFields\n    );\n  }\n\n  private makeScriptActionWithValue(\n    fillScript: AutofillScript,\n    dataValue: any,\n    field: AutofillField,\n    filledFields: { [id: string]: AutofillField }\n  ) {\n    let doFill = false;\n    if (this.hasValue(dataValue) && field) {\n      if (field.type === \"select-one\" && field.selectInfo && field.selectInfo.options) {\n        for (let i = 0; i < field.selectInfo.options.length; i++) {\n          const option = field.selectInfo.options[i];\n          for (let j = 0; j < option.length; j++) {\n            if (this.hasValue(option[j]) && option[j].toLowerCase() === dataValue.toLowerCase()) {\n              doFill = true;\n              if (option.length > 1) {\n                dataValue = option[1];\n              }\n              break;\n            }\n          }\n\n          if (doFill) {\n            break;\n          }\n        }\n      } else {\n        doFill = true;\n      }\n    }\n\n    if (doFill) {\n      filledFields[field.opid] = field;\n      this.fillByOpid(fillScript, field, dataValue);\n    }\n  }\n\n  private loadPasswordFields(\n    pageDetails: AutofillPageDetails,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    mustBeEmpty: boolean,\n    fillNewPassword: boolean\n  ) {\n    const arr: AutofillField[] = [];\n    pageDetails.fields.forEach((f) => {\n      if (this.forCustomFieldsOnly(f)) {\n        return;\n      }\n\n      const isPassword = f.type === \"password\";\n      const valueIsLikePassword = (value: string) => {\n        if (value == null) {\n          return false;\n        }\n        // Removes all whitespace, _ and - characters\n        // eslint-disable-next-line\n        const cleanedValue = value.toLowerCase().replace(/[\\s_\\-]/g, \"\");\n\n        if (cleanedValue.indexOf(\"password\") < 0) {\n          return false;\n        }\n\n        if (AutoFillConstants.PasswordFieldIgnoreList.some((i) => cleanedValue.indexOf(i) > -1)) {\n          return false;\n        }\n\n        return true;\n      };\n      const isLikePassword = () => {\n        if (f.type !== \"text\") {\n          return false;\n        }\n        if (valueIsLikePassword(f.htmlID)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.htmlName)) {\n          return true;\n        }\n        if (valueIsLikePassword(f.placeholder)) {\n          return true;\n        }\n        return false;\n      };\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (isPassword || isLikePassword()) &&\n        (canBeHidden || f.viewable) &&\n        (!mustBeEmpty || f.value == null || f.value.trim() === \"\") &&\n        (fillNewPassword || f.autoCompleteType !== \"new-password\")\n      ) {\n        arr.push(f);\n      }\n    });\n    return arr;\n  }\n\n  private findUsernameField(\n    pageDetails: AutofillPageDetails,\n    passwordField: AutofillField,\n    canBeHidden: boolean,\n    canBeReadOnly: boolean,\n    withoutForm: boolean\n  ) {\n    let usernameField: AutofillField = null;\n    for (let i = 0; i < pageDetails.fields.length; i++) {\n      const f = pageDetails.fields[i];\n      if (this.forCustomFieldsOnly(f)) {\n        continue;\n      }\n\n      if (f.elementNumber >= passwordField.elementNumber) {\n        break;\n      }\n\n      if (\n        !f.disabled &&\n        (canBeReadOnly || !f.readonly) &&\n        (withoutForm || f.form === passwordField.form) &&\n        (canBeHidden || f.viewable) &&\n        (f.type === \"text\" || f.type === \"email\" || f.type === \"tel\")\n      ) {\n        usernameField = f;\n\n        if (this.findMatchingFieldIndex(f, AutoFillConstants.UsernameFieldNames) > -1) {\n          // We found an exact match. No need to keep looking.\n          break;\n        }\n      }\n    }\n\n    return usernameField;\n  }\n\n  private findMatchingFieldIndex(field: AutofillField, names: string[]): number {\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].indexOf(\"=\") > -1) {\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlID\", names[i], \"id\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"htmlName\", names[i], \"name\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-tag\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"label-aria\", names[i], \"label\")) {\n          return i;\n        }\n        if (this.fieldPropertyIsPrefixMatch(field, \"placeholder\", names[i], \"placeholder\")) {\n          return i;\n        }\n      }\n\n      if (this.fieldPropertyIsMatch(field, \"htmlID\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"htmlName\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-tag\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"label-aria\", names[i])) {\n        return i;\n      }\n      if (this.fieldPropertyIsMatch(field, \"placeholder\", names[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  private fieldPropertyIsPrefixMatch(\n    field: any,\n    property: string,\n    name: string,\n    prefix: string,\n    separator = \"=\"\n  ): boolean {\n    if (name.indexOf(prefix + separator) === 0) {\n      const sepIndex = name.indexOf(separator);\n      const val = name.substring(sepIndex + 1);\n      return val != null && this.fieldPropertyIsMatch(field, property, val);\n    }\n    return false;\n  }\n\n  private fieldPropertyIsMatch(field: any, property: string, name: string): boolean {\n    let fieldVal = field[property] as string;\n    if (!this.hasValue(fieldVal)) {\n      return false;\n    }\n\n    fieldVal = fieldVal.trim().replace(/(?:\\r\\n|\\r|\\n)/g, \"\");\n    if (name.startsWith(\"regex=\")) {\n      try {\n        const regexParts = name.split(\"=\", 2);\n        if (regexParts.length === 2) {\n          const regex = new RegExp(regexParts[1], \"i\");\n          return regex.test(fieldVal);\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else if (name.startsWith(\"csv=\")) {\n      const csvParts = name.split(\"=\", 2);\n      if (csvParts.length === 2) {\n        const csvVals = csvParts[1].split(\",\");\n        for (let i = 0; i < csvVals.length; i++) {\n          const val = csvVals[i];\n          if (val != null && val.trim().toLowerCase() === fieldVal.toLowerCase()) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    return fieldVal.toLowerCase() === name;\n  }\n\n  private fieldIsFuzzyMatch(field: AutofillField, names: string[]): boolean {\n    if (this.hasValue(field.htmlID) && this.fuzzyMatch(names, field.htmlID)) {\n      return true;\n    }\n    if (this.hasValue(field.htmlName) && this.fuzzyMatch(names, field.htmlName)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-tag\"]) && this.fuzzyMatch(names, field[\"label-tag\"])) {\n      return true;\n    }\n    if (this.hasValue(field.placeholder) && this.fuzzyMatch(names, field.placeholder)) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-left\"]) && this.fuzzyMatch(names, field[\"label-left\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-top\"]) && this.fuzzyMatch(names, field[\"label-top\"])) {\n      return true;\n    }\n    if (this.hasValue(field[\"label-aria\"]) && this.fuzzyMatch(names, field[\"label-aria\"])) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private fuzzyMatch(options: string[], value: string): boolean {\n    if (options == null || options.length === 0 || value == null || value === \"\") {\n      return false;\n    }\n\n    value = value\n      .replace(/(?:\\r\\n|\\r|\\n)/g, \"\")\n      .trim()\n      .toLowerCase();\n\n    for (let i = 0; i < options.length; i++) {\n      if (value.indexOf(options[i]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  private hasValue(str: string): boolean {\n    return str && str !== \"\";\n  }\n\n  private setFillScriptForFocus(\n    filledFields: { [id: string]: AutofillField },\n    fillScript: AutofillScript\n  ): AutofillScript {\n    let lastField: AutofillField = null;\n    let lastPasswordField: AutofillField = null;\n\n    for (const opid in filledFields) {\n      // eslint-disable-next-line\n      if (filledFields.hasOwnProperty(opid) && filledFields[opid].viewable) {\n        lastField = filledFields[opid];\n\n        if (filledFields[opid].type === \"password\") {\n          lastPasswordField = filledFields[opid];\n        }\n      }\n    }\n\n    // Prioritize password field over others.\n    if (lastPasswordField) {\n      fillScript.script.push([\"focus_by_opid\", lastPasswordField.opid]);\n    } else if (lastField) {\n      fillScript.script.push([\"focus_by_opid\", lastField.opid]);\n    }\n\n    return fillScript;\n  }\n\n  private fillByOpid(fillScript: AutofillScript, field: AutofillField, value: string): void {\n    if (field.maxLength && value && value.length > field.maxLength) {\n      value = value.substr(0, value.length);\n    }\n    if (field.tagName !== \"span\") {\n      fillScript.script.push([\"click_on_opid\", field.opid]);\n      fillScript.script.push([\"focus_by_opid\", field.opid]);\n    }\n    fillScript.script.push([\"fill_by_opid\", field.opid, value]);\n  }\n\n  private forCustomFieldsOnly(field: AutofillField): boolean {\n    return field.tagName === \"span\";\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { KeySuffixOptions } from \"jslib-common/enums/keySuffixOptions\";\nimport { CryptoService } from \"jslib-common/services/crypto.service\";\n\nexport class BrowserCryptoService extends CryptoService {\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions) {\n    if (keySuffix === \"biometric\") {\n      await this.platformUtilService.authenticateBiometric();\n      return (await this.getKey())?.keyB64;\n    }\n\n    return await super.retrieveKeyFromStorage(keySuffix);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    chrome.runtime.sendMessage(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModeBackgroundService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenPopupMainMessageListener(message);\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { ClientType } from \"jslib-common/enums/clientType\";\nimport { DeviceType } from \"jslib-common/enums/deviceType\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst DialogPromiseExpiration = 600000; // 10 minutes\n\nexport default class BrowserPlatformUtilsService implements PlatformUtilsService {\n  private showDialogResolves = new Map<number, { resolve: (value: boolean) => void; date: Date }>();\n  private passwordDialogResolves = new Map<\n    number,\n    { tryResolve: (canceled: boolean, password: string) => Promise<boolean>; date: Date }\n  >();\n  private deviceCache: DeviceType = null;\n  private prefersColorSchemeDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  constructor(\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private clipboardWriteCallback: (clipboardValue: string, clearMs: number) => void,\n    private biometricCallback: () => Promise<boolean>\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.deviceCache) {\n      return this.deviceCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.deviceCache = DeviceType.FirefoxExtension;\n    } else if (\n      (!!(window as any).opr && !!opr.addons) ||\n      !!(window as any).opera ||\n      navigator.userAgent.indexOf(\" OPR/\") >= 0\n    ) {\n      this.deviceCache = DeviceType.OperaExtension;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.deviceCache = DeviceType.EdgeExtension;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.deviceCache = DeviceType.VivaldiExtension;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.deviceCache = DeviceType.ChromeExtension;\n    } else if (navigator.userAgent.indexOf(\" Safari/\") !== -1) {\n      this.deviceCache = DeviceType.SafariExtension;\n    }\n\n    return this.deviceCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"extension\", \"\");\n  }\n\n  getClientType(): ClientType {\n    return ClientType.Browser;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxExtension;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeExtension;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeExtension;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaExtension;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiExtension;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariExtension;\n  }\n\n  isIE(): boolean {\n    return false;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  async isViewOpen(): Promise<boolean> {\n    if (await BrowserApi.isPopupOpen()) {\n      return true;\n    }\n\n    if (this.isSafari()) {\n      return false;\n    }\n\n    const sidebarView = this.sidebarViewName();\n    const sidebarOpen =\n      sidebarView != null && chrome.extension.getViews({ type: sidebarView }).length > 0;\n    if (sidebarOpen) {\n      return true;\n    }\n\n    const tabOpen = chrome.extension.getViews({ type: \"tab\" }).length > 0;\n    return tabOpen;\n  }\n\n  lockTimeout(): number {\n    return null;\n  }\n\n  launchUri(uri: string, options?: any): void {\n    BrowserApi.createNewTab(uri, options && options.extensionPage === true);\n  }\n\n  saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n    BrowserApi.downloadFile(win, blobData, blobOptions, fileName);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(BrowserApi.getApplicationVersion());\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    const dialogId = Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\n    this.messagingService.send(\"showDialog\", {\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      title: title,\n      confirmText: confirmText,\n      cancelText: cancelText,\n      type: type,\n      dialogId: dialogId,\n    });\n    return new Promise<boolean>((resolve) => {\n      this.showDialogResolves.set(dialogId, { resolve: resolve, date: new Date() });\n    });\n  }\n\n  isDev(): boolean {\n    return process.env.ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    const clearing = options ? !!options.clearing : false;\n    const clearMs: number = options && options.clearMs ? options.clearMs : null;\n\n    if (this.isSafari()) {\n      SafariApp.sendMessageToApp(\"copyToClipboard\", text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.writeText\n    ) {\n      (win as any).navigator.clipboard.writeText(text).then(() => {\n        if (!clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      });\n    } else if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n      if (!clearing && this.clipboardWriteCallback != null) {\n        this.clipboardWriteCallback(text, clearMs);\n      }\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      if (this.isChrome() && text === \"\") {\n        text = \"\\u0000\";\n      }\n\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text == null || text === \"\" ? \" \" : text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.select();\n\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"copy\") && !clearing && this.clipboardWriteCallback != null) {\n          this.clipboardWriteCallback(text, clearMs);\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n  }\n\n  async readFromClipboard(options?: any): Promise<string> {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n\n    if (this.isSafari()) {\n      return await SafariApp.sendMessageToApp(\"readFromClipboard\");\n    } else if (\n      this.isFirefox() &&\n      (win as any).navigator.clipboard &&\n      (win as any).navigator.clipboard.readText\n    ) {\n      return await (win as any).navigator.clipboard.readText();\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"paste\")) {\n      const textarea = doc.createElement(\"textarea\");\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      doc.body.appendChild(textarea);\n      textarea.focus();\n      try {\n        // Security exception may be thrown by some browsers.\n        if (doc.execCommand(\"paste\")) {\n          return textarea.value;\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Read from clipboard failed.\", e);\n      } finally {\n        doc.body.removeChild(textarea);\n      }\n    }\n    return null;\n  }\n\n  resolveDialogPromise(dialogId: number, confirmed: boolean) {\n    if (this.showDialogResolves.has(dialogId)) {\n      const resolveObj = this.showDialogResolves.get(dialogId);\n      resolveObj.resolve(confirmed);\n      this.showDialogResolves.delete(dialogId);\n    }\n\n    // Clean up old promises\n    this.showDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.showDialogResolves.delete(key);\n      }\n    });\n  }\n\n  async resolvePasswordDialogPromise(\n    dialogId: number,\n    canceled: boolean,\n    password: string\n  ): Promise<boolean> {\n    let result = false;\n    if (this.passwordDialogResolves.has(dialogId)) {\n      const resolveObj = this.passwordDialogResolves.get(dialogId);\n      if (await resolveObj.tryResolve(canceled, password)) {\n        this.passwordDialogResolves.delete(dialogId);\n        result = true;\n      }\n    }\n\n    // Clean up old promises\n    this.passwordDialogResolves.forEach((val, key) => {\n      const age = new Date().getTime() - val.date.getTime();\n      if (age > DialogPromiseExpiration) {\n        this.passwordDialogResolves.delete(key);\n      }\n    });\n\n    return result;\n  }\n\n  async supportsBiometric() {\n    const platformInfo = await BrowserApi.getPlatformInfo();\n    if (platformInfo.os === \"android\") {\n      return false;\n    }\n\n    if (this.isFirefox()) {\n      return parseInt((await browser.runtime.getBrowserInfo()).version.split(\".\")[0], 10) >= 87;\n    }\n\n    return true;\n  }\n\n  authenticateBiometric() {\n    return this.biometricCallback();\n  }\n\n  sidebarViewName(): string {\n    if ((window as any).chrome.sidebarAction && this.isFirefox()) {\n      return \"sidebar\";\n    } else if (this.isOpera() && typeof opr !== \"undefined\" && opr.sidebarAction) {\n      return \"sidebar_panel\";\n    }\n\n    return null;\n  }\n\n  supportsSecureStorage(): boolean {\n    return false;\n  }\n\n  getDefaultSystemTheme(): Promise<ThemeType.Light | ThemeType.Dark> {\n    return Promise.resolve(this.prefersColorSchemeDark.matches ? ThemeType.Dark : ThemeType.Light);\n  }\n\n  onDefaultSystemThemeChange(callback: (theme: ThemeType.Light | ThemeType.Dark) => unknown) {\n    this.prefersColorSchemeDark.addEventListener(\"change\", ({ matches }) => {\n      callback(matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n\n  async getEffectiveTheme() {\n    const theme = (await this.stateService.getTheme()) as ThemeType;\n    if (theme == null || theme === ThemeType.System) {\n      return this.getDefaultSystemTheme();\n    } else {\n      return theme;\n    }\n  }\n}\n","import { StorageService } from \"jslib-common/abstractions/storage.service\";\n\nexport default class BrowserStorageService implements StorageService {\n  private chromeStorageApi: any;\n\n  constructor() {\n    this.chromeStorageApi = chrome.storage.local;\n  }\n\n  async get<T>(key: string): Promise<T> {\n    return new Promise((resolve) => {\n      this.chromeStorageApi.get(key, (obj: any) => {\n        if (obj != null && obj[key] != null) {\n          resolve(obj[key] as T);\n          return;\n        }\n        resolve(null);\n      });\n    });\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  async save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      // Fix safari not liking null in set\n      return new Promise<void>((resolve) => {\n        this.chromeStorageApi.remove(key, () => {\n          resolve();\n        });\n      });\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const keyedObj = { [key]: obj };\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.set(keyedObj, () => {\n        resolve();\n      });\n    });\n  }\n\n  async remove(key: string): Promise<any> {\n    return new Promise<void>((resolve) => {\n      this.chromeStorageApi.remove(key, () => {\n        resolve();\n      });\n    });\n  }\n}\n","import { I18nService as BaseI18nService } from \"jslib-common/services/i18n.service\";\n\nexport default class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string) {\n    super(systemLanguage, null, async (formattedLocale: string) => {\n      // Deprecated\n      const file = await fetch(this.localesDirectory + formattedLocale + \"/messages.json\");\n      return await file.json();\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"es\",\n      \"et\",\n      \"fa\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lt\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-BR\",\n      \"pt-PT\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"th\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    if (this.localesDirectory == null) {\n      const placeholders: string[] = [];\n      if (p1 != null) {\n        placeholders.push(p1);\n      }\n      if (p2 != null) {\n        placeholders.push(p2);\n      }\n      if (p3 != null) {\n        placeholders.push(p3);\n      }\n\n      if (placeholders.length) {\n        return chrome.i18n.getMessage(id, placeholders);\n      } else {\n        return chrome.i18n.getMessage(id);\n      }\n    }\n\n    return super.translate(id, p1, p2, p3);\n  }\n}\n","import { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  locale: string;\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: \"base\" });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { StorageOptions } from \"jslib-common/models/domain/storageOptions\";\nimport { StateService as BaseStateService } from \"jslib-common/services/state.service\";\n\nimport { Account } from \"../models/account\";\nimport { BrowserComponentState } from \"../models/browserComponentState\";\nimport { BrowserGroupingsComponentState } from \"../models/browserGroupingsComponentState\";\nimport { BrowserSendComponentState } from \"../models/browserSendComponentState\";\n\nimport { StateService as StateServiceAbstraction } from \"./abstractions/state.service\";\n\nexport class StateService\n  extends BaseStateService<GlobalState, Account>\n  implements StateServiceAbstraction\n{\n  async addAccount(account: Account) {\n    // Apply browser overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    // Firefox Private Mode can clash with non-Private Mode because they both read from the same onDiskOptions\n    // Check that there is an account in memory before considering the user authenticated\n    return (\n      (await super.getIsAuthenticated(options)) &&\n      (await this.getAccount(this.defaultInMemoryOptions)) != null\n    );\n  }\n\n  async getBrowserGroupingComponentState(\n    options?: StorageOptions\n  ): Promise<BrowserGroupingsComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.groupings;\n  }\n\n  async setBrowserGroupingComponentState(\n    value: BrowserGroupingsComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.groupings = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserCipherComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.ciphers;\n  }\n\n  async setBrowserCipherComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.ciphers = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n\n  async getBrowserSendComponentState(options?: StorageOptions): Promise<BrowserSendComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.send;\n  }\n\n  async setBrowserSendComponentState(\n    value: BrowserSendComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.send = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n  async getBrowserSendTypeComponentState(options?: StorageOptions): Promise<BrowserComponentState> {\n    return (await this.getAccount(this.reconcileOptions(options, this.defaultInMemoryOptions)))\n      ?.sendType;\n  }\n\n  async setBrowserSendTypeComponentState(\n    value: BrowserComponentState,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, this.defaultInMemoryOptions)\n    );\n    account.sendType = value;\n    await this.saveAccount(account, this.reconcileOptions(options, this.defaultInMemoryOptions));\n  }\n}\n","import { VaultTimeoutService as BaseVaultTimeoutService } from \"jslib-common/services/vaultTimeout.service\";\n\nimport { SafariApp } from \"../browser/safariApp\";\n\nexport default class VaultTimeoutService extends BaseVaultTimeoutService {\n  startCheck() {\n    this.checkVaultTimeout();\n    if (this.platformUtilsService.isSafari()) {\n      this.checkSafari();\n    } else {\n      setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n    }\n  }\n\n  // This is a work-around to safari adding an arbitary delay to setTimeout and\n  //  setIntervals. It works by calling the native extension which sleeps for 10s,\n  //  efficiently replicating setInterval.\n  async checkSafari() {\n    // eslint-disable-next-line\n    while (true) {\n      try {\n        await SafariApp.sendMessageToApp(\"sleep\");\n        this.checkVaultTimeout();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log(\"Exception Safari VaultTimeout\", e);\n      }\n    }\n  }\n}\n","import { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class CommandsBackground {\n  private isSafari: boolean;\n  private isVivaldi: boolean;\n\n  constructor(\n    private main: MainBackground,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.isVivaldi = this.platformUtilsService.isVivaldi();\n  }\n\n  async init() {\n    BrowserApi.messageListener(\n      \"commands.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"commands.background\") {\n          await this.processCommand(\n            msg.data.commandToRetry.msg.command,\n            msg.data.commandToRetry.sender\n          );\n        }\n\n        if (this.isVivaldi && msg.command === \"keyboardShortcutTriggered\" && msg.shortcut) {\n          await this.processCommand(msg.shortcut, sender);\n        }\n      }\n    );\n\n    if (!this.isVivaldi && chrome && chrome.commands) {\n      chrome.commands.onCommand.addListener(async (command: string) => {\n        await this.processCommand(command);\n      });\n    }\n  }\n\n  private async processCommand(command: string, sender?: chrome.runtime.MessageSender) {\n    switch (command) {\n      case \"generate_password\":\n        await this.generatePasswordToClipboard();\n        break;\n      case \"autofill_login\":\n        await this.autoFillLogin(sender ? sender.tab : null);\n        break;\n      case \"open_popup\":\n        await this.openPopup();\n        break;\n      case \"lock_vault\":\n        await this.vaultTimeoutService.lock(true);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async autoFillLogin(tab?: chrome.tabs.Tab) {\n    if (!tab) {\n      tab = await BrowserApi.getTabFromCurrentWindowId();\n    }\n\n    if (tab == null) {\n      return;\n    }\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: \"autofill_login\" },\n          sender: { tab: tab },\n        },\n        target: \"commands.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    await this.main.collectPageDetailsForContentScript(tab, \"autofill_cmd\");\n  }\n\n  private async openPopup() {\n    // Chrome APIs cannot open popup\n    if (!this.isSafari) {\n      return;\n    }\n\n    this.main.openPopup();\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { EventType } from \"jslib-common/enums/eventType\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class ContextMenusBackground {\n  private readonly noopCommandSuffix = \"noop\";\n  private contextMenus: any;\n\n  constructor(\n    private main: MainBackground,\n    private cipherService: CipherService,\n    private passwordGenerationService: PasswordGenerationService,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private eventService: EventService,\n    private totpService: TotpService\n  ) {\n    this.contextMenus = chrome.contextMenus;\n  }\n\n  async init() {\n    if (!this.contextMenus) {\n      return;\n    }\n\n    this.contextMenus.onClicked.addListener(\n      async (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => {\n        if (info.menuItemId === \"generate-password\") {\n          await this.generatePasswordToClipboard();\n        } else if (info.menuItemId === \"copy-identifier\") {\n          await this.getClickedElement(tab, info.frameId);\n        } else if (\n          info.parentMenuItemId === \"autofill\" ||\n          info.parentMenuItemId === \"copy-username\" ||\n          info.parentMenuItemId === \"copy-password\" ||\n          info.parentMenuItemId === \"copy-totp\"\n        ) {\n          await this.cipherAction(tab, info);\n        }\n      }\n    );\n\n    BrowserApi.messageListener(\n      \"contextmenus.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender, sendResponse: any) => {\n        if (msg.command === \"unlockCompleted\" && msg.data.target === \"contextmenus.background\") {\n          await this.cipherAction(\n            msg.data.commandToRetry.sender.tab,\n            msg.data.commandToRetry.msg.data\n          );\n        }\n      }\n    );\n  }\n\n  private async generatePasswordToClipboard() {\n    const options = (await this.passwordGenerationService.getOptions())[0];\n    const password = await this.passwordGenerationService.generatePassword(options);\n    this.platformUtilsService.copyToClipboard(password, { window: window });\n    this.passwordGenerationService.addHistory(password);\n  }\n\n  private async getClickedElement(tab: chrome.tabs.Tab, frameId: number) {\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, { command: \"getClickedElement\" }, { frameId: frameId });\n  }\n\n  private async cipherAction(tab: chrome.tabs.Tab, info: chrome.contextMenus.OnClickData) {\n    const id = info.menuItemId.split(\"_\")[1];\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      const retryMessage: LockedVaultPendingNotificationsItem = {\n        commandToRetry: {\n          msg: { command: this.noopCommandSuffix, data: info },\n          sender: { tab: tab },\n        },\n        target: \"contextmenus.background\",\n      };\n      await BrowserApi.tabSendMessageData(\n        tab,\n        \"addToLockedVaultPendingNotifications\",\n        retryMessage\n      );\n\n      BrowserApi.tabSendMessageData(tab, \"promptForLogin\");\n      return;\n    }\n\n    let cipher: CipherView;\n    if (id === this.noopCommandSuffix) {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(tab.url);\n      cipher = ciphers.find((c) => c.reprompt === CipherRepromptType.None);\n    } else {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      cipher = ciphers.find((c) => c.id === id);\n    }\n\n    if (cipher == null) {\n      return;\n    }\n\n    if (info.parentMenuItemId === \"autofill\") {\n      await this.startAutofillPage(tab, cipher);\n    } else if (info.parentMenuItemId === \"copy-username\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.username, { window: window });\n    } else if (info.parentMenuItemId === \"copy-password\") {\n      this.platformUtilsService.copyToClipboard(cipher.login.password, { window: window });\n      this.eventService.collect(EventType.Cipher_ClientCopiedPassword, cipher.id);\n    } else if (info.parentMenuItemId === \"copy-totp\") {\n      const totpValue = await this.totpService.getCode(cipher.login.totp);\n      this.platformUtilsService.copyToClipboard(totpValue, { window: window });\n    }\n  }\n\n  private async startAutofillPage(tab: chrome.tabs.Tab, cipher: CipherView) {\n    this.main.loginToAutoFill = cipher;\n    if (tab == null) {\n      return;\n    }\n\n    BrowserApi.tabSendMessage(tab, {\n      command: \"collectPageDetails\",\n      tab: tab,\n      sender: \"contextMenu\",\n    });\n  }\n}\n","import { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\n\nimport { StateService } from \"../services/abstractions/state.service\";\n\nconst IdleInterval = 60 * 5; // 5 minutes\n\nexport default class IdleBackground {\n  private idle: any;\n  private idleTimer: number = null;\n  private idleState = \"active\";\n\n  constructor(\n    private vaultTimeoutService: VaultTimeoutService,\n    private stateService: StateService,\n    private notificationsService: NotificationsService\n  ) {\n    this.idle = chrome.idle || (browser != null ? browser.idle : null);\n  }\n\n  async init() {\n    if (!this.idle) {\n      return;\n    }\n\n    const idleHandler = (newState: string) => {\n      if (newState === \"active\") {\n        this.notificationsService.reconnectFromActivity();\n      } else {\n        this.notificationsService.disconnectFromInactivity();\n      }\n    };\n    if (this.idle.onStateChanged && this.idle.setDetectionInterval) {\n      this.idle.setDetectionInterval(IdleInterval);\n      this.idle.onStateChanged.addListener(idleHandler);\n    } else {\n      this.pollIdle(idleHandler);\n    }\n\n    if (this.idle.onStateChanged) {\n      this.idle.onStateChanged.addListener(async (newState: string) => {\n        if (newState === \"locked\") {\n          // If the screen is locked or the screensaver activates\n          const timeout = await this.stateService.getVaultTimeout();\n          if (timeout === -2) {\n            // On System Lock vault timeout option\n            const action = await this.stateService.getVaultTimeoutAction();\n            if (action === \"logOut\") {\n              await this.vaultTimeoutService.logOut();\n            } else {\n              await this.vaultTimeoutService.lock(true);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private pollIdle(handler: (newState: string) => void) {\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idle.queryState(IdleInterval, (state: string) => {\n      if (state !== this.idleState) {\n        this.idleState = state;\n        handler(state);\n      }\n      this.idleTimer = window.setTimeout(() => this.pollIdle(handler), 5000);\n    });\n  }\n}\n","import { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { StateService } from \"jslib-common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { EncString } from \"jslib-common/models/domain/encString\";\nimport { SymmetricCryptoKey } from \"jslib-common/models/domain/symmetricCryptoKey\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\n\nimport RuntimeBackground from \"./runtime.background\";\n\nconst MessageValidTimeout = 10 * 1000;\nconst EncryptionAlgorithm = \"sha1\";\n\ntype Message = {\n  command: string;\n\n  // Filled in by this service\n  userId?: string;\n  timestamp?: number;\n\n  // Used for sharing secret\n  publicKey?: string;\n};\n\ntype OuterMessage = {\n  message: Message | EncString;\n  appId: string;\n};\n\ntype ReceiveMessage = {\n  timestamp: number;\n  command: string;\n  response?: any;\n\n  // Unlock key\n  keyB64?: string;\n};\n\ntype ReceiveMessageOuter = {\n  command: string;\n  appId: string;\n\n  // Should only have one of these.\n  message?: EncString;\n  sharedSecret?: string;\n};\n\nexport class NativeMessagingBackground {\n  private connected = false;\n  private connecting: boolean;\n  private port: browser.runtime.Port | chrome.runtime.Port;\n\n  private resolver: any = null;\n  private privateKey: ArrayBuffer = null;\n  private publicKey: ArrayBuffer = null;\n  private secureSetupResolve: any = null;\n  private sharedSecret: SymmetricCryptoKey;\n  private appId: string;\n  private validatingFingerprint: boolean;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private runtimeBackground: RuntimeBackground,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private appIdService: AppIdService,\n    private platformUtilsService: PlatformUtilsService,\n    private stateService: StateService,\n    private logService: LogService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    if (chrome?.permissions?.onAdded) {\n      // Reload extension to activate nativeMessaging\n      chrome.permissions.onAdded.addListener((permissions) => {\n        BrowserApi.reloadExtension(null);\n      });\n    }\n  }\n\n  async connect() {\n    this.appId = await this.appIdService.getAppId();\n    this.stateService.setBiometricFingerprintValidated(false);\n\n    return new Promise<void>((resolve, reject) => {\n      this.port = BrowserApi.connectNative(\"com.8bit.bitwarden\");\n\n      this.connecting = true;\n\n      const connectedCallback = () => {\n        this.connected = true;\n        this.connecting = false;\n        resolve();\n      };\n\n      // Safari has a bundled native component which is always available, no need to\n      // check if the desktop app is running.\n      if (this.platformUtilsService.isSafari()) {\n        connectedCallback();\n      }\n\n      this.port.onMessage.addListener(async (message: ReceiveMessageOuter) => {\n        switch (message.command) {\n          case \"connected\":\n            connectedCallback();\n            break;\n          case \"disconnected\":\n            if (this.connecting) {\n              this.messagingService.send(\"showDialog\", {\n                text: this.i18nService.t(\"startDesktopDesc\"),\n                title: this.i18nService.t(\"startDesktopTitle\"),\n                confirmText: this.i18nService.t(\"ok\"),\n                type: \"error\",\n              });\n              reject();\n            }\n            this.connected = false;\n            this.port.disconnect();\n            break;\n          case \"setupEncryption\": {\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            const encrypted = Utils.fromB64ToArray(message.sharedSecret);\n            const decrypted = await this.cryptoFunctionService.rsaDecrypt(\n              encrypted.buffer,\n              this.privateKey,\n              EncryptionAlgorithm\n            );\n\n            if (this.validatingFingerprint) {\n              this.validatingFingerprint = false;\n              this.stateService.setBiometricFingerprintValidated(true);\n            }\n            this.sharedSecret = new SymmetricCryptoKey(decrypted);\n            this.secureSetupResolve();\n            break;\n          }\n          case \"invalidateEncryption\":\n            // Ignore since it belongs to another device\n            if (message.appId !== this.appId) {\n              return;\n            }\n\n            this.sharedSecret = null;\n            this.privateKey = null;\n            this.connected = false;\n\n            this.messagingService.send(\"showDialog\", {\n              text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n              title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n              confirmText: this.i18nService.t(\"ok\"),\n              type: \"error\",\n            });\n            break;\n          case \"verifyFingerprint\": {\n            if (this.sharedSecret == null) {\n              this.validatingFingerprint = true;\n              this.showFingerprintDialog();\n            }\n            break;\n          }\n          case \"wrongUserId\":\n            this.showWrongUserDialog();\n            break;\n          default:\n            // Ignore since it belongs to another device\n            if (!this.platformUtilsService.isSafari() && message.appId !== this.appId) {\n              return;\n            }\n\n            this.onMessage(message.message);\n        }\n      });\n\n      this.port.onDisconnect.addListener((p: any) => {\n        let error;\n        if (BrowserApi.isWebExtensionsApi) {\n          error = p.error.message;\n        } else {\n          error = chrome.runtime.lastError.message;\n        }\n\n        if (error != null) {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"desktopIntegrationDisabledDesc\"),\n            title: this.i18nService.t(\"desktopIntegrationDisabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n        }\n        this.sharedSecret = null;\n        this.privateKey = null;\n        this.connected = false;\n        reject();\n      });\n    });\n  }\n\n  showWrongUserDialog() {\n    this.messagingService.send(\"showDialog\", {\n      text: this.i18nService.t(\"nativeMessagingWrongUserDesc\"),\n      title: this.i18nService.t(\"nativeMessagingWrongUserTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"error\",\n    });\n  }\n\n  async send(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.userId = await this.stateService.getUserId();\n    message.timestamp = Date.now();\n\n    if (this.platformUtilsService.isSafari()) {\n      this.postMessage(message as any);\n    } else {\n      this.postMessage({ appId: this.appId, message: await this.encryptMessage(message) });\n    }\n  }\n\n  async encryptMessage(message: Message) {\n    if (this.sharedSecret == null) {\n      await this.secureCommunication();\n    }\n\n    return await this.cryptoService.encrypt(JSON.stringify(message), this.sharedSecret);\n  }\n\n  getResponse(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.resolver = resolve;\n    });\n  }\n\n  private postMessage(message: OuterMessage) {\n    // Wrap in try-catch to when the port disconnected without triggering `onDisconnect`.\n    try {\n      this.port.postMessage(message);\n    } catch (e) {\n      this.logService.error(\"NativeMessaging port disconnected, disconnecting.\");\n\n      this.sharedSecret = null;\n      this.privateKey = null;\n      this.connected = false;\n\n      this.messagingService.send(\"showDialog\", {\n        text: this.i18nService.t(\"nativeMessagingInvalidEncryptionDesc\"),\n        title: this.i18nService.t(\"nativeMessagingInvalidEncryptionTitle\"),\n        confirmText: this.i18nService.t(\"ok\"),\n        type: \"error\",\n      });\n    }\n  }\n\n  private async onMessage(rawMessage: ReceiveMessage | EncString) {\n    let message = rawMessage as ReceiveMessage;\n    if (!this.platformUtilsService.isSafari()) {\n      message = JSON.parse(\n        await this.cryptoService.decryptToUtf8(rawMessage as EncString, this.sharedSecret)\n      );\n    }\n\n    if (Math.abs(message.timestamp - Date.now()) > MessageValidTimeout) {\n      this.logService.error(\"NativeMessage is to old, ignoring.\");\n      return;\n    }\n\n    switch (message.command) {\n      case \"biometricUnlock\": {\n        await this.stateService.setBiometricAwaitingAcceptance(null);\n\n        if (message.response === \"not enabled\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotEnabledDesc\"),\n            title: this.i18nService.t(\"biometricsNotEnabledTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        } else if (message.response === \"not supported\") {\n          this.messagingService.send(\"showDialog\", {\n            text: this.i18nService.t(\"biometricsNotSupportedDesc\"),\n            title: this.i18nService.t(\"biometricsNotSupportedTitle\"),\n            confirmText: this.i18nService.t(\"ok\"),\n            type: \"error\",\n          });\n          break;\n        }\n\n        const enabled = await this.stateService.getBiometricUnlock();\n        if (enabled === null || enabled === false) {\n          if (message.response === \"unlocked\") {\n            await this.stateService.setBiometricUnlock(true);\n          }\n          break;\n        }\n\n        // Ignore unlock if already unlocked\n        if (!(await this.vaultTimeoutService.isLocked())) {\n          break;\n        }\n\n        if (message.response === \"unlocked\") {\n          await this.cryptoService.setKey(\n            new SymmetricCryptoKey(Utils.fromB64ToArray(message.keyB64).buffer)\n          );\n\n          // Verify key is correct by attempting to decrypt a secret\n          try {\n            await this.cryptoService.getFingerprint(await this.stateService.getUserId());\n          } catch (e) {\n            this.logService.error(\"Unable to verify key: \" + e);\n            await this.cryptoService.clearKey();\n            this.showWrongUserDialog();\n\n            // Exit early\n            if (this.resolver) {\n              this.resolver(message);\n            }\n            return;\n          }\n\n          await this.stateService.setBiometricLocked(false);\n          this.runtimeBackground.processMessage({ command: \"unlocked\" }, null, null);\n        }\n        break;\n      }\n      default:\n        this.logService.error(\"NativeMessage, got unknown command: \" + message.command);\n        break;\n    }\n\n    if (this.resolver) {\n      this.resolver(message);\n    }\n  }\n\n  private async secureCommunication() {\n    const [publicKey, privateKey] = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    this.publicKey = publicKey;\n    this.privateKey = privateKey;\n\n    this.sendUnencrypted({\n      command: \"setupEncryption\",\n      publicKey: Utils.fromBufferToB64(publicKey),\n      userId: await this.stateService.getUserId(),\n    });\n\n    return new Promise((resolve, reject) => (this.secureSetupResolve = resolve));\n  }\n\n  private async sendUnencrypted(message: Message) {\n    if (!this.connected) {\n      await this.connect();\n    }\n\n    message.timestamp = Date.now();\n\n    this.postMessage({ appId: this.appId, message: message });\n  }\n\n  private async showFingerprintDialog() {\n    const fingerprint = (\n      await this.cryptoService.getFingerprint(await this.stateService.getUserId(), this.publicKey)\n    ).join(\" \");\n\n    this.messagingService.send(\"showDialog\", {\n      html: `${this.i18nService.t(\n        \"desktopIntegrationVerificationText\"\n      )}<br><br><strong>${fingerprint}</strong>`,\n      title: this.i18nService.t(\"desktopSyncVerificationTitle\"),\n      confirmText: this.i18nService.t(\"ok\"),\n      type: \"warning\",\n    });\n  }\n}\n","export enum NotificationQueueMessageType {\n  AddLogin = 0,\n  ChangePassword = 1,\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { PolicyType } from \"jslib-common/enums/policyType\";\nimport { Utils } from \"jslib-common/misc/utils\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { LoginUriView } from \"jslib-common/models/view/loginUriView\";\nimport { LoginView } from \"jslib-common/models/view/loginView\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport { StateService } from \"../services/abstractions/state.service\";\n\nimport MainBackground from \"./main.background\";\nimport AddChangePasswordQueueMessage from \"./models/addChangePasswordQueueMessage\";\nimport AddLoginQueueMessage from \"./models/addLoginQueueMessage\";\nimport AddLoginRuntimeMessage from \"./models/addLoginRuntimeMessage\";\nimport ChangePasswordRuntimeMessage from \"./models/changePasswordRuntimeMessage\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\nimport { NotificationQueueMessageType } from \"./models/notificationQueueMessageType\";\n\nexport default class NotificationBackground {\n  private notificationQueue: (AddLoginQueueMessage | AddChangePasswordQueueMessage)[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private cipherService: CipherService,\n    private vaultTimeoutService: VaultTimeoutService,\n    private policyService: PolicyService,\n    private folderService: FolderService,\n    private stateService: StateService\n  ) {}\n\n  async init() {\n    if (chrome.runtime == null) {\n      return;\n    }\n\n    BrowserApi.messageListener(\n      \"notification.background\",\n      async (msg: any, sender: chrome.runtime.MessageSender) => {\n        await this.processMessage(msg, sender);\n      }\n    );\n\n    this.cleanupNotificationQueue();\n  }\n\n  async processMessage(msg: any, sender: chrome.runtime.MessageSender) {\n    switch (msg.command) {\n      case \"unlockCompleted\":\n        if (msg.data.target !== \"notification.background\") {\n          return;\n        }\n        await this.processMessage(msg.data.commandToRetry.msg, msg.data.commandToRetry.sender);\n        break;\n      case \"bgGetDataForTab\":\n        await this.getDataForTab(sender.tab, msg.responseCommand);\n        break;\n      case \"bgCloseNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"closeNotificationBar\");\n        break;\n      case \"bgAdjustNotificationBar\":\n        await BrowserApi.tabSendMessageData(sender.tab, \"adjustNotificationBar\", msg.data);\n        break;\n      case \"bgAddLogin\":\n        await this.addLogin(msg.login, sender.tab);\n        break;\n      case \"bgChangedPassword\":\n        await this.changedPassword(msg.data, sender.tab);\n        break;\n      case \"bgAddClose\":\n      case \"bgChangeClose\":\n        this.removeTabFromNotificationQueue(sender.tab);\n        break;\n      case \"bgAddSave\":\n      case \"bgChangeSave\":\n        if (await this.vaultTimeoutService.isLocked()) {\n          const retryMessage: LockedVaultPendingNotificationsItem = {\n            commandToRetry: {\n              msg: msg,\n              sender: sender,\n            },\n            target: \"notification.background\",\n          };\n          await BrowserApi.tabSendMessageData(\n            sender.tab,\n            \"addToLockedVaultPendingNotifications\",\n            retryMessage\n          );\n          await BrowserApi.tabSendMessageData(sender.tab, \"promptForLogin\");\n          return;\n        }\n        await this.saveOrUpdateCredentials(sender.tab, msg.folder);\n        break;\n      case \"bgNeverSave\":\n        await this.saveNever(sender.tab);\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"notificationBar\": {\n            const forms = this.autofillService.getFormsWithPasswordFields(msg.details);\n            await BrowserApi.tabSendMessageData(msg.tab, \"notificationBarPageDetails\", {\n              details: msg.details,\n              forms: forms,\n            });\n            break;\n          }\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async checkNotificationQueue(tab: chrome.tabs.Tab = null): Promise<void> {\n    if (this.notificationQueue.length === 0) {\n      return;\n    }\n\n    if (tab != null) {\n      this.doNotificationQueueCheck(tab);\n      return;\n    }\n\n    const currentTab = await BrowserApi.getTabFromCurrentWindow();\n    if (currentTab != null) {\n      this.doNotificationQueueCheck(currentTab);\n    }\n  }\n\n  private cleanupNotificationQueue() {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].expires < new Date()) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n    setTimeout(() => this.cleanupNotificationQueue(), 2 * 60 * 1000); // check every 2 minutes\n  }\n\n  private doNotificationQueueCheck(tab: chrome.tabs.Tab): void {\n    if (tab == null) {\n      return;\n    }\n\n    const tabDomain = Utils.getDomain(tab.url);\n    if (tabDomain == null) {\n      return;\n    }\n\n    for (let i = 0; i < this.notificationQueue.length; i++) {\n      if (\n        this.notificationQueue[i].tabId !== tab.id ||\n        this.notificationQueue[i].domain !== tabDomain\n      ) {\n        continue;\n      }\n\n      if (this.notificationQueue[i].type === NotificationQueueMessageType.AddLogin) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"add\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      } else if (this.notificationQueue[i].type === NotificationQueueMessageType.ChangePassword) {\n        BrowserApi.tabSendMessageData(tab, \"openNotificationBar\", {\n          type: \"change\",\n          typeData: {\n            isVaultLocked: this.notificationQueue[i].wasVaultLocked,\n          },\n        });\n      }\n      break;\n    }\n  }\n\n  private removeTabFromNotificationQueue(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      if (this.notificationQueue[i].tabId === tab.id) {\n        this.notificationQueue.splice(i, 1);\n      }\n    }\n  }\n\n  private async addLogin(loginInfo: AddLoginRuntimeMessage, tab: chrome.tabs.Tab) {\n    if (!(await this.stateService.getIsAuthenticated())) {\n      return;\n    }\n\n    const loginDomain = Utils.getDomain(loginInfo.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    let normalizedUsername = loginInfo.username;\n    if (normalizedUsername != null) {\n      normalizedUsername = normalizedUsername.toLowerCase();\n    }\n\n    const disabledAddLogin = await this.stateService.getDisableAddLoginNotification();\n    if (await this.vaultTimeoutService.isLocked()) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab, true);\n      return;\n    }\n\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(loginInfo.url);\n    const usernameMatches = ciphers.filter(\n      (c) => c.login.username != null && c.login.username.toLowerCase() === normalizedUsername\n    );\n    if (usernameMatches.length === 0) {\n      if (disabledAddLogin) {\n        return;\n      }\n\n      if (!(await this.allowPersonalOwnership())) {\n        return;\n      }\n\n      this.pushAddLoginToQueue(loginDomain, loginInfo, tab);\n    } else if (\n      usernameMatches.length === 1 &&\n      usernameMatches[0].login.password !== loginInfo.password\n    ) {\n      const disabledChangePassword =\n        await this.stateService.getDisableChangedPasswordNotification();\n      if (disabledChangePassword) {\n        return;\n      }\n      this.pushChangePasswordToQueue(usernameMatches[0].id, loginDomain, loginInfo.password, tab);\n    }\n  }\n\n  private async pushAddLoginToQueue(\n    loginDomain: string,\n    loginInfo: AddLoginRuntimeMessage,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddLoginQueueMessage = {\n      type: NotificationQueueMessageType.AddLogin,\n      username: loginInfo.username,\n      password: loginInfo.password,\n      domain: loginDomain,\n      uri: loginInfo.url,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async changedPassword(changeData: ChangePasswordRuntimeMessage, tab: chrome.tabs.Tab) {\n    const loginDomain = Utils.getDomain(changeData.url);\n    if (loginDomain == null) {\n      return;\n    }\n\n    if (await this.vaultTimeoutService.isLocked()) {\n      this.pushChangePasswordToQueue(null, loginDomain, changeData.newPassword, tab, true);\n      return;\n    }\n\n    let id: string = null;\n    const ciphers = await this.cipherService.getAllDecryptedForUrl(changeData.url);\n    if (changeData.currentPassword != null) {\n      const passwordMatches = ciphers.filter(\n        (c) => c.login.password === changeData.currentPassword\n      );\n      if (passwordMatches.length === 1) {\n        id = passwordMatches[0].id;\n      }\n    } else if (ciphers.length === 1) {\n      id = ciphers[0].id;\n    }\n    if (id != null) {\n      this.pushChangePasswordToQueue(id, loginDomain, changeData.newPassword, tab);\n    }\n  }\n\n  private async pushChangePasswordToQueue(\n    cipherId: string,\n    loginDomain: string,\n    newPassword: string,\n    tab: chrome.tabs.Tab,\n    isVaultLocked = false\n  ) {\n    // remove any old messages for this tab\n    this.removeTabFromNotificationQueue(tab);\n    const message: AddChangePasswordQueueMessage = {\n      type: NotificationQueueMessageType.ChangePassword,\n      cipherId: cipherId,\n      newPassword: newPassword,\n      domain: loginDomain,\n      tabId: tab.id,\n      expires: new Date(new Date().getTime() + 5 * 60000), // 5 minutes\n      wasVaultLocked: isVaultLocked,\n    };\n    this.notificationQueue.push(message);\n    await this.checkNotificationQueue(tab);\n  }\n\n  private async saveOrUpdateCredentials(tab: chrome.tabs.Tab, folderId?: string) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        (queueMessage.type !== NotificationQueueMessageType.AddLogin &&\n          queueMessage.type !== NotificationQueueMessageType.ChangePassword)\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      if (queueMessage.type === NotificationQueueMessageType.ChangePassword) {\n        const changePasswordMessage = queueMessage as AddChangePasswordQueueMessage;\n        const cipher = await this.getDecryptedCipherById(changePasswordMessage.cipherId);\n        if (cipher == null) {\n          return;\n        }\n        await this.updateCipher(cipher, changePasswordMessage.newPassword);\n        return;\n      }\n\n      if (queueMessage.type === NotificationQueueMessageType.AddLogin) {\n        if (!queueMessage.wasVaultLocked) {\n          await this.createNewCipher(queueMessage as AddLoginQueueMessage, folderId);\n          BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n          return;\n        }\n\n        // If the vault was locked, check if a cipher needs updating instead of creating a new one\n        const addLoginMessage = queueMessage as AddLoginQueueMessage;\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(addLoginMessage.uri);\n        const usernameMatches = ciphers.filter(\n          (c) =>\n            c.login.username != null && c.login.username.toLowerCase() === addLoginMessage.username\n        );\n\n        if (usernameMatches.length >= 1) {\n          await this.updateCipher(usernameMatches[0], addLoginMessage.password);\n          return;\n        }\n\n        await this.createNewCipher(addLoginMessage, folderId);\n        BrowserApi.tabSendMessageData(tab, \"addedCipher\");\n      }\n    }\n  }\n\n  private async createNewCipher(queueMessage: AddLoginQueueMessage, folderId: string) {\n    const loginModel = new LoginView();\n    const loginUri = new LoginUriView();\n    loginUri.uri = queueMessage.uri;\n    loginModel.uris = [loginUri];\n    loginModel.username = queueMessage.username;\n    loginModel.password = queueMessage.password;\n    const model = new CipherView();\n    model.name = Utils.getHostname(queueMessage.uri) || queueMessage.domain;\n    model.name = model.name.replace(/^www\\./, \"\");\n    model.type = CipherType.Login;\n    model.login = loginModel;\n\n    if (!Utils.isNullOrWhitespace(folderId)) {\n      const folders = await this.folderService.getAllDecrypted();\n      if (folders.some((x) => x.id === folderId)) {\n        model.folderId = folderId;\n      }\n    }\n\n    const cipher = await this.cipherService.encrypt(model);\n    await this.cipherService.saveWithServer(cipher);\n  }\n\n  private async getDecryptedCipherById(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.type === CipherType.Login) {\n      return await cipher.decrypt();\n    }\n    return null;\n  }\n\n  private async updateCipher(cipher: CipherView, newPassword: string) {\n    if (cipher != null && cipher.type === CipherType.Login) {\n      cipher.login.password = newPassword;\n      const newCipher = await this.cipherService.encrypt(cipher);\n      await this.cipherService.saveWithServer(newCipher);\n    }\n  }\n\n  private async saveNever(tab: chrome.tabs.Tab) {\n    for (let i = this.notificationQueue.length - 1; i >= 0; i--) {\n      const queueMessage = this.notificationQueue[i];\n      if (\n        queueMessage.tabId !== tab.id ||\n        queueMessage.type !== NotificationQueueMessageType.AddLogin\n      ) {\n        continue;\n      }\n\n      const tabDomain = Utils.getDomain(tab.url);\n      if (tabDomain != null && tabDomain !== queueMessage.domain) {\n        continue;\n      }\n\n      this.notificationQueue.splice(i, 1);\n      BrowserApi.tabSendMessageData(tab, \"closeNotificationBar\");\n\n      const hostname = Utils.getHostname(tab.url);\n      await this.cipherService.saveNeverDomain(hostname);\n    }\n  }\n\n  private async getDataForTab(tab: chrome.tabs.Tab, responseCommand: string) {\n    const responseData: any = {};\n    if (responseCommand === \"notificationBarGetFoldersList\") {\n      responseData.folders = await this.folderService.getAllDecrypted();\n    }\n\n    await BrowserApi.tabSendMessageData(tab, responseCommand, responseData);\n  }\n\n  private async allowPersonalOwnership(): Promise<boolean> {\n    return !(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership));\n  }\n}\n","import { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { LogService } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { SystemService } from \"jslib-common/abstractions/system.service\";\nimport { Utils } from \"jslib-common/misc/utils\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { AutofillService } from \"../services/abstractions/autofill.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\n\nimport MainBackground from \"./main.background\";\nimport LockedVaultPendingNotificationsItem from \"./models/lockedVaultPendingNotificationsItem\";\n\nexport default class RuntimeBackground {\n  private autofillTimeout: any;\n  private pageDetailsToAutoFill: any[] = [];\n  private onInstalledReason: string = null;\n  private lockedVaultPendingNotifications: LockedVaultPendingNotificationsItem[] = [];\n\n  constructor(\n    private main: MainBackground,\n    private autofillService: AutofillService,\n    private platformUtilsService: BrowserPlatformUtilsService,\n    private i18nService: I18nService,\n    private notificationsService: NotificationsService,\n    private systemService: SystemService,\n    private environmentService: EnvironmentService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {\n    // onInstalled listener must be wired up before anything else, so we do it in the ctor\n    chrome.runtime.onInstalled.addListener((details: any) => {\n      this.onInstalledReason = details.reason;\n    });\n  }\n\n  async init() {\n    if (!chrome.runtime) {\n      return;\n    }\n\n    await this.checkOnInstalled();\n    const backgroundMessageListener = async (\n      msg: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => {\n      await this.processMessage(msg, sender, sendResponse);\n    };\n\n    BrowserApi.messageListener(\"runtime.background\", backgroundMessageListener);\n    if (this.main.isPrivateMode) {\n      (window as any).bitwardenBackgroundMessageListener = backgroundMessageListener;\n    }\n  }\n\n  async processMessage(msg: any, sender: any, sendResponse: any) {\n    switch (msg.command) {\n      case \"loggedIn\":\n      case \"unlocked\": {\n        let item: LockedVaultPendingNotificationsItem;\n\n        if (this.lockedVaultPendingNotifications?.length > 0) {\n          await BrowserApi.closeLoginTab();\n\n          item = this.lockedVaultPendingNotifications.pop();\n          if (item.commandToRetry.sender?.tab?.id) {\n            await BrowserApi.focusSpecifiedTab(item.commandToRetry.sender.tab.id);\n          }\n        }\n\n        await this.main.setIcon();\n        await this.main.refreshBadgeAndMenu(false);\n        this.notificationsService.updateConnection(msg.command === \"unlocked\");\n        this.systemService.cancelProcessReload();\n\n        if (item) {\n          await BrowserApi.tabSendMessageData(\n            item.commandToRetry.sender.tab,\n            \"unlockCompleted\",\n            item\n          );\n        }\n        break;\n      }\n      case \"addToLockedVaultPendingNotifications\":\n        this.lockedVaultPendingNotifications.push(msg.data);\n        break;\n      case \"logout\":\n        await this.main.logout(msg.expired, msg.userId);\n        break;\n      case \"syncCompleted\":\n        if (msg.successfully) {\n          setTimeout(async () => await this.main.refreshBadgeAndMenu(), 2000);\n        }\n        break;\n      case \"openPopup\":\n        await this.main.openPopup();\n        break;\n      case \"promptForLogin\":\n        await BrowserApi.createNewTab(\"popup/index.html?uilocation=popout\", true, true);\n        break;\n      case \"showDialogResolve\":\n        this.platformUtilsService.resolveDialogPromise(msg.dialogId, msg.confirmed);\n        break;\n      case \"bgCollectPageDetails\":\n        await this.main.collectPageDetailsForContentScript(sender.tab, msg.sender, sender.frameId);\n        break;\n      case \"bgUpdateContextMenu\":\n      case \"editedCipher\":\n      case \"addedCipher\":\n      case \"deletedCipher\":\n        await this.main.refreshBadgeAndMenu();\n        break;\n      case \"bgReseedStorage\":\n        await this.main.reseedStorage();\n        break;\n      case \"collectPageDetailsResponse\":\n        switch (msg.sender) {\n          case \"autofiller\":\n          case \"autofill_cmd\": {\n            const totpCode = await this.autofillService.doAutoFillActiveTab(\n              [\n                {\n                  frameId: sender.frameId,\n                  tab: msg.tab,\n                  details: msg.details,\n                },\n              ],\n              msg.sender === \"autofill_cmd\"\n            );\n            if (totpCode != null) {\n              this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n            }\n            break;\n          }\n          case \"contextMenu\":\n            clearTimeout(this.autofillTimeout);\n            this.pageDetailsToAutoFill.push({\n              frameId: sender.frameId,\n              tab: msg.tab,\n              details: msg.details,\n            });\n            this.autofillTimeout = setTimeout(async () => await this.autofillPage(), 300);\n            break;\n          default:\n            break;\n        }\n        break;\n      case \"authResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        try {\n          BrowserApi.createNewTab(\n            \"popup/index.html?uilocation=popout#/sso?code=\" +\n              encodeURIComponent(msg.code) +\n              \"&state=\" +\n              encodeURIComponent(msg.state)\n          );\n        } catch {\n          this.logService.error(\"Unable to open sso popout tab\");\n        }\n        break;\n      }\n      case \"webAuthnResult\": {\n        const vaultUrl = this.environmentService.getWebVaultUrl();\n\n        if (msg.referrer == null || Utils.getHostname(vaultUrl) !== msg.referrer) {\n          return;\n        }\n\n        const params =\n          `webAuthnResponse=${encodeURIComponent(msg.data)};` +\n          `remember=${encodeURIComponent(msg.remember)}`;\n        BrowserApi.createNewTab(\n          `popup/index.html?uilocation=popout#/2fa;${params}`,\n          undefined,\n          false\n        );\n        break;\n      }\n      case \"reloadPopup\":\n        this.messagingService.send(\"reloadPopup\");\n        break;\n      case \"emailVerificationRequired\":\n        this.messagingService.send(\"showDialog\", {\n          dialogId: \"emailVerificationRequired\",\n          title: this.i18nService.t(\"emailVerificationRequired\"),\n          text: this.i18nService.t(\"emailVerificationRequiredDesc\"),\n          confirmText: this.i18nService.t(\"ok\"),\n          type: \"info\",\n        });\n        break;\n      case \"getClickedElementResponse\":\n        this.platformUtilsService.copyToClipboard(msg.identifier, { window: window });\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async autofillPage() {\n    const totpCode = await this.autofillService.doAutoFill({\n      cipher: this.main.loginToAutoFill,\n      pageDetails: this.pageDetailsToAutoFill,\n      fillNewPassword: true,\n    });\n\n    if (totpCode != null) {\n      this.platformUtilsService.copyToClipboard(totpCode, { window: window });\n    }\n\n    // reset\n    this.main.loginToAutoFill = null;\n    this.pageDetailsToAutoFill = [];\n  }\n\n  private async checkOnInstalled() {\n    setTimeout(async () => {\n      if (this.onInstalledReason != null) {\n        if (this.onInstalledReason === \"install\") {\n          BrowserApi.createNewTab(\"https://bitwarden.com/browser-start/\");\n        }\n\n        this.onInstalledReason = null;\n      }\n    }, 100);\n  }\n}\n","import MainBackground from \"./main.background\";\nimport NotificationBackground from \"./notification.background\";\n\nexport default class TabsBackground {\n  constructor(\n    private main: MainBackground,\n    private notificationBackground: NotificationBackground\n  ) {}\n\n  async init() {\n    if (!chrome.tabs) {\n      return;\n    }\n\n    chrome.tabs.onActivated.addListener(async (activeInfo: chrome.tabs.TabActiveInfo) => {\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabActivated\");\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onReplaced.addListener(async (addedTabId: number, removedTabId: number) => {\n      if (this.main.onReplacedRan) {\n        return;\n      }\n      this.main.onReplacedRan = true;\n      await this.notificationBackground.checkNotificationQueue();\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"tabReplaced\");\n      this.main.messagingService.send(\"tabChanged\");\n    });\n\n    chrome.tabs.onUpdated.addListener(\n      async (tabId: number, changeInfo: chrome.tabs.TabChangeInfo, tab: chrome.tabs.Tab) => {\n        if (this.main.onUpdatedRan) {\n          return;\n        }\n        this.main.onUpdatedRan = true;\n        await this.notificationBackground.checkNotificationQueue(tab);\n        await this.main.refreshBadgeAndMenu();\n        this.main.messagingService.send(\"tabUpdated\");\n        this.main.messagingService.send(\"tabChanged\");\n      }\n    );\n  }\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { UriMatchType } from \"jslib-common/enums/uriMatchType\";\n\nexport default class WebRequestBackground {\n  private pendingAuthRequests: any[] = [];\n  private webRequest: any;\n  private isFirefox: boolean;\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private vaultTimeoutService: VaultTimeoutService\n  ) {\n    this.webRequest = (window as any).chrome.webRequest;\n    this.isFirefox = platformUtilsService.isFirefox();\n  }\n\n  async init() {\n    if (!this.webRequest || !this.webRequest.onAuthRequired) {\n      return;\n    }\n\n    this.webRequest.onAuthRequired.addListener(\n      async (details: any, callback: any) => {\n        if (!details.url || this.pendingAuthRequests.indexOf(details.requestId) !== -1) {\n          if (callback) {\n            callback();\n          }\n          return;\n        }\n\n        this.pendingAuthRequests.push(details.requestId);\n\n        if (this.isFirefox) {\n          // eslint-disable-next-line\n          return new Promise(async (resolve, reject) => {\n            await this.resolveAuthCredentials(details.url, resolve, reject);\n          });\n        } else {\n          await this.resolveAuthCredentials(details.url, callback, callback);\n        }\n      },\n      { urls: [\"http://*/*\", \"https://*/*\"] },\n      [this.isFirefox ? \"blocking\" : \"asyncBlocking\"]\n    );\n\n    this.webRequest.onCompleted.addListener((details: any) => this.completeAuthRequest(details), {\n      urls: [\"http://*/*\"],\n    });\n    this.webRequest.onErrorOccurred.addListener(\n      (details: any) => this.completeAuthRequest(details),\n      {\n        urls: [\"http://*/*\"],\n      }\n    );\n  }\n\n  // eslint-disable-next-line\n  private async resolveAuthCredentials(domain: string, success: Function, error: Function) {\n    if (await this.vaultTimeoutService.isLocked()) {\n      error();\n      return;\n    }\n\n    try {\n      const ciphers = await this.cipherService.getAllDecryptedForUrl(\n        domain,\n        null,\n        UriMatchType.Host\n      );\n      if (ciphers == null || ciphers.length !== 1) {\n        error();\n        return;\n      }\n\n      success({\n        authCredentials: {\n          username: ciphers[0].login.username,\n          password: ciphers[0].login.password,\n        },\n      });\n    } catch {\n      error();\n    }\n  }\n\n  private completeAuthRequest(details: any) {\n    const i = this.pendingAuthRequests.indexOf(details.requestId);\n    if (i > -1) {\n      this.pendingAuthRequests.splice(i, 1);\n    }\n  }\n}\n","import MainBackground from \"./main.background\";\n\nexport default class WindowsBackground {\n  private windows: any;\n\n  constructor(private main: MainBackground) {\n    this.windows = chrome.windows;\n  }\n\n  async init() {\n    if (!this.windows) {\n      return;\n    }\n\n    this.windows.onFocusChanged.addListener(async (windowId: any) => {\n      if (windowId === null || windowId < 0) {\n        return;\n      }\n\n      await this.main.refreshBadgeAndMenu();\n      this.main.messagingService.send(\"windowFocused\");\n      this.main.messagingService.send(\"windowChanged\");\n    });\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService as CipherServiceAbstraction } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService as CryptoServiceAbstraction } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"jslib-common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"jslib-common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService as FolderServiceAbstraction } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService as I18nServiceAbstraction } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService as PolicyServiceAbstraction } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService as ProviderServiceAbstraction } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"jslib-common/abstractions/settings.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"jslib-common/abstractions/sync.service\";\nimport { SystemService as SystemServiceAbstraction } from \"jslib-common/abstractions/system.service\";\nimport { TokenService as TokenServiceAbstraction } from \"jslib-common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"jslib-common/abstractions/userVerification.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { CipherRepromptType } from \"jslib-common/enums/cipherRepromptType\";\nimport { CipherType } from \"jslib-common/enums/cipherType\";\nimport { StateFactory } from \"jslib-common/factories/stateFactory\";\nimport { GlobalState } from \"jslib-common/models/domain/globalState\";\nimport { CipherView } from \"jslib-common/models/view/cipherView\";\nimport { ApiService } from \"jslib-common/services/api.service\";\nimport { AppIdService } from \"jslib-common/services/appId.service\";\nimport { AuditService } from \"jslib-common/services/audit.service\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { CipherService } from \"jslib-common/services/cipher.service\";\nimport { CollectionService } from \"jslib-common/services/collection.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { ContainerService } from \"jslib-common/services/container.service\";\nimport { EnvironmentService } from \"jslib-common/services/environment.service\";\nimport { EventService } from \"jslib-common/services/event.service\";\nimport { ExportService } from \"jslib-common/services/export.service\";\nimport { FileUploadService } from \"jslib-common/services/fileUpload.service\";\nimport { FolderService } from \"jslib-common/services/folder.service\";\nimport { KeyConnectorService } from \"jslib-common/services/keyConnector.service\";\nimport { NotificationsService } from \"jslib-common/services/notifications.service\";\nimport { OrganizationService } from \"jslib-common/services/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/services/passwordGeneration.service\";\nimport { PolicyService } from \"jslib-common/services/policy.service\";\nimport { ProviderService } from \"jslib-common/services/provider.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\nimport { SendService } from \"jslib-common/services/send.service\";\nimport { SettingsService } from \"jslib-common/services/settings.service\";\nimport { StateMigrationService } from \"jslib-common/services/stateMigration.service\";\nimport { SyncService } from \"jslib-common/services/sync.service\";\nimport { SystemService } from \"jslib-common/services/system.service\";\nimport { TokenService } from \"jslib-common/services/token.service\";\nimport { TotpService } from \"jslib-common/services/totp.service\";\nimport { TwoFactorService } from \"jslib-common/services/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/services/userVerification.service\";\nimport { WebCryptoFunctionService } from \"jslib-common/services/webCryptoFunction.service\";\n\nimport { BrowserApi } from \"../browser/browserApi\";\nimport { SafariApp } from \"../browser/safariApp\";\nimport { Account } from \"../models/account\";\nimport { PopupUtilsService } from \"../popup/services/popup-utils.service\";\nimport { AutofillService as AutofillServiceAbstraction } from \"../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../services/abstractions/state.service\";\nimport AutofillService from \"../services/autofill.service\";\nimport { BrowserCryptoService } from \"../services/browserCrypto.service\";\nimport BrowserMessagingService from \"../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModeBackgroundService from \"../services/browserMessagingPrivateModeBackground.service\";\nimport BrowserPlatformUtilsService from \"../services/browserPlatformUtils.service\";\nimport BrowserStorageService from \"../services/browserStorage.service\";\nimport I18nService from \"../services/i18n.service\";\nimport { StateService } from \"../services/state.service\";\nimport VaultTimeoutService from \"../services/vaultTimeout.service\";\n\nimport CommandsBackground from \"./commands.background\";\nimport ContextMenusBackground from \"./contextMenus.background\";\nimport IdleBackground from \"./idle.background\";\nimport IconDetails from \"./models/iconDetails\";\nimport { NativeMessagingBackground } from \"./nativeMessaging.background\";\nimport NotificationBackground from \"./notification.background\";\nimport RuntimeBackground from \"./runtime.background\";\nimport TabsBackground from \"./tabs.background\";\nimport WebRequestBackground from \"./webRequest.background\";\nimport WindowsBackground from \"./windows.background\";\n\nexport default class MainBackground {\n  messagingService: MessagingServiceAbstraction;\n  storageService: StorageServiceAbstraction;\n  secureStorageService: StorageServiceAbstraction;\n  i18nService: I18nServiceAbstraction;\n  platformUtilsService: PlatformUtilsServiceAbstraction;\n  logService: LogServiceAbstraction;\n  cryptoService: CryptoServiceAbstraction;\n  cryptoFunctionService: CryptoFunctionServiceAbstraction;\n  tokenService: TokenServiceAbstraction;\n  appIdService: AppIdServiceAbstraction;\n  apiService: ApiServiceAbstraction;\n  environmentService: EnvironmentServiceAbstraction;\n  settingsService: SettingsServiceAbstraction;\n  cipherService: CipherServiceAbstraction;\n  folderService: FolderServiceAbstraction;\n  collectionService: CollectionServiceAbstraction;\n  vaultTimeoutService: VaultTimeoutServiceAbstraction;\n  syncService: SyncServiceAbstraction;\n  passwordGenerationService: PasswordGenerationServiceAbstraction;\n  totpService: TotpServiceAbstraction;\n  autofillService: AutofillServiceAbstraction;\n  containerService: ContainerService;\n  auditService: AuditServiceAbstraction;\n  authService: AuthServiceAbstraction;\n  exportService: ExportServiceAbstraction;\n  searchService: SearchServiceAbstraction;\n  notificationsService: NotificationsServiceAbstraction;\n  stateService: StateServiceAbstraction;\n  stateMigrationService: StateMigrationService;\n  systemService: SystemServiceAbstraction;\n  eventService: EventServiceAbstraction;\n  policyService: PolicyServiceAbstraction;\n  popupUtilsService: PopupUtilsService;\n  sendService: SendServiceAbstraction;\n  fileUploadService: FileUploadServiceAbstraction;\n  organizationService: OrganizationServiceAbstraction;\n  providerService: ProviderServiceAbstraction;\n  keyConnectorService: KeyConnectorServiceAbstraction;\n  userVerificationService: UserVerificationServiceAbstraction;\n  twoFactorService: TwoFactorServiceAbstraction;\n\n  onUpdatedRan: boolean;\n  onReplacedRan: boolean;\n  loginToAutoFill: CipherView = null;\n\n  private commandsBackground: CommandsBackground;\n  private contextMenusBackground: ContextMenusBackground;\n  private idleBackground: IdleBackground;\n  private notificationBackground: NotificationBackground;\n  private runtimeBackground: RuntimeBackground;\n  private tabsBackground: TabsBackground;\n  private webRequestBackground: WebRequestBackground;\n  private windowsBackground: WindowsBackground;\n\n  private sidebarAction: any;\n  private buildingContextMenu: boolean;\n  private menuOptionsLoaded: any[] = [];\n  private syncTimeout: any;\n  private isSafari: boolean;\n  private nativeMessagingBackground: NativeMessagingBackground;\n\n  constructor(public isPrivateMode: boolean = false) {\n    // Services\n    this.messagingService = isPrivateMode\n      ? new BrowserMessagingPrivateModeBackgroundService()\n      : new BrowserMessagingService();\n    this.storageService = new BrowserStorageService();\n    this.secureStorageService = new BrowserStorageService();\n    this.logService = new ConsoleLogService(false);\n    this.stateMigrationService = new StateMigrationService(\n      this.storageService,\n      this.secureStorageService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.stateService = new StateService(\n      this.storageService,\n      this.secureStorageService,\n      this.logService,\n      this.stateMigrationService,\n      new StateFactory(GlobalState, Account)\n    );\n    this.platformUtilsService = new BrowserPlatformUtilsService(\n      this.messagingService,\n      this.stateService,\n      (clipboardValue, clearMs) => {\n        if (this.systemService != null) {\n          this.systemService.clearClipboard(clipboardValue, clearMs);\n        }\n      },\n      async () => {\n        if (this.nativeMessagingBackground != null) {\n          const promise = this.nativeMessagingBackground.getResponse();\n\n          try {\n            await this.nativeMessagingBackground.send({ command: \"biometricUnlock\" });\n          } catch (e) {\n            return Promise.reject(e);\n          }\n\n          return promise.then((result) => result.response === \"unlocked\");\n        }\n      }\n    );\n    this.i18nService = new I18nService(BrowserApi.getUILanguage(window));\n    this.cryptoFunctionService = new WebCryptoFunctionService(window, this.platformUtilsService);\n    this.cryptoService = new BrowserCryptoService(\n      this.cryptoFunctionService,\n      this.platformUtilsService,\n      this.logService,\n      this.stateService\n    );\n    this.tokenService = new TokenService(this.stateService);\n    this.appIdService = new AppIdService(this.storageService);\n    this.environmentService = new EnvironmentService(this.stateService);\n    this.apiService = new ApiService(\n      this.tokenService,\n      this.platformUtilsService,\n      this.environmentService,\n      (expired: boolean) => this.logout(expired)\n    );\n    this.settingsService = new SettingsService(this.stateService);\n    this.fileUploadService = new FileUploadService(this.logService, this.apiService);\n    this.cipherService = new CipherService(\n      this.cryptoService,\n      this.settingsService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      () => this.searchService,\n      this.logService,\n      this.stateService\n    );\n    this.folderService = new FolderService(\n      this.cryptoService,\n      this.apiService,\n      this.i18nService,\n      this.cipherService,\n      this.stateService\n    );\n    this.collectionService = new CollectionService(\n      this.cryptoService,\n      this.i18nService,\n      this.stateService\n    );\n    this.searchService = new SearchService(this.cipherService, this.logService, this.i18nService);\n    this.sendService = new SendService(\n      this.cryptoService,\n      this.apiService,\n      this.fileUploadService,\n      this.i18nService,\n      this.cryptoFunctionService,\n      this.stateService\n    );\n    this.organizationService = new OrganizationService(this.stateService);\n    this.policyService = new PolicyService(\n      this.stateService,\n      this.organizationService,\n      this.apiService\n    );\n    this.keyConnectorService = new KeyConnectorService(\n      this.stateService,\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.logService,\n      this.organizationService,\n      this.cryptoFunctionService\n    );\n\n    const vaultTimeoutServiceCallbacks = {\n      locked: async (userId?: string) => {\n        if (this.notificationsService != null) {\n          this.notificationsService.updateConnection(false);\n        }\n        await this.setIcon();\n        await this.refreshBadgeAndMenu(true);\n        if (this.systemService != null) {\n          await this.systemService.clearPendingClipboard();\n          await this.reloadProcess();\n        }\n      },\n      logout: async (userId?: string) => await this.logout(false, userId),\n    };\n\n    this.vaultTimeoutService = new VaultTimeoutService(\n      this.cipherService,\n      this.folderService,\n      this.collectionService,\n      this.cryptoService,\n      this.platformUtilsService,\n      this.messagingService,\n      this.searchService,\n      this.tokenService,\n      this.policyService,\n      this.keyConnectorService,\n      this.stateService,\n      vaultTimeoutServiceCallbacks.locked,\n      vaultTimeoutServiceCallbacks.logout\n    );\n    this.providerService = new ProviderService(this.stateService);\n    this.syncService = new SyncService(\n      this.apiService,\n      this.settingsService,\n      this.folderService,\n      this.cipherService,\n      this.cryptoService,\n      this.collectionService,\n      this.messagingService,\n      this.policyService,\n      this.sendService,\n      this.logService,\n      this.keyConnectorService,\n      this.stateService,\n      this.organizationService,\n      this.providerService,\n      async (expired: boolean) => await this.logout(expired)\n    );\n    this.eventService = new EventService(\n      this.apiService,\n      this.cipherService,\n      this.stateService,\n      this.logService,\n      this.organizationService\n    );\n    this.passwordGenerationService = new PasswordGenerationService(\n      this.cryptoService,\n      this.policyService,\n      this.stateService\n    );\n    this.totpService = new TotpService(\n      this.cryptoFunctionService,\n      this.logService,\n      this.stateService\n    );\n    this.autofillService = new AutofillService(\n      this.cipherService,\n      this.stateService,\n      this.totpService,\n      this.eventService,\n      this.logService\n    );\n    this.containerService = new ContainerService(this.cryptoService);\n    this.auditService = new AuditService(this.cryptoFunctionService, this.apiService);\n    this.exportService = new ExportService(\n      this.folderService,\n      this.cipherService,\n      this.apiService,\n      this.cryptoService,\n      this.cryptoFunctionService\n    );\n    this.notificationsService = new NotificationsService(\n      this.syncService,\n      this.appIdService,\n      this.apiService,\n      this.vaultTimeoutService,\n      this.environmentService,\n      () => this.logout(true),\n      this.logService,\n      this.stateService\n    );\n    this.popupUtilsService = new PopupUtilsService(isPrivateMode);\n\n    this.userVerificationService = new UserVerificationService(\n      this.cryptoService,\n      this.i18nService,\n      this.apiService\n    );\n\n    const systemUtilsServiceReloadCallback = () => {\n      const forceWindowReload =\n        this.platformUtilsService.isSafari() ||\n        this.platformUtilsService.isFirefox() ||\n        this.platformUtilsService.isOpera();\n      BrowserApi.reloadExtension(forceWindowReload ? window : null);\n      return Promise.resolve();\n    };\n\n    this.systemService = new SystemService(\n      this.messagingService,\n      this.platformUtilsService,\n      systemUtilsServiceReloadCallback,\n      this.stateService\n    );\n\n    // Other fields\n    this.isSafari = this.platformUtilsService.isSafari();\n    this.sidebarAction = this.isSafari\n      ? null\n      : typeof opr !== \"undefined\" && opr.sidebarAction\n      ? opr.sidebarAction\n      : (window as any).chrome.sidebarAction;\n\n    // Background\n    this.runtimeBackground = new RuntimeBackground(\n      this,\n      this.autofillService,\n      this.platformUtilsService as BrowserPlatformUtilsService,\n      this.i18nService,\n      this.notificationsService,\n      this.systemService,\n      this.environmentService,\n      this.messagingService,\n      this.logService\n    );\n    this.nativeMessagingBackground = new NativeMessagingBackground(\n      this.cryptoService,\n      this.cryptoFunctionService,\n      this.runtimeBackground,\n      this.i18nService,\n      this.messagingService,\n      this.appIdService,\n      this.platformUtilsService,\n      this.stateService,\n      this.logService,\n      this.vaultTimeoutService\n    );\n    this.commandsBackground = new CommandsBackground(\n      this,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService\n    );\n    this.notificationBackground = new NotificationBackground(\n      this,\n      this.autofillService,\n      this.cipherService,\n      this.vaultTimeoutService,\n      this.policyService,\n      this.folderService,\n      this.stateService\n    );\n\n    this.tabsBackground = new TabsBackground(this, this.notificationBackground);\n    this.contextMenusBackground = new ContextMenusBackground(\n      this,\n      this.cipherService,\n      this.passwordGenerationService,\n      this.platformUtilsService,\n      this.vaultTimeoutService,\n      this.eventService,\n      this.totpService\n    );\n    this.idleBackground = new IdleBackground(\n      this.vaultTimeoutService,\n      this.stateService,\n      this.notificationsService\n    );\n    this.webRequestBackground = new WebRequestBackground(\n      this.platformUtilsService,\n      this.cipherService,\n      this.vaultTimeoutService\n    );\n    this.windowsBackground = new WindowsBackground(this);\n\n    this.twoFactorService = new TwoFactorService(this.i18nService, this.platformUtilsService);\n\n    // eslint-disable-next-line\n    const that = this;\n    const backgroundMessagingService = new (class extends MessagingServiceAbstraction {\n      // AuthService should send the messages to the background not popup.\n      send = (subscriber: string, arg: any = {}) => {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        that.runtimeBackground.processMessage(message, that, null);\n      };\n    })();\n    this.authService = new AuthService(\n      this.cryptoService,\n      this.apiService,\n      this.tokenService,\n      this.appIdService,\n      this.platformUtilsService,\n      backgroundMessagingService,\n      this.logService,\n      this.keyConnectorService,\n      this.environmentService,\n      this.stateService,\n      this.twoFactorService,\n      this.i18nService\n    );\n  }\n\n  async bootstrap() {\n    this.containerService.attachToWindow(window);\n\n    await this.stateService.init();\n\n    await (this.vaultTimeoutService as VaultTimeoutService).init(true);\n    await (this.i18nService as I18nService).init();\n    await (this.eventService as EventService).init(true);\n    await this.runtimeBackground.init();\n    await this.notificationBackground.init();\n    await this.commandsBackground.init();\n\n    this.twoFactorService.init();\n\n    await this.tabsBackground.init();\n    await this.contextMenusBackground.init();\n    await this.idleBackground.init();\n    await this.webRequestBackground.init();\n    await this.windowsBackground.init();\n\n    if (this.platformUtilsService.isFirefox() && !this.isPrivateMode) {\n      // Set Private Mode windows to the default icon - they do not share state with the background page\n      const privateWindows = await BrowserApi.getPrivateModeWindows();\n      privateWindows.forEach(async (win) => {\n        await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n        await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n      });\n\n      BrowserApi.onWindowCreated(async (win) => {\n        if (win.incognito) {\n          await this.actionSetIcon(chrome.browserAction, \"\", win.id);\n          await this.actionSetIcon(this.sidebarAction, \"\", win.id);\n        }\n      });\n    }\n\n    return new Promise<void>((resolve) => {\n      setTimeout(async () => {\n        await this.environmentService.setUrlsFromStorage();\n        await this.setIcon();\n        this.fullSync(true);\n        setTimeout(() => this.notificationsService.init(), 2500);\n        resolve();\n      }, 500);\n    });\n  }\n\n  async setIcon() {\n    if ((!chrome.browserAction && !this.sidebarAction) || this.isPrivateMode) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const locked = await this.vaultTimeoutService.isLocked();\n\n    let suffix = \"\";\n    if (!isAuthenticated) {\n      suffix = \"_gray\";\n    } else if (locked) {\n      suffix = \"_locked\";\n    }\n\n    await this.actionSetIcon(chrome.browserAction, suffix);\n    await this.actionSetIcon(this.sidebarAction, suffix);\n  }\n\n  async refreshBadgeAndMenu(forLocked = false) {\n    if (!chrome.windows || !chrome.contextMenus) {\n      return;\n    }\n\n    const menuDisabled = await this.stateService.getDisableContextMenuItem();\n    if (!menuDisabled) {\n      await this.buildContextMenu();\n    } else {\n      await this.contextMenusRemoveAll();\n    }\n\n    if (forLocked) {\n      await this.loadMenuAndUpdateBadgeForNoAccessState(!menuDisabled);\n      this.onUpdatedRan = this.onReplacedRan = false;\n      return;\n    }\n\n    const tab = await BrowserApi.getTabFromCurrentWindow();\n    if (tab) {\n      await this.contextMenuReady(tab, !menuDisabled);\n    }\n  }\n\n  async logout(expired: boolean, userId?: string) {\n    await this.eventService.uploadEvents(userId);\n\n    await Promise.all([\n      this.eventService.clearEvents(userId),\n      this.syncService.setLastSync(new Date(0), userId),\n      this.cryptoService.clearKeys(userId),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(userId),\n      this.vaultTimeoutService.clear(userId),\n      this.keyConnectorService.clear(),\n    ]);\n\n    await this.stateService.clean({ userId: userId });\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      this.messagingService.send(\"doneLoggingOut\", { expired: expired, userId: userId });\n    }\n\n    await this.setIcon();\n    await this.refreshBadgeAndMenu();\n    await this.reseedStorage();\n    this.notificationsService.updateConnection(false);\n    await this.systemService.clearPendingClipboard();\n    await this.reloadProcess();\n  }\n\n  async collectPageDetailsForContentScript(tab: any, sender: string, frameId: number = null) {\n    if (tab == null || !tab.id) {\n      return;\n    }\n\n    const options: any = {};\n    if (frameId != null) {\n      options.frameId = frameId;\n    }\n\n    BrowserApi.tabSendMessage(\n      tab,\n      {\n        command: \"collectPageDetails\",\n        tab: tab,\n        sender: sender,\n      },\n      options\n    );\n  }\n\n  async openPopup() {\n    // Chrome APIs cannot open popup\n\n    // TODO: Do we need to open this popup?\n    if (!this.isSafari) {\n      return;\n    }\n    await SafariApp.sendMessageToApp(\"showPopover\", null, true);\n  }\n\n  async reseedStorage() {\n    if (\n      !this.platformUtilsService.isChrome() &&\n      !this.platformUtilsService.isVivaldi() &&\n      !this.platformUtilsService.isOpera()\n    ) {\n      return;\n    }\n\n    const currentVaultTimeout = await this.stateService.getVaultTimeout();\n    if (currentVaultTimeout == null) {\n      return;\n    }\n\n    const getStorage = (): Promise<any> =>\n      new Promise((resolve) => {\n        chrome.storage.local.get(null, (o: any) => resolve(o));\n      });\n\n    const clearStorage = (): Promise<void> =>\n      new Promise((resolve) => {\n        chrome.storage.local.clear(() => resolve());\n      });\n\n    const storage = await getStorage();\n    await clearStorage();\n\n    for (const key in storage) {\n      // eslint-disable-next-line\n      if (!storage.hasOwnProperty(key)) {\n        continue;\n      }\n      await this.storageService.save(key, storage[key]);\n    }\n  }\n\n  private async buildContextMenu() {\n    if (!chrome.contextMenus || this.buildingContextMenu) {\n      return;\n    }\n\n    this.buildingContextMenu = true;\n    await this.contextMenusRemoveAll();\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"root\",\n      contexts: [\"all\"],\n      title: \"Bitwarden\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"autofill\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"autoFill\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-username\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyUsername\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyPassword\"),\n    });\n\n    if (await this.stateService.getCanAccessPremium()) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp\",\n        parentId: \"root\",\n        contexts: [\"all\"],\n        title: this.i18nService.t(\"copyVerificationCode\"),\n      });\n    }\n\n    await this.contextMenusCreate({\n      type: \"separator\",\n      parentId: \"root\",\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"generate-password\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"generatePasswordCopied\"),\n    });\n\n    await this.contextMenusCreate({\n      type: \"normal\",\n      id: \"copy-identifier\",\n      parentId: \"root\",\n      contexts: [\"all\"],\n      title: this.i18nService.t(\"copyElementIdentifier\"),\n    });\n\n    this.buildingContextMenu = false;\n  }\n\n  private async contextMenuReady(tab: any, contextMenuEnabled: boolean) {\n    await this.loadMenuAndUpdateBadge(tab.url, tab.id, contextMenuEnabled);\n    this.onUpdatedRan = this.onReplacedRan = false;\n  }\n\n  private async loadMenuAndUpdateBadge(url: string, tabId: number, contextMenuEnabled: boolean) {\n    if (!url || (!chrome.browserAction && !this.sidebarAction)) {\n      return;\n    }\n\n    this.actionSetBadgeBackgroundColor(chrome.browserAction);\n    this.actionSetBadgeBackgroundColor(this.sidebarAction);\n\n    this.menuOptionsLoaded = [];\n    const locked = await this.vaultTimeoutService.isLocked();\n    if (!locked) {\n      try {\n        const ciphers = await this.cipherService.getAllDecryptedForUrl(url);\n        ciphers.sort((a, b) => this.cipherService.sortCiphersByLastUsedThenName(a, b));\n\n        if (contextMenuEnabled) {\n          ciphers.forEach((cipher) => {\n            this.loadLoginContextMenuOptions(cipher);\n          });\n        }\n\n        const disableBadgeCounter = await this.stateService.getDisableBadgeCounter();\n        let theText = \"\";\n\n        if (!disableBadgeCounter) {\n          if (ciphers.length > 0 && ciphers.length <= 9) {\n            theText = ciphers.length.toString();\n          } else if (ciphers.length > 0) {\n            theText = \"9+\";\n          }\n        }\n\n        if (contextMenuEnabled && ciphers.length === 0) {\n          await this.loadNoLoginsContextMenuOptions(this.i18nService.t(\"noMatchingLogins\"));\n        }\n\n        this.sidebarActionSetBadgeText(theText, tabId);\n        this.browserActionSetBadgeText(theText, tabId);\n\n        return;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    await this.loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled);\n  }\n\n  private async loadMenuAndUpdateBadgeForNoAccessState(contextMenuEnabled: boolean) {\n    if (contextMenuEnabled) {\n      const authed = await this.stateService.getIsAuthenticated();\n      await this.loadNoLoginsContextMenuOptions(\n        this.i18nService.t(authed ? \"unlockVaultMenu\" : \"loginToVaultMenu\")\n      );\n    }\n\n    const tabs = await BrowserApi.getActiveTabs();\n    if (tabs != null) {\n      tabs.forEach((tab) => {\n        if (tab.id != null) {\n          this.browserActionSetBadgeText(\"\", tab.id);\n          this.sidebarActionSetBadgeText(\"\", tab.id);\n        }\n      });\n    }\n  }\n\n  private async loadLoginContextMenuOptions(cipher: any) {\n    if (\n      cipher == null ||\n      cipher.type !== CipherType.Login ||\n      cipher.reprompt !== CipherRepromptType.None\n    ) {\n      return;\n    }\n\n    let title = cipher.name;\n    if (cipher.login.username && cipher.login.username !== \"\") {\n      title += \" (\" + cipher.login.username + \")\";\n    }\n    await this.loadContextMenuOptions(title, cipher.id, cipher);\n  }\n\n  private async loadNoLoginsContextMenuOptions(noLoginsMessage: string) {\n    await this.loadContextMenuOptions(noLoginsMessage, \"noop\", null);\n  }\n\n  private async loadContextMenuOptions(title: string, idSuffix: string, cipher: any) {\n    if (\n      !chrome.contextMenus ||\n      this.menuOptionsLoaded.indexOf(idSuffix) > -1 ||\n      (cipher != null && cipher.type !== CipherType.Login)\n    ) {\n      return;\n    }\n\n    this.menuOptionsLoaded.push(idSuffix);\n\n    if (cipher == null || (cipher.login.password && cipher.login.password !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"autofill_\" + idSuffix,\n        parentId: \"autofill\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (cipher == null || (cipher.login.username && cipher.login.username !== \"\")) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-username_\" + idSuffix,\n        parentId: \"copy-username\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    if (\n      cipher == null ||\n      (cipher.login.password && cipher.login.password !== \"\" && cipher.viewPassword)\n    ) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-password_\" + idSuffix,\n        parentId: \"copy-password\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (canAccessPremium && (cipher == null || (cipher.login.totp && cipher.login.totp !== \"\"))) {\n      await this.contextMenusCreate({\n        type: \"normal\",\n        id: \"copy-totp_\" + idSuffix,\n        parentId: \"copy-totp\",\n        contexts: [\"all\"],\n        title: this.sanitizeContextMenuTitle(title),\n      });\n    }\n  }\n\n  private sanitizeContextMenuTitle(title: string): string {\n    return title.replace(/&/g, \"&&\");\n  }\n\n  private async fullSync(override = false) {\n    const syncInternal = 6 * 60 * 60 * 1000; // 6 hours\n    const lastSync = await this.syncService.getLastSync();\n\n    let lastSyncAgo = syncInternal + 1;\n    if (lastSync != null) {\n      lastSyncAgo = new Date().getTime() - lastSync.getTime();\n    }\n\n    if (override || lastSyncAgo >= syncInternal) {\n      await this.syncService.fullSync(override);\n      this.scheduleNextSync();\n    } else {\n      this.scheduleNextSync();\n    }\n  }\n\n  private scheduleNextSync() {\n    if (this.syncTimeout) {\n      clearTimeout(this.syncTimeout);\n    }\n\n    this.syncTimeout = setTimeout(async () => await this.fullSync(), 5 * 60 * 1000); // check every 5 minutes\n  }\n\n  // Browser API Helpers\n\n  private contextMenusRemoveAll() {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.removeAll(() => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private contextMenusCreate(options: any) {\n    return new Promise<void>((resolve) => {\n      chrome.contextMenus.create(options, () => {\n        resolve();\n        if (chrome.runtime.lastError) {\n          return;\n        }\n      });\n    });\n  }\n\n  private async actionSetIcon(theAction: any, suffix: string, windowId?: number): Promise<any> {\n    if (!theAction || !theAction.setIcon) {\n      return;\n    }\n\n    const options: IconDetails = {\n      path: {\n        19: \"images/icon19\" + suffix + \".png\",\n        38: \"images/icon38\" + suffix + \".png\",\n      },\n    };\n\n    if (this.platformUtilsService.isFirefox()) {\n      options.windowId = windowId;\n      await theAction.setIcon(options);\n    } else if (this.platformUtilsService.isSafari()) {\n      // Workaround since Safari 14.0.3 returns a pending promise\n      // which doesn't resolve within a reasonable time.\n      theAction.setIcon(options);\n    } else {\n      return new Promise<void>((resolve) => {\n        theAction.setIcon(options, () => resolve());\n      });\n    }\n  }\n\n  private actionSetBadgeBackgroundColor(action: any) {\n    if (action && action.setBadgeBackgroundColor) {\n      action.setBadgeBackgroundColor({ color: \"#294e5f\" });\n    }\n  }\n\n  private browserActionSetBadgeText(text: string, tabId: number) {\n    if (chrome.browserAction && chrome.browserAction.setBadgeText) {\n      chrome.browserAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private sidebarActionSetBadgeText(text: string, tabId: number) {\n    if (!this.sidebarAction) {\n      return;\n    }\n\n    if (this.sidebarAction.setBadgeText) {\n      this.sidebarAction.setBadgeText({\n        text: text,\n        tabId: tabId,\n      });\n    } else if (this.sidebarAction.setTitle) {\n      let title = \"Bitwarden\";\n      if (text && text !== \"\") {\n        title += \" [\" + text + \"]\";\n      }\n\n      this.sidebarAction.setTitle({\n        title: title,\n        tabId: tabId,\n      });\n    }\n  }\n\n  private async reloadProcess(): Promise<void> {\n    const accounts = this.stateService.accounts.getValue();\n    if (accounts != null) {\n      for (const userId of Object.keys(accounts)) {\n        if (!(await this.vaultTimeoutService.isLocked(userId))) {\n          return;\n        }\n      }\n    }\n    await this.systemService.startProcessReload();\n  }\n}\n","import { MessagingService } from \"jslib-common/abstractions/messaging.service\";\n\nexport default class BrowserMessagingPrivateModePopupService implements MessagingService {\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    (window as any).bitwardenBackgroundMessageListener(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LockGuardService as BaseLockGuardService } from \"jslib-angular/services/lock-guard.service\";\n\n@Injectable()\nexport class LockGuardService extends BaseLockGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"jslib-angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-body\">\n        <div class=\"box\">\n          <h1 class=\"box-header\">{{ \"passwordConfirmation\" | i18n }}</h1>\n          <div class=\"box-content\">\n            <div class=\"box-content-row box-content-row-flex\" appBoxRow>\n              <div class=\"row-main\">\n                <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPassword\"\n                  class=\"monospaced\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appAutofocus\n                />\n              </div>\n              <div class=\"action-buttons\">\n                <button\n                  type=\"button\"\n                  class=\"row-btn\"\n                  appStopClick\n                  appBlurClick\n                  role=\"button\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                  [attr.aria-pressed]=\"showPassword\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"box-footer\">\n            {{ \"passwordConfirmationDesc\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" appBlurClick>\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"jslib-angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nexport class PopupSearchService extends SearchService {\n  constructor(\n    private mainSearchService: SearchService,\n    cipherService: CipherService,\n    consoleLogService: ConsoleLogService,\n    i18nService: I18nService\n  ) {\n    super(cipherService, consoleLogService, i18nService);\n  }\n\n  clearIndex() {\n    throw new Error(\"Not available.\");\n  }\n\n  indexCiphers(): Promise<void> {\n    throw new Error(\"Not available.\");\n  }\n\n  getIndexForSearch() {\n    return this.mainSearchService.getIndexForSearch();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { UnauthGuardService as BaseUnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\n\n@Injectable()\nexport class UnauthGuardService extends BaseUnauthGuardService {\n  protected homepage = \"tabs/current\";\n}\n","import { APP_INITIALIZER, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { JslibServicesModule } from \"jslib-angular/services/jslib-services.module\";\nimport { LockGuardService as BaseLockGuardService } from \"jslib-angular/services/lock-guard.service\";\nimport { UnauthGuardService as BaseUnauthGuardService } from \"jslib-angular/services/unauth-guard.service\";\nimport { ApiService } from \"jslib-common/abstractions/api.service\";\nimport { AppIdService } from \"jslib-common/abstractions/appId.service\";\nimport { AuditService } from \"jslib-common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"jslib-common/abstractions/auth.service\";\nimport { CipherService } from \"jslib-common/abstractions/cipher.service\";\nimport { CollectionService } from \"jslib-common/abstractions/collection.service\";\nimport { CryptoService } from \"jslib-common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"jslib-common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"jslib-common/abstractions/environment.service\";\nimport { EventService } from \"jslib-common/abstractions/event.service\";\nimport { ExportService } from \"jslib-common/abstractions/export.service\";\nimport { FileUploadService } from \"jslib-common/abstractions/fileUpload.service\";\nimport { FolderService } from \"jslib-common/abstractions/folder.service\";\nimport { I18nService } from \"jslib-common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"jslib-common/abstractions/keyConnector.service\";\nimport { LogService as LogServiceAbstraction } from \"jslib-common/abstractions/log.service\";\nimport { MessagingService } from \"jslib-common/abstractions/messaging.service\";\nimport { NotificationsService } from \"jslib-common/abstractions/notifications.service\";\nimport { OrganizationService } from \"jslib-common/abstractions/organization.service\";\nimport { PasswordGenerationService } from \"jslib-common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"jslib-common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"jslib-common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"jslib-common/abstractions/policy.service\";\nimport { ProviderService } from \"jslib-common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"jslib-common/abstractions/search.service\";\nimport { SendService } from \"jslib-common/abstractions/send.service\";\nimport { SettingsService } from \"jslib-common/abstractions/settings.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"jslib-common/abstractions/state.service\";\nimport { StorageService as StorageServiceAbstraction } from \"jslib-common/abstractions/storage.service\";\nimport { SyncService } from \"jslib-common/abstractions/sync.service\";\nimport { TokenService } from \"jslib-common/abstractions/token.service\";\nimport { TotpService } from \"jslib-common/abstractions/totp.service\";\nimport { TwoFactorService } from \"jslib-common/abstractions/twoFactor.service\";\nimport { UserVerificationService } from \"jslib-common/abstractions/userVerification.service\";\nimport { VaultTimeoutService } from \"jslib-common/abstractions/vaultTimeout.service\";\nimport { ThemeType } from \"jslib-common/enums/themeType\";\nimport { AuthService } from \"jslib-common/services/auth.service\";\nimport { ConsoleLogService } from \"jslib-common/services/consoleLog.service\";\nimport { SearchService } from \"jslib-common/services/search.service\";\n\nimport MainBackground from \"../../background/main.background\";\nimport { BrowserApi } from \"../../browser/browserApi\";\nimport { AutofillService } from \"../../services/abstractions/autofill.service\";\nimport { StateService as StateServiceAbstraction } from \"../../services/abstractions/state.service\";\nimport BrowserMessagingService from \"../../services/browserMessaging.service\";\nimport BrowserMessagingPrivateModePopupService from \"../../services/browserMessagingPrivateModePopup.service\";\n\nimport { DebounceNavigationService } from \"./debounceNavigationService\";\nimport { LockGuardService } from \"./lock-guard.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PopupSearchService } from \"./popup-search.service\";\nimport { PopupUtilsService } from \"./popup-utils.service\";\nimport { UnauthGuardService } from \"./unauth-guard.service\";\n\nconst isPrivateMode = BrowserApi.getBackgroundPage() == null;\nconst mainBackground: MainBackground = isPrivateMode\n  ? createLocalBgService()\n  : BrowserApi.getBackgroundPage().bitwardenMain;\n\nfunction createLocalBgService() {\n  const localBgService = new MainBackground(true);\n  localBgService.bootstrap();\n  return localBgService;\n}\n\nfunction getBgService<T>(service: keyof MainBackground) {\n  return (): T => {\n    return mainBackground ? (mainBackground[service] as any as T) : null;\n  };\n}\n\nexport function initFactory(\n  platformUtilsService: PlatformUtilsService,\n  i18nService: I18nService,\n  popupUtilsService: PopupUtilsService,\n  stateService: StateServiceAbstraction,\n  logService: LogServiceAbstraction\n): () => void {\n  return async () => {\n    await stateService.init();\n\n    if (!popupUtilsService.inPopup(window)) {\n      window.document.body.classList.add(\"body-full\");\n    } else if (window.screen.availHeight < 600) {\n      window.document.body.classList.add(\"body-xs\");\n    } else if (window.screen.availHeight <= 800) {\n      window.document.body.classList.add(\"body-sm\");\n    }\n\n    const htmlEl = window.document.documentElement;\n    const theme = await platformUtilsService.getEffectiveTheme();\n    htmlEl.classList.add(\"theme_\" + theme);\n    platformUtilsService.onDefaultSystemThemeChange(async (sysTheme) => {\n      const bwTheme = await stateService.getTheme();\n      if (bwTheme == null || bwTheme === ThemeType.System) {\n        htmlEl.classList.remove(\"theme_\" + ThemeType.Light, \"theme_\" + ThemeType.Dark);\n        htmlEl.classList.add(\"theme_\" + sysTheme);\n      }\n    });\n    htmlEl.classList.add(\"locale_\" + i18nService.translationLocale);\n\n    // Workaround for slow performance on external monitors on Chrome + MacOS\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n    if (\n      platformUtilsService.isChrome() &&\n      navigator.platform.indexOf(\"Mac\") > -1 &&\n      popupUtilsService.inPopup(window) &&\n      (window.screenLeft < 0 ||\n        window.screenTop < 0 ||\n        window.screenLeft > window.screen.width ||\n        window.screenTop > window.screen.height)\n    ) {\n      htmlEl.classList.add(\"force_redraw\");\n      logService.info(\"Force redraw is on\");\n    }\n    htmlEl.classList.add(\"locale_\" + i18nService.translationLocale);\n\n    // Workaround for slow performance on external monitors on Chrome + MacOS\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=971701#c64\n    if (\n      platformUtilsService.isChrome() &&\n      navigator.platform.indexOf(\"Mac\") > -1 &&\n      popupUtilsService.inPopup(window) &&\n      (window.screenLeft < 0 ||\n        window.screenTop < 0 ||\n        window.screenLeft > window.screen.width ||\n        window.screenTop > window.screen.height)\n    ) {\n      htmlEl.classList.add(\"force_redraw\");\n      logService.info(\"Force redraw is on\");\n    }\n  };\n}\n\n@NgModule({\n  imports: [JslibServicesModule],\n  declarations: [],\n  providers: [\n    {\n      provide: LOCALE_ID,\n      useFactory: () => getBgService<I18nService>(\"i18nService\")().translationLocale,\n      deps: [],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initFactory,\n      deps: [\n        PlatformUtilsService,\n        I18nService,\n        PopupUtilsService,\n        StateServiceAbstraction,\n        LogServiceAbstraction,\n      ],\n      multi: true,\n    },\n    { provide: BaseLockGuardService, useClass: LockGuardService },\n    { provide: BaseUnauthGuardService, useClass: UnauthGuardService },\n    DebounceNavigationService,\n    { provide: PopupUtilsService, useFactory: () => new PopupUtilsService(isPrivateMode) },\n    {\n      provide: MessagingService,\n      useFactory: () => {\n        return isPrivateMode\n          ? new BrowserMessagingPrivateModePopupService()\n          : new BrowserMessagingService();\n      },\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: TwoFactorService,\n      useFactory: getBgService<TwoFactorService>(\"twoFactorService\"),\n      deps: [],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useFactory: getBgService<AuthService>(\"authService\"),\n      deps: [],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useFactory: (\n        cipherService: CipherService,\n        logService: ConsoleLogService,\n        i18nService: I18nService\n      ) => {\n        return new PopupSearchService(\n          getBgService<SearchService>(\"searchService\")(),\n          cipherService,\n          logService,\n          i18nService\n        );\n      },\n      deps: [CipherService, LogServiceAbstraction, I18nService],\n    },\n    { provide: AuditService, useFactory: getBgService<AuditService>(\"auditService\"), deps: [] },\n    {\n      provide: FileUploadService,\n      useFactory: getBgService<FileUploadService>(\"fileUploadService\"),\n      deps: [],\n    },\n    { provide: CipherService, useFactory: getBgService<CipherService>(\"cipherService\"), deps: [] },\n    {\n      provide: CryptoFunctionService,\n      useFactory: getBgService<CryptoFunctionService>(\"cryptoFunctionService\"),\n      deps: [],\n    },\n    { provide: FolderService, useFactory: getBgService<FolderService>(\"folderService\"), deps: [] },\n    {\n      provide: CollectionService,\n      useFactory: getBgService<CollectionService>(\"collectionService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    {\n      provide: EnvironmentService,\n      useFactory: getBgService<EnvironmentService>(\"environmentService\"),\n      deps: [],\n    },\n    { provide: TotpService, useFactory: getBgService<TotpService>(\"totpService\"), deps: [] },\n    { provide: TokenService, useFactory: getBgService<TokenService>(\"tokenService\"), deps: [] },\n    { provide: I18nService, useFactory: getBgService<I18nService>(\"i18nService\"), deps: [] },\n    { provide: CryptoService, useFactory: getBgService<CryptoService>(\"cryptoService\"), deps: [] },\n    { provide: EventService, useFactory: getBgService<EventService>(\"eventService\"), deps: [] },\n    { provide: PolicyService, useFactory: getBgService<PolicyService>(\"policyService\"), deps: [] },\n    {\n      provide: PlatformUtilsService,\n      useFactory: getBgService<PlatformUtilsService>(\"platformUtilsService\"),\n      deps: [],\n    },\n    {\n      provide: PasswordGenerationService,\n      useFactory: getBgService<PasswordGenerationService>(\"passwordGenerationService\"),\n      deps: [],\n    },\n    { provide: ApiService, useFactory: getBgService<ApiService>(\"apiService\"), deps: [] },\n    { provide: SyncService, useFactory: getBgService<SyncService>(\"syncService\"), deps: [] },\n    {\n      provide: SettingsService,\n      useFactory: getBgService<SettingsService>(\"settingsService\"),\n      deps: [],\n    },\n    {\n      provide: StorageServiceAbstraction,\n      useFactory: getBgService<StorageServiceAbstraction>(\"storageService\"),\n      deps: [],\n    },\n    { provide: AppIdService, useFactory: getBgService<AppIdService>(\"appIdService\"), deps: [] },\n    {\n      provide: AutofillService,\n      useFactory: getBgService<AutofillService>(\"autofillService\"),\n      deps: [],\n    },\n    { provide: ExportService, useFactory: getBgService<ExportService>(\"exportService\"), deps: [] },\n    { provide: SendService, useFactory: getBgService<SendService>(\"sendService\"), deps: [] },\n    {\n      provide: KeyConnectorService,\n      useFactory: getBgService<KeyConnectorService>(\"keyConnectorService\"),\n      deps: [],\n    },\n    {\n      provide: UserVerificationService,\n      useFactory: getBgService<UserVerificationService>(\"userVerificationService\"),\n      deps: [],\n    },\n    {\n      provide: VaultTimeoutService,\n      useFactory: getBgService<VaultTimeoutService>(\"vaultTimeoutService\"),\n      deps: [],\n    },\n    {\n      provide: NotificationsService,\n      useFactory: getBgService<NotificationsService>(\"notificationsService\"),\n      deps: [],\n    },\n    {\n      provide: LogServiceAbstraction,\n      useFactory: getBgService<ConsoleLogService>(\"logService\"),\n      deps: [],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationService,\n      useFactory: getBgService<OrganizationService>(\"organizationService\"),\n      deps: [],\n    },\n    {\n      provide: ProviderService,\n      useFactory: getBgService<ProviderService>(\"providerService\"),\n      deps: [],\n    },\n    {\n      provide: \"SECURE_STORAGE\",\n      useFactory: getBgService<StorageServiceAbstraction>(\"secureStorageService\"),\n      deps: [],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useFactory: getBgService<StateServiceAbstraction>(\"stateService\"),\n      deps: [],\n    },\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateServiceAbstraction,\n      deps: [],\n    },\n  ],\n})\nexport class ServicesModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { CurrencyPipe, DatePipe, registerLocaleData } from \"@angular/common\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeFa from \"@angular/common/locales/fa\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLt from \"@angular/common/locales/lt\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTh from \"@angular/common/locales/th\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { CalloutComponent } from \"jslib-angular/components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"jslib-angular/components/export-scope-callout.component\";\nimport { IconComponent } from \"jslib-angular/components/icon.component\";\nimport { BitwardenToastModule } from \"jslib-angular/components/toastr.component\";\nimport { A11yTitleDirective } from \"jslib-angular/directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"jslib-angular/directives/api-action.directive\";\nimport { AutofocusDirective } from \"jslib-angular/directives/autofocus.directive\";\nimport { BlurClickDirective } from \"jslib-angular/directives/blur-click.directive\";\nimport { BoxRowDirective } from \"jslib-angular/directives/box-row.directive\";\nimport { CipherListVirtualScroll } from \"jslib-angular/directives/cipherListVirtualScroll.directive\";\nimport { FallbackSrcDirective } from \"jslib-angular/directives/fallback-src.directive\";\nimport { InputVerbatimDirective } from \"jslib-angular/directives/input-verbatim.directive\";\nimport { SelectCopyDirective } from \"jslib-angular/directives/select-copy.directive\";\nimport { StopClickDirective } from \"jslib-angular/directives/stop-click.directive\";\nimport { StopPropDirective } from \"jslib-angular/directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"jslib-angular/directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"jslib-angular/pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"jslib-angular/pipes/color-password.pipe\";\nimport { I18nPipe } from \"jslib-angular/pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"jslib-angular/pipes/search-ciphers.pipe\";\n\nimport { EnvironmentComponent } from \"./accounts/environment.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { HomeComponent } from \"./accounts/home.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginComponent } from \"./accounts/login.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"./accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ActionButtonsComponent } from \"./components/action-buttons.component\";\nimport { CipherRowComponent } from \"./components/cipher-row.component\";\nimport { PasswordRepromptComponent } from \"./components/password-reprompt.component\";\nimport { PopOutComponent } from \"./components/pop-out.component\";\nimport { PrivateModeWarningComponent } from \"./components/private-mode-warning.component\";\nimport { SendListComponent } from \"./components/send-list.component\";\nimport { SetPinComponent } from \"./components/set-pin.component\";\nimport { VerifyMasterPasswordComponent } from \"./components/verify-master-password.component\";\nimport { PasswordGeneratorHistoryComponent } from \"./generator/password-generator-history.component\";\nimport { PasswordGeneratorComponent } from \"./generator/password-generator.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"./send/efflux-dates.component\";\nimport { SendAddEditComponent } from \"./send/send-add-edit.component\";\nimport { SendGroupingsComponent } from \"./send/send-groupings.component\";\nimport { SendTypeComponent } from \"./send/send-type.component\";\nimport { ServicesModule } from \"./services/services.module\";\nimport { ExcludedDomainsComponent } from \"./settings/excluded-domains.component\";\nimport { ExportComponent } from \"./settings/export.component\";\nimport { FolderAddEditComponent } from \"./settings/folder-add-edit.component\";\nimport { FoldersComponent } from \"./settings/folders.component\";\nimport { OptionsComponent } from \"./settings/options.component\";\nimport { PremiumComponent } from \"./settings/premium.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SyncComponent } from \"./settings/sync.component\";\nimport { VaultTimeoutInputComponent } from \"./settings/vault-timeout-input.component\";\nimport { TabsComponent } from \"./tabs.component\";\nimport { AddEditCustomFieldsComponent } from \"./vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"./vault/add-edit.component\";\nimport { AttachmentsComponent } from \"./vault/attachments.component\";\nimport { CiphersComponent } from \"./vault/ciphers.component\";\nimport { CollectionsComponent } from \"./vault/collections.component\";\nimport { CurrentTabComponent } from \"./vault/current-tab.component\";\nimport { GroupingsComponent } from \"./vault/groupings.component\";\nimport { PasswordHistoryComponent } from \"./vault/password-history.component\";\nimport { ShareComponent } from \"./vault/share.component\";\nimport { ViewCustomFieldsComponent } from \"./vault/view-custom-fields.component\";\nimport { ViewComponent } from \"./vault/view.component\";\n\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeFa, \"fa\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLt, \"lt\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTh, \"th\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n\n@NgModule({\n  imports: [\n    A11yModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ScrollingModule,\n    ServicesModule,\n    BitwardenToastModule.forRoot({\n      maxOpened: 2,\n      autoDismiss: true,\n      closeButton: true,\n      positionClass: \"toast-bottom-full-width\",\n    }),\n  ],\n  declarations: [\n    A11yTitleDirective,\n    ActionButtonsComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    ApiActionDirective,\n    AppComponent,\n    AttachmentsComponent,\n    AutofocusDirective,\n    BlurClickDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    CipherListVirtualScroll,\n    CipherRowComponent,\n    CiphersComponent,\n    CollectionsComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CurrentTabComponent,\n    EnvironmentComponent,\n    ExcludedDomainsComponent,\n    ExportComponent,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    FolderAddEditComponent,\n    FoldersComponent,\n    GroupingsComponent,\n    HintComponent,\n    HomeComponent,\n    I18nPipe,\n    IconComponent,\n    InputVerbatimDirective,\n    LockComponent,\n    LoginComponent,\n    OptionsComponent,\n    PasswordGeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordHistoryComponent,\n    PasswordRepromptComponent,\n    PopOutComponent,\n    PremiumComponent,\n    PrivateModeWarningComponent,\n    RegisterComponent,\n    SearchCiphersPipe,\n    SelectCopyDirective,\n    SendAddEditComponent,\n    SendEffluxDatesComponent,\n    SendGroupingsComponent,\n    SendListComponent,\n    SendTypeComponent,\n    SetPasswordComponent,\n    SetPinComponent,\n    SettingsComponent,\n    ShareComponent,\n    SsoComponent,\n    StopClickDirective,\n    StopPropDirective,\n    SyncComponent,\n    TabsComponent,\n    TrueFalseValueDirective,\n    TwoFactorComponent,\n    TwoFactorOptionsComponent,\n    UpdateTempPasswordComponent,\n    VaultTimeoutInputComponent,\n    VerifyMasterPasswordComponent,\n    ViewComponent,\n    ViewCustomFieldsComponent,\n    RemovePasswordComponent,\n  ],\n  entryComponents: [],\n  providers: [CurrencyPipe, DatePipe],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nrequire(\"./scss/popup.scss\");\n\nimport { AppModule } from \"./app.module\";\n\nif (process.env.ENV === \"production\") {\n  enableProdMode();\n}\n\nfunction init() {\n  platformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n}\n\ninit();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t347: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_browser\"] = self[\"webpackChunk_bitwarden_browser\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [286,902], () => (__webpack_require__(91653)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","BitwardenToast","constructor","toastrService","toastPackage","super","trigger","state","style","opacity","transition","animate","BitwardenToastGlobalConfig","DefaultNoComponentGlobalConfig","toastComponent","BitwardenToastModule","static","config","ngModule","providers","provide","TOAST_CONFIG","useValue","default","CommonModule","VaultTimeoutService","MessagingService","KeyConnectorService","AuthGuardService","vaultTimeoutService","router","messagingService","keyConnectorService","stateService","canActivate","route","routerState","this","getIsAuthenticated","send","isLocked","url","navigate","queryParams","promptBiometric","includes","getConvertAccountRequired","homepage","loginpage","redirectUrl","PlatformUtilsService","EnvironmentService","I18nService","platformUtilsService","environmentService","i18nService","onSaved","EventEmitter","showCustom","urls","getUrls","baseUrl","base","webVaultUrl","webVault","apiUrl","api","identityUrl","identity","iconsUrl","icons","notificationsUrl","notifications","submit","resUrls","setUrls","showToast","t","saved","toggleCustom","emit","BlurClickDirective","el","onClick","nativeElement","blur","BoxRowDirective","elRef","ngOnInit","formEls","Array","from","querySelectorAll","forEach","formEl","addEventListener","classList","add","remove","event","target","contains","length","tagName","toLowerCase","inputEl","type","click","focus","InputVerbatimDirective","renderer","appInputVerbatim","condition","disableComplete","hasAttribute","setAttribute","I18nPipe","transform","p1","p2","p3","EnvironmentComponent","PasswordHintRequest","email","ApiService","LogService","ValidationService","showError","data","defaultErrorMessage","errors","push","validationErrors","concat","getAllMessages","message","timeout","ApiActionDirective","validationService","logService","ngOnChanges","changes","appApiAction","loading","response","captchaRequired","error","getSingleMessage","nodeURL","window","Utils","inited","isNode","process","release","name","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","str","Uint8Array","Buffer","binaryString","atob","bytes","i","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","prototype","map","call","x","slice","join","urlB64Str","output","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","c","r","Math","random","RegExp","test","uriString","getUrl","hostname","host","trim","startsWith","httpUrl","indexOf","tldEndingRegex","getUrlObject","tldjs","isValid","validIpAddress","urlDomain","getDomain","domain","search","Map","split","pair","parts","set","prop","a","b","collator","compare","localeCompare","source","Object","assign","obj","filter","k","Number","isNaN","s","charAt","toUpperCase","ipString","win","mobile","navigator","userAgent","vendor","opera","match","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","init","AutofocusDirective","ngZone","appAutofocus","autofocus","isStable","onStable","pipe","take","subscribe","HintComponent","apiService","successRoute","formPromise","postPasswordHint","onSuccessfulSubmit","PasswordGenerationService","CryptoFunctionService","HomeComponent","passwordGenerationService","cryptoFunctionService","launchSsoBrowser","passwordOptions","uppercase","lowercase","numbers","special","generatePassword","codeVerifier","codeVerifierHash","hash","codeChallenge","setSsoCodeVerifier","setSsoState","getWebVaultUrl","redirectUri","launchUri","HashPurpose","KeySuffixOptions","EncryptionType","EncString","encryptedStringOrType","iv","mac","encType","encryptedString","encryptionType","headerPieces","encPieces","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decrypt","orgId","key","decryptedValue","cryptoService","containerService","getCryptoService","getOrgKey","decryptToUtf8","SecretVerificationRequest","CryptoService","masterPassword","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","load","activeAccount","kdf","getKdfType","kdfIterations","getKdfIterations","failed","pinSet","makeKeyFromPin","getDecryptedPinProtected","encKey","getEncKey","protectedPin","getProtectedPin","setKeyAndContinue","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","request","serverKeyHash","hashPassword","ServerAuthorization","masterPasswordHash","postAccountVerifyPassword","localKeyHash","LocalAuthorization","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","encrypt","logOut","showDialog","unlockBiometric","biometricLock","success","getKey","Biometric","doContinue","togglePassword","input","getElementById","setKey","setBiometricLocked","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","getEmail","usesKeyConnector","getUsesKeyConnector","hideInput","vaultUrl","getHostname","StopClickDirective","$event","preventDefault","SafariApp","command","resolveNow","BrowserApi","isSafariApi","messageId","Date","getTime","floor","MAX_SAFE_INTEGER","browser","runtime","sendNativeMessage","responseData","tabsQueryFirst","active","windowId","chrome","windows","WINDOW_ID_CURRENT","currentWindow","tabsQuery","options","tabs","query","tab","tabSendMessage","sendMessage","lastError","getAll","incognito","callback","onCreated","addListener","extension","getBackgroundPage","getManifest","version","getViews","extensionPage","create","onMessage","msg","sender","title","windowType","tabToClose","tabId","update","highlighted","isWebExtensionsApi","isFirefoxOnAndroid","finally","close","blobData","blobOptions","fileName","sendMessageToApp","JSON","stringify","blob","Blob","msSaveOrOpenBlob","msSaveBlob","createObjectURL","download","body","appendChild","removeChild","i18n","getUILanguage","location","reload","w","application","connectNative","isChromeApi","permission","permissions","reject","getPlatformInfo","PopupUtilsService","privateMode","inSidebar","inTab","inPopout","inPopup","inPrivateMode","getContentScrollY","scrollingContainer","getElementsByTagName","scrollTop","setContentScrollY","scrollY","popOut","hrefParts","bodyRect","querySelector","getBoundingClientRect","width","round","height","closePopup","Domain","buildDomainModel","dataObj","alreadyEncrypted","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","self","theProp","p","mapProp","val","all","MasterPasswordPolicyOptions","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","CalloutComponent","useAlertRole","calloutStyle","undefined","enforcedPolicyMessage","icon","getPasswordScoreAlertDisplay","enforcedPolicyOptions","PrivateModeWarningComponent","popupUtilsService","showWarning","A11yTitleDirective","appA11yTitle","LockComponent","isInitialLockScreen","previousPopupUrl","disableAutoBiometricsPrompt","getDisableAutoBiometricsPrompt","setTimeout","div","innerHTML","heightAuto","buttonsStyling","html","showCancelButton","cancelButtonText","showConfirmButton","AuthenticationType","PasswordLogInCredentials","captchaToken","twoFactor","SsoLogInCredentials","CaptchaIFrame","path","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","stop","start","iframe","src","contentWindow","postMessage","base64Encode","cleanup","removeEventListener","createParams","URLSearchParams","parent","v","initComponent","params","validMessage","origin","parsedMessage","parse","siteKey","locale","translationLocale","CaptchaProtectedComponent","captchaSiteKey","setupCaptcha","captcha","token","info","showCaptcha","isNullOrWhitespace","handleCaptchaRequired","AuthService","authService","rememberEmail","twoFactorRoute","forcePasswordResetRoute","alwaysRememberEmail","getRememberedEmail","focusInput","credentials","logIn","setRememberedEmail","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","onSuccessfulLogin","onSuccessfulLoginNavigate","clientId","ssoRedirectUri","ssoCodeVerifier","webUrl","SyncService","LoginComponent","syncService","fullSync","settings","KdfType","KeysRequest","publicKey","encryptedPrivateKey","RegisterRequest","masterPasswordHint","referenceData","captchaResponse","confirmMasterPassword","hint","showTerms","acceptPolicies","isSelfHost","masterPasswordScoreWidth","masterPasswordScore","masterPasswordScoreColor","masterPasswordScoreText","strengthResult","passwordStrength","getPasswordStrengthUserInput","score","PBKDF2_SHA256","isIE","makeEncKey","hashedPassword","makeKeyPair","orgInvite","getOrganizationInvitation","organizationUserId","postRegister","confirmField","updatePasswordStrength","masterPasswordStrengthTimeout","clearTimeout","userInput","atPosition","RegisterComponent","continuing","leaving","organization","getManagingOrganization","convert","actionPromise","migrateUser","removeConvertAccountRequired","leave","postLeaveOrganization","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","orgIdentifier","PolicyService","ChangePasswordComponent","policyService","getMasterPasswordPolicyOptions","strongPassword","setupSubmitActions","remakeEncKey","performSubmitActions","masterPasswordRetype","evaluateMasterPassword","syncLoading","identifier","resetPasswordAutoEnroll","first","qParams","getOrganizationAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","useLowerKdf","setPassword","onSetPasswordSuccess","getOrganizationKeys","userId","getUserId","userEncKey","encryptedKey","rsaEncrypt","resetRequest","resetPasswordKey","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","authorizeUrl","buildAuthorizeUrl","sameWindow","preValidateSso","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","reloadOpenWindows","open","TwoFactorService","twoFactorService","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","Window","TwoFactorOptionsComponent","setSelectedProvider","TwoFactorProviderType","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","TwoFactorEmailRequest","TwoFactorProviders","Authenticator","description","priority","sort","premium","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","selectedTwoFactorProviderType","twoFactorProvidersData","has","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","provider","clearSelectedProvider","setProviders","twoFactorProviders2","clearProviders","getProviders","remember","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","ngOnDestroy","cleanupWebAuthn","providerData","get","authWebAuthn","Host","sig_request","Signature","submit_callback","f","sig","value","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithApiKey","BroadcasterService","TwoFactorComponent","broadcasterService","showNewWindowMessage","isFirefox","isSafari","snapshot","paramMap","isLinux","unsubscribe","anotherMethod","os","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","newMasterPasswordHash","putUpdateTempPassword","UpdateTempPasswordComponent","masterPasswordScoreStyle","scoreWidth","Color","Text","Width","history","getHistory","clear","copy","password","copyOptions","copyToClipboard","SelectCopyDirective","onCopy","copyText","selection","getSelection","rangeCount","text","getRangeAt","stringEndPos","newLinePos","substring","ColorPasswordPipe","generateTemplate","character","templateGenerator","passwordArray","colorizedPassword","isSpecial","PasswordGeneratorHistoryComponent","back","showSelect","onSelected","showOptions","avoidAmbiguous","passTypeOptions","optionsResponse","getOptions","ambiguous","addHistory","sliderChanged","saveOptions","sliderInput","normalizeOptions","regenerate","select","toggleOptions","number","checked","PopOutComponent","show","expand","PolicyType","SendType","PasswordGeneratorComponent","addEditCipherInfo","getAddEditCipherInfo","cipherState","cipher","login","SendFileView","sizeName","fileSize","SendTextView","hidden","maskedText","SendView","accessId","notes","file","maxAccessCount","accessCount","revisionDate","deletionDate","expirationDate","disabled","hideEmail","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendService","BrowserPath","DateField","DatePreset","AddEditComponent","datePipe","sendService","onSavedSend","onDeletedSend","onCancelled","copyLink","disableSend","disableHideEmail","sendType","canAccessPremium","emailVerified","alertShown","typeOptions","File","sendLinkBaseUrl","getSendUrl","link","isDateTimeLocalSupported","editMode","sendId","setDates","policyAppliesToUser","DisableSend","SendOptions","getCanAccessPremium","getEmailVerified","loadSend","setDate","getDate","hasPassword","files","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","delete","deletePromise","deleteWithServer","typeChanged","sendData","togglePasswordVisible","StateService","datesChanged","datesForm","FormGroup","selectedDeletionDatePreset","FormControl","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","setValue","now","miliseconds","setTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toISOString","toTimeString","initialExpirationDate","twentyFourHour","field","noon","midnight","ams","pms","h","m","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","popOutWindow","EffluxDatesComponent","ControlContainer","useExisting","NgForm","SendAddEditComponent","isUnsupportedMac","showFileSelector","showFilePopoutMessage","showFirefoxFileWarning","showSafariFileWarning","showChromiumFileWarning","isChrome","appVersion","cancel","SearchService","indexedEntityId","SendComponent","searchService","loaded","refreshing","sends","filteredSends","searchPending","hasSearched","getAllDecrypted","onSuccessfulLoad","selectAll","refresh","applyFilter","searchTimeout","isSearchable","searchText","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","searchTextChanged","clearSelections","selectedAll","selectType","selectedType","searchSends","StopPropDirective","stopPropagation","SendListComponent","disabledByPolicy","onCopySendLink","onRemovePassword","onDeleteSend","selectSend","copySendLink","ComponentId","SendGroupingsComponent","popupUtils","changeDetectorRef","showLeftHeader","typeCounts","calculateTypeCounts","setBrowserSendTypeComponentState","restoredScopeState","restoreState","syncInProgress","loadedTimeout","run","detectChanges","saveState","addSend","showSearching","setBrowserSendComponentState","getBrowserSendComponentState","SendTypeComponent","applySavedState","getBrowserSendTypeComponentState","groupingTitle","successfully","refreshTimeout","routeDirection","DebounceNavigationService","navigationStartSub","events","NavigationStart","pairwise","lastNavigation","thisNavigation","navigationSuccessSub","NavigationEnd","lastNavigationSuccessId","navigationTrigger","ExcludedDomainsComponent","excludedDomains","savedDomains","getNeverDomains","uri","showCurrentUris","loadCurrentUris","loadCurrentUrisTimeout","addUri","removeUri","splice","validDomain","setNeverDomains","trackByFunction","index","item","toggleUriInput","uriSet","Set","currentUris","EventType","ExportService","EventService","UserVerificationService","VerificationType","exportService","eventService","userVerificationService","formBuilder","exportForm","group","format","secret","formatOptions","checkExportDisabled","DisablePersonalVaultExport","disable","encryptedFormat","warningDialog","verifyUser","getExportData","downloadFile","collectEvent","getExport","getFileName","prefix","collect","User_ClientExportedVault","csv","saveFile","disableRequestOTP","sentCode","processChanges","requestOTP","writeValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","enable","OTP","MasterPassword","NG_VALUE_ACCESSOR","multi","VerifyMasterPasswordComponent","OrganizationService","ExportScopeCalloutComponent","organizationService","organizationId","hasOrganizations","scopeConfig","scopeIdentifier","ExportComponent","FolderView","FolderService","folderService","onSavedFolder","onDeletedFolder","folder","folderId","FolderAddEditComponent","confirmed","ThemeType","UriMatchType","FoldersComponent","folders","folderSelected","addFolder","TotpService","OptionsComponent","totpService","disableBadgeCounter","enableAutoFillOnPageLoad","autoFillOnPageLoadDefault","disableAutoTotpCopy","disableContextMenuItem","disableAddLoginNotification","disableChangedPasswordNotification","dontShowCards","dontShowIdentities","showClearClipboard","defaultUriMatch","showGeneral","showAutofill","showDisplay","themeOptions","System","Light","Dark","Nord","SolarizedDark","uriMatchOptions","StartsWith","RegularExpression","Exact","clearClipboardOptions","autoFillOnPageLoadOptions","getEnableAutoFillOnPageLoad","getAutoFillOnPageLoadDefault","getDisableAddLoginNotification","getDisableChangedPasswordNotification","getDisableContextMenuItem","getDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","isAutoCopyEnabled","getDisableBadgeCounter","theme","getTheme","getDefaultUriMatch","clearClipboard","getClearClipboard","updateAddLoginNotification","setDisableAddLoginNotification","updateChangedPasswordNotification","setDisableChangedPasswordNotification","updateDisableContextMenuItem","setDisableContextMenuItem","updateAutoTotpCopy","setDisableAutoTotpCopy","updateAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","updateAutoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","updateDisableFavicon","updateDisableBadgeCounter","setDisableBadgeCounter","updateShowCards","setDontShowCardsCurrentTab","updateShowIdentities","setDontShowIdentitiesCurrentTab","saveTheme","setTheme","saveDefaultUriMatch","setDefaultUriMatch","saveClearClipboard","setClearClipboard","isPremium","price","refreshPromise","refreshIdentityToken","purchase","manage","PremiumComponent","currencyPipe","thePrice","priceString","ModalRef","_onCreated","Subject","_onClose","_onClosed","_onShow","_onShown","asObservable","onClose","onClosed","onShow","onShown","next","shown","result","lastResult","closed","created","onClosedPromise","toPromise","DynamicModalComponent","modalService","cd","focusTrapFactory","modalRef","ngAfterViewInit","loadChildComponent","childComponentType","setComponentParameters","componentRef","instance","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","resolveComponentFactory","modalContentRef","createComponent","destroy","getFocus","autoFocusEl","ViewContainerRef","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","DeviceType","ModalConfig","allowMultipleModals","ModalService","componentFactoryResolver","applicationRef","injector","modalList","factoryResolvers","modalCount","topModal","openViewRef","viewContainerRef","modalComponentRef","openInternal","insert","hostView","_","registerComponentFactoryResolver","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","pop","setupHandlers","backdrop","modalEl","dialogEl","className","zIndex","prepend","modals","closeElement","WeakMap","showPin","masterPassOnRestart","showMasterPassOnRestart","toggleVisibility","pinProtectedKey","encPin","setProtectedPin","setEncryptedPinProtected","SetPinComponent","form","vaultTimeout","custom","hours","CUSTOM_VALUE","MaximumVaultTimeout","vaultTimeoutPolicy","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","vaultTimeouts","validatorChange","getVaultTimeout","current","max","patchValue","every","onTouched","validate","control","policyError","registerOnValidatorChange","VaultTimeoutInputComponent","NG_VALIDATORS","RateUrls","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","SettingsComponent","biometric","previousVaultTimeout","showChangeMasterPass","showOnLocked","vaultTimeoutActions","saveVaultTimeout","action","getVaultTimeoutAction","vaultTimeoutAction","newValue","valid","setVaultTimeoutOptions","saveVaultTimeoutAction","option","vaultTimeoutActionSelectRef","updatePin","ref","clearPinProtectedKey","updateBiometric","granted","requestPermission","console","submitted","titleText","iconHtml","allowOutsideClick","setBiometricAwaitingAcceptance","toggleKey","race","dismiss","authenticateBiometric","catch","setBiometricUnlock","updateAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","lock","changePassword","createNewTab","twoStep","share","import","export","help","about","year","getFullYear","versionText","createTextNode","getApplicationVersion","fingerprint","getFingerprint","innerText","confirmButtonText","rate","deviceType","getDevice","ElementRef","CipherRepromptType","CipherType","OrganizationUserStatusType","SecureNoteType","LoginLinkedId","CardLinkedId","IdentityLinkedId","SyncComponent","lastSync","setLastSync","sync","syncPromise","last","getLastSync","toLocaleDateString","toLocaleTimeString","TabsComponent","showCurrentTab","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","cardholderName","expMonth","expYear","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","brand","subTitle","count","expiration","exp","formatYear","IdentityView","middleName","address1","address2","address3","city","postalCode","country","company","phone","ssn","username","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","LoginView","l","passwordRevisionDate","totp","uris","autofillOnPageLoad","hasUris","maskedPassword","canLaunch","some","u","hasTotp","find","SecureNoteView","n","CipherView","favorite","organizationUseTotp","edit","viewPassword","card","secureNote","attachments","fields","passwordHistory","collectionIds","deletedDate","reprompt","None","localData","Login","SecureNote","Card","Identity","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","linkedFieldI18nKey","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","getHost","hostnameOrUri","hostOrUri","isWebsite","CipherService","AuditService","CollectionService","PasswordRepromptService","FieldType","cipherService","auditService","collectionService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","collections","showCardNumber","showCardCode","cipherType","ownershipOptions","currentDate","allowPersonal","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","autofillOnPageLoadOptions","PersonalOwnership","myEmail","getSortFunction","o","enabled","status","Confirmed","writeableCollections","loadCollections","cipherId","setAddEditCipherInfo","loadCipher","Generic","organizationChanged","previousCipherId","Cipher_ClientViewed","restore","encryptCipher","saveCipher","editCollections","deleteCipher","restorePromise","restoreCipher","Cipher_ClientToggledPasswordVisible","toggleCardNumber","Cipher_ClientToggledCardNumberVisible","toggleCardCode","Cipher_ClientToggledCardCodeVisible","toggleUriOptions","loginUriMatchChanged","org","useTotp","checkPassword","checkPasswordPromise","passwordLeaked","matches","repromptChanged","Password","readOnly","softDeleteWithServer","restoreWithServer","FieldView","newField","showValue","showCount","linkedId","maskedValue","addFieldType","fieldType","eventType","addFieldTypeOptions","Hidden","Boolean","addFieldLinkedTypeOption","Linked","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","removeField","toggleFieldValue","Cipher_ClientToggledHiddenFieldVisible","drop","moveItemInArray","previousIndex","currentIndex","TrueFalseValueDirective","elementRef","trueValue","falseValue","propagateChange","onHostChange","ev","setProperty","forwardRef","AddEditCustomFieldsComponent","showAttachments","collectionId","collection","openAttachmentsInPopup","showAutoFillOnPageLoadOptions","destinationUrl","createUrlTree","currentBaseUrl","allowOwnershipOptions","BaseResponse","getResponseProperty","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","HCaptcha_SiteKey","statusCode","messages","lastSep","lastIndexOf","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","attachment","deleteCipherAttachment","downloading","canAccessAttachments","getAttachmentData","fetch","Request","cache","buf","arrayBuffer","decBuf","decryptFromBytes","hasEncKey","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","AttachmentsComponent","openedAttachmentsInPopup","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","deletedFilter","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","isSearching","searchCiphers","CipherListVirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","checkItemSizeCallback","onContentRendered","CipherListVirtualScroll","CdkFixedSizeVirtualScroll","checkAndUpdateItemSize","sampleItem","newItemSize","offsetHeight","_scrollStrategy","updateItemAndBufferSize","VIRTUAL_SCROLL_STRATEGY","useFactory","cipherListDir","deps","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","IconComponent","getIconsUrl","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","ActionButtonsComponent","onView","launchEvent","showView","userHasPremiumAccess","launchCipher","typeI18nKey","aType","protectedFields","showPasswordPrompt","displayTotpCopyButton","getCode","Cipher_ClientCopiedCardCode","view","CipherRowComponent","viewCipher","CiphersComponent","searchTypeSearch","preventSelected","getBrowserCipherComponentState","folderNode","getNested","node","nestedFolders","children","collectionNode","nestedCollections","setBrowserCipherComponentState","selectedTimeout","selectFolder","selectCollection","updateLastLaunchedDate","showGroupings","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","saveCollectionsWithServer","CollectionsComponent","AutofillService","CurrentTabComponent","autofillService","pageDetails","frameId","webExtSender","details","fillCipher","totpCode","totpTimeout","doAutoFill","doc","fillNewPassword","searchVault","closeOnEsc","getTabFromCurrentWindow","loginCiphers","otherTypes","getAllDecryptedForUrl","cardCiphers","identityCiphers","sortCiphersByLastUsedThenName","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","selectedFavorites","selectedTrash","selectedFolder","selectedFolderId","selectedCollectionId","setLoaded","collapsedGroupings","getCollapsedGroupings","loadFolders","getAllNested","selectFavorites","selectTrash","editFolder","collapse","grouping","idPrefix","isCollapsed","setCollapsedGroupings","GroupingsComponent","browserStateService","folderCounts","collectionCounts","deletedCount","noFolderListSize","hasLoadedAllCiphers","allCiphers","showNoFolderCiphers","noFolderCiphers","folderCount","getBrowserGroupingComponentState","replaceState","loadCiphers","favoriteCiphers","colId","filterDeleted","setBrowserGroupingComponentState","decCipher","PasswordHistoryComponent","onSharedCipher","organizations","allCollections","orgs","filterCollections","cipherView","orgName","shareWithServer","canSave","ShareComponent","replaceUrl","TokenService","tokenService","onEditCipher","onCloneCipher","passwordReprompted","cleanUp","totpUpdateCode","interval","getTimeInterval","totpTick","totpInterval","setInterval","promptPassword","clone","showPasswordCount","togglePasswordCount","launch","Cipher_ClientCopiedHiddenField","setTextDataOnDrag","dataTransfer","setData","downloadAttachment","clearInterval","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","toggleFieldCount","ColorPasswordCountPipe","ViewCustomFieldsComponent","ViewComponent","loadPageDetailsTimeout","loadPageDetails","doAutofill","fillCipherAndSave","loginUri","routes","redirectTo","pathMatch","component","runGuardsAndResolvers","NoRouteReuseStrategy","shouldDetach","store","handle","shouldAttach","retrieve","shouldReuseRoute","future","curr","AppRoutingModule","RouteReuseStrategy","useClass","RouterModule","useHash","onSameUrlNavigation","queryShown","position","optional","queryChildRoute","queryTranslate","direction","axis","to","boxShadow","speed","queryTranslateX","queryTranslateY","inSlideLeft","outSlideRight","inSlideUp","outSlideDown","inSlideDown","routerTransition","fromState","toState","StateVersion","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","AppComponent","sanitizer","lastActivity","activeUserId","runOutsideAngular","onmousedown","recordActivity","ontouchstart","onclick","onscroll","onkeypress","bitwardenPopupMainMessageListener","sendResponse","getValue","isOpera","reloadExtension","messageListener","urlAfterRedirects","getState","outlet","activatedRouteData","activatedRoute","setLastActive","sanitize","SecurityContext","enableHtml","trustedHtml","timeOut","iconClasses","cancelText","confirmText","timer","dialogId","AppIdService","FileUploadService","NotificationsService","ProviderService","SettingsService","StateMigrationService","StorageService","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","EnvironmentUrls","keyConnector","EncryptionPair","DataEncryptionPair","AccountData","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","AccountProfile","environmentUrls","pinProtected","AccountTokens","profile","tokens","WindowState","GlobalState","stateVersion","One","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","toIdentityToken","scope","client_id","deviceIdentifier","deviceName","twoFactorToken","twoFactorProvider","twoFactorRemember","ApiTokenRequest","clientSecret","grant_type","client_secret","ApiKeyResponse","apiKey","AttachmentResponse","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","PasswordHistoryResponse","lastUsedDate","CipherResponse","AttachmentUploadDataResponse","fileUploadType","cipherResponse","cipherMiniResponse","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","date","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","waitTimeDays","creationDate","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","EmergencyAccessViewResponse","EventResponse","providerId","groupId","policyId","providerUserId","providerOrganizationId","actingUserId","ipAddress","FolderResponse","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","SsoConfigApi","configType","keyConnectorEnabled","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxCollections","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","usersGetPremium","upgradeSortOrder","displaySortOrder","legacyYear","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","OrganizationResponse","businessName","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","billingEmail","plan","planType","seats","maxAutoscaleSeats","maxStorageGb","useGroups","useDirectory","useEvents","use2fa","useApi","useResetPassword","hasPublicAndPrivateKeys","SubscriptionResponse","storageName","storageGb","license","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","OrganizationSubscriptionResponse","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","OrganizationUserResponse","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","ProfileOrganizationResponse","usePolicies","useSso","useKeyConnector","selfHost","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","culture","securityStamp","PaymentResponse","userProfile","paymentIntentClientSecret","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","SendFileApi","SendTextApi","SendAccessResponse","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","SendFileUploadDataResponse","SyncResponse","TaxInfoResponse","taxId","taxIdType","line1","line2","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","fromUrlB64ToArray","excludeCredentials","extensions","pubKeyCredParams","rp","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","logoutCallback","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","postIdentityToken","Headers","Accept","identityToken","getClientType","qsStringify","getCredentials","method","responseJson","isJsonResponse","json","TwoFactorProviders2","clearTwoFactorToken","doAuthRefresh","getProfile","getUserBilling","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postPrelogin","isDev","getApiUrl","postEmailToken","postEmail","postPassword","postSetKeyConnectorKey","postSecurityStamp","deleteAccount","getAccountRevisionDate","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKeys","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","postUserApiKey","postUserRotateApiKey","postAccountRequestOTP","postAccountVerifyOTP","postConvertToKeyConnector","getFolder","postFolder","putFolder","deleteFolder","getSend","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","getCiphersOrganization","postCipher","postCipherCreate","postCipherAdmin","putCipher","putCipherAdmin","deleteCipherAdmin","deleteManyCiphers","deleteManyCiphersAdmin","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteCipherAdmin","putDeleteManyCiphers","putDeleteManyCiphersAdmin","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentLegacy","postCipherAttachmentAdminLegacy","deleteCipherAttachmentAdmin","postShareCipherAttachment","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","putPolicy","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","getPlans","postImportDirectory","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getSync","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getOrganization","getOrganizationBilling","getOrganizationSubscription","getOrganizationLicense","installationId","getOrganizationTaxInfo","getOrganizationSso","postOrganization","putOrganization","putOrganizationTaxInfo","postOrganizationLicense","postOrganizationLicenseUpdate","postOrganizationApiKey","postOrganizationRotateApiKey","postOrganizationSso","postOrganizationUpgrade","postOrganizationUpdateSubscription","postOrganizationSeat","postOrganizationStorage","postOrganizationPayment","postOrganizationVerifyBank","postOrganizationCancel","postOrganizationReinstate","deleteOrganization","postOrganizationKeys","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getEventsUrl","getUserPublicKey","getHibpBreach","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getToken","tokenNeedsRefresh","nativeFetch","postCreateSponsorship","sponsoredOrgId","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","getRefreshToken","doRefreshToken","getClientId","getClientSecret","doApiTokenRefresh","apiKeyRefresh","decodedToken","decodeToken","tokenResponse","setTokens","authed","hasResponse","alterHeaders","requestUrl","requestInit","FormData","tokenError","isTextResponse","Message","hasBaseUrl","typeHeader","storageService","getAppId","makeAndGetAppId","getAnonymousAppId","existingId","htmlStorageLocation","Local","guid","newGuid","save","hashBytes","fromBufferToHex","hashStart","hashEnding","breachedAccounts","limit","throttleKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","err","AuthResult","requiresCaptcha","DeviceRequest","appId","getDeviceString","pushToken","LogInStrategy","appIdService","captchaBypassToken","tokenRequest","startLogIn","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","accountInformation","addAccount","sub","hasPremiumPersonally","kdfType","setTwoFactorToken","createKeyPairForOldAccount","ApiLogInStrategy","getKeyConnectorUrl","getAndSetKey","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","fromUtf8ToUrlB64","PasswordLogInStrategy","localHashedPassword","makePreloginKey","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","PreloginRequest","logInStrategy","strategy","clearState","preloginResponse","startSessionTimeout","clearSessionTimeout","sessionTimeout","sequentialize","cacheKey","caches","getCache","argsCacheKey","AttachmentData","CardData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","CipherData","ph","AttachmentView","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","Attachment","orgKey","decValue","decryptToBytes","toAttachmentData","toCardData","toFieldData","toIdentityData","toLoginUriData","toLoginData","PasswordHistoryView","toPasswordHistoryData","toSecureNoteData","model","reduce","promise","decAttachment","decField","decPh","toCipherData","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","lastLaunched","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CipherWithIdRequest","CipherBulkShareRequest","CipherCollectionsRequest","CipherCreateRequest","CipherShareRequest","DomainMatchBlacklist","settingsService","fileUploadService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","decCiphers","hasKey","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","includeOtherTypes","defaultMatch","eqDomainsPromise","getEquivalentDomains","eqDomains","eqDomain","matchingDomains","domainUrlHost","urlHost","getAllFromApiForOrganization","getLastUsedForUrl","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","saveNeverDomain","upsert","attachmentPromises","shareAttachmentWithServer","encCipher","shareManyWithServer","encCiphers","unencryptedFile","reader","FileReader","readAsArrayBuffer","onload","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","adminRequest","uploadDataResponse","uploadCipherAttachment","legacyServerAttachmentFileUpload","fd","filepath","contentType","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","deleteManyWithServer","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","aName","bName","softDelete","setDeletedDate","softDeleteManyWithServer","clearDeletedDate","restoreManyWithServer","restores","attachmentView","attachmentResponse","theObj","modelProp","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","CollectionData","CollectionView","setDecryptedCollections","decryptMany","decCollections","getEncryptedCollections","decryptedCollections","getDecryptedCollections","nodes","collectionCopy","setEncryptedCollections","LogLevelType","ConsoleLogService","timersMap","debug","write","Debug","Info","warning","Warning","level","log","warn","time","label","hrtime","timeEnd","elapsed","EEFLongWordList","EncArrayBuffer","EncryptedObject","platformUtilService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","orgKeys","providerOrg","providerKey","getProviderKey","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","encOrgKeys","getEncryptedOrganizationKeys","rsaDecrypt","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","setLegacyEtmKey","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearKeys","salt","pbkdf2","protectedKeyCs","getEncryptedPinProtected","decKey","makeShareKey","shareKey","randomBytes","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","getKeyForEncryption","buildEncKey","plainValue","plainBuf","encObj","aesEncrypt","encValue","macLen","encBytes","privateKeyValue","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","encString","decipher","aesDecryptToBytes","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","getBiometricUnlock","getCryptoMasterKeyBiometric","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","compareFast","aesDecryptFast","aesDecrypt","legacyKey","getLegacyEtmKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","urlsSubject","setUrlsFromStorage","getNotificationsUrl","eventsUrl","getEnvironmentUrls","envUrls","formatUrl","setEnvironmentUrls","EventData","EventRequest","checkOnInterval","uploadEvents","uploadImmediately","orgIds","eventCollection","getEventCollection","setEventCollection","clearEvents","Field","LoginUri","toView","toDomain","Cipher","values","build","CipherWithIds","Collection","CollectionWithId","Event","humanReadableMessage","appIcon","appName","userName","userEmail","ip","Folder","FolderWithId","FileUploadType","getOrganizationExport","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","encrypted","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","foldersMap","exportCiphers","buildCommonCipher","collectionPromises","decCol","cipherPromises","collectionsMap","num","padCharacter","numString","login_uri","login_username","login_password","login_totp","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","toUTCString","searchParams","blobResponse","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","fromUtf8ToB64","blockIdList","xml","Version","month","day","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","FolderData","FolderRequest","setDecryptedFolders","getEncryptedFolders","decryptedFolders","getDecryptedFolders","noneFolder","folderCopy","setEncryptedFolders","updates","cId","OrganizationUserType","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","setUsesKeyConnector","userNeedsMigration","loggedInUsingSso","getIsExternal","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","userKeyResponse","keyArr","Admin","Owner","isProviderUser","pubKey","privKey","setPasswordRequest","setConvertAccountRequired","setConvertAccountToKeyConnector","getConvertAccountToKeyConnector","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","connected","inactive","reconnectTimer","signalrConnection","off","withUrl","accessTokenFactory","skipNegotiation","transport","withHubProtocol","on","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","reconnectFromActivity","disconnectFromInactivity","notification","isAuthenticated","payloadUserId","UserId","myUserId","syncUpsertCipher","syncDeleteCipher","syncUpsertFolder","syncDeleteFolder","syncUpsertSend","syncDeleteSend","Organization","canAccess","isManager","Manager","isAdmin","isOwner","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","getOrganizations","getByIdentifier","setOrganizations","canManageSponsorships","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","minSpecial","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","PasswordGenerator","currentPolicy","useUpper","useLower","minNumbers","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decrypted","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","setDecryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","getEncryptedPolicies","policy","getPolicyForOrganization","policyType","setEncryptedPolicies","mapPoliciesFromToken","newPassword","toLocaleLowerCase","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","ResetPassword","policiesResponse","policyFilter","filteredPolicies","policySet","Accepted","isExcemptFromPolicies","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","indexing","searchableMinLength","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","results","isArray","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","SendFileData","SendTextData","SendData","SendFile","SendText","Send","cryptoKey","SendRequest","fileLength","setDecryptedSends","fileData","passwordHash","ArrayBuffer","encryptFileData","parseFile","getEncryptedSends","decSends","getDecryptedSends","legacyServerSendFileUpload","setEncryptedSends","Keys","setSettings","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","StorageLocation","State","globals","accounts","authenticatedAccounts","accountActivity","partialKeys","secureStorageService","stateMigrationService","stateFactory","useAccountCache","BehaviorSubject","createGlobals","hasBeenInited","accountDiskCache","needsMigration","migrate","initAccountState","syncAccountFromDisk","storedActiveUser","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","clean","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricLocked","biometricLocked","setBiometricText","biometricUnlock","defaultOnDiskLocalOptions","convertAccountToKeyConnector","cryptoMasterKey","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecodedToken","setDecodedToken","getDisableAutoTotpCopy","getDisableGa","disableGa","setDisableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","setEmail","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableGravitars","enableGravitars","setEnableGravitars","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getGlobalEnvironmentUrls","getEverBeenUnlocked","everBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getLastActive","legacyEtmKey","getLocale","setLocale","getLoginRedirect","loginRedirect","setLoginRedirect","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","organizationInvitation","setOrganizationInvitation","passwordGenerationOptions","setRefreshToken","rememberedEmail","getSecurityStamp","setSecurityStamp","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","ssoState","setVaultTimeout","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","decoded","fromUrlB64ToUtf8","clientIdClientSecret","setToken","setClientId","setClientSecret","clearToken","storedToken","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","email_verified","getName","getPremium","getIssuer","iss","amr","v1Keys","autoConfirmFingerprints","enableBiometric","enableGravatars","encPrivate","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","authenticationStatus","authenticatedUserIds","Four","OrganizationData","ProviderData","providerService","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","isEdit","localFolder","remoteFolder","shouldUpdate","localCipher","checkCollections","remoteCipher","localSend","remoteSend","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","getQueryParams","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","fromHexToArray","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","VerifyOTPRequest","buildRequest","verification","requestClass","alreadyHashed","validateInput","lockedCallback","loggedOutCallback","startCheck","checkVaultTimeout","isViewOpen","shouldLock","executeTimeoutAction","allowSoftLock","currentAction","isLoggedOut","vaultTimeoutSeconds","DecryptParameters","WebCryptoFunctionService","crypto","subtle","ua","isOldSafari","algorithm","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","fromByteStringToArray","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","parameters","dataBuffer","finish","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","fromBufferToByteString","subscribers","messageCallback","JslibServicesModule","LOCALE_ID","Injector","ContainerService","attachToWindow","attachToGlobal","bitwardenContainerService","SystemService","reloadCallback","reloadInterval","clearClipboardTimeout","clearClipboardTimeoutFunction","startProcessReload","cancelProcessReload","doRefresh","biometricLockedFingerprintValidated","clipboardValue","timeoutMs","clearSeconds","clipboardValueNow","readFromClipboard","clearing","clearPendingClipboard","BrowserComponentState","BrowserGroupingsComponentState","BrowserSendComponentState","AccountSettings","Account","groupings","AutofillScript","documentUUID","script","properties","metadata","autosubmit","AutoFillConstants","UsernameFieldNames","PasswordFieldIgnoreList","ExcludedAutofillTypes","CreditCardAutoFillConstants","CardAttributes","CardAttributesExtended","CardHolderFieldNames","CardHolderFieldNameValues","CardNumberFieldNames","CardNumberFieldNameValues","CardExpiryFieldNames","CardExpiryFieldNameValues","ExpiryMonthFieldNames","ExpiryYearFieldNames","CVVFieldNames","CardBrandFieldNames","MonthAbbr","YearAbbrShort","YearAbbrLong","IdentityAutoFillConstants","IdentityAttributes","FullNameFieldNames","FullNameFieldNameValues","TitleFieldNames","FirstnameFieldNames","MiddlenameFieldNames","LastnameFieldNames","EmailFieldNames","AddressFieldNames","AddressFieldNameValues","Address1FieldNames","Address2FieldNames","Address3FieldNames","PostalCodeFieldNames","CityFieldNames","StateFieldNames","CountryFieldNames","PhoneFieldNames","UserNameFieldNames","CompanyFieldNames","IsoCountries","afghanistan","albania","algeria","andorra","angola","anguilla","antarctica","argentina","armenia","aruba","australia","austria","azerbaijan","bahamas","bahrain","bangladesh","barbados","belarus","belgium","belize","benin","bermuda","bhutan","bolivia","botswana","brazil","bulgaria","burundi","cambodia","cameroon","canada","chad","chile","china","colombia","comoros","congo","croatia","cuba","cyprus","denmark","djibouti","dominica","ecuador","egypt","eritrea","estonia","ethiopia","fiji","finland","france","gabon","gambia","georgia","germany","ghana","gibraltar","greece","greenland","grenada","guadeloupe","guam","guatemala","guernsey","guinea","guyana","haiti","honduras","hungary","iceland","india","indonesia","iraq","ireland","israel","italy","jamaica","japan","jersey","jordan","kazakhstan","kenya","kiribati","kuwait","kyrgyzstan","latvia","lebanon","lesotho","liberia","liechtenstein","lithuania","luxembourg","macao","macedonia","madagascar","malawi","malaysia","maldives","mali","malta","martinique","mauritania","mauritius","mayotte","mexico","moldova","monaco","mongolia","montenegro","montserrat","morocco","mozambique","myanmar","namibia","nauru","nepal","netherlands","nicaragua","niger","nigeria","niue","norway","oman","pakistan","palau","panama","paraguay","peru","philippines","pitcairn","poland","portugal","qatar","reunion","romania","rwanda","samoa","senegal","serbia","seychelles","singapore","slovakia","slovenia","somalia","spain","sudan","suriname","swaziland","sweden","switzerland","taiwan","tajikistan","tanzania","thailand","togo","tokelau","tonga","tunisia","turkey","turkmenistan","tuvalu","uganda","ukraine","uruguay","uzbekistan","vanuatu","venezuela","vietnam","yemen","zambia","zimbabwe","IsoStates","alabama","alaska","arizona","arkansas","california","colorado","connecticut","delaware","florida","hawaii","idaho","illinois","indiana","iowa","kansas","kentucky","louisiana","maine","maryland","massachusetts","michigan","minnesota","mississippi","missouri","montana","nebraska","nevada","ohio","oklahoma","oregon","pennsylvania","tennessee","texas","utah","vermont","virginia","washington","wisconsin","wyoming","IsoProvinces","alberta","manitoba","ontario","quebec","saskatchewan","getFormsWithPasswordFields","formData","passwordFields","loadPasswordFields","formKey","forms","formPasswordFields","pf","uf","findUsernameField","passwords","totpPromise","getActiveTab","didAutofill","pd","fillScript","generateFillScript","skipUsernameOnlyFill","onlyEmptyFields","onlyVisibleFields","delay_between_operations","skipLastUsed","Cipher_ClientAutofilled","doAutoFillActiveTab","fromCommand","lastLaunchedCipher","filledFields","fieldNames","hasValue","opid","viewable","matchingIndex","findMatchingFieldIndex","matchingField","fillByOpid","generateLoginFillScript","generateCardFillScript","generateIdentityFillScript","usernames","setFillScriptForFocus","passwordFieldsForForm","passField","elementNumber","fieldIsFuzzyMatch","fillFields","forCustomFieldsOnly","isExcludedType","attr","isFieldMatch","makeScriptAction","selectInfo","siOptions","fieldAttrsContain","maxLength","colonIndex","fullMonth","fullYear","partYear","makeScriptActionWithValue","containsVal","doesContain","filledState","stateLower","isoState","filledCountry","countryLower","isoCountry","excludedTypes","containsOptions","checkValueContains","cipherData","dataProp","fieldProp","dataValue","doFill","canBeHidden","canBeReadOnly","mustBeEmpty","isPassword","valueIsLikePassword","cleanedValue","readonly","htmlID","htmlName","placeholder","autoCompleteType","passwordField","withoutForm","usernameField","names","fieldPropertyIsPrefixMatch","fieldPropertyIsMatch","property","separator","sepIndex","fieldVal","regexParts","csvParts","csvVals","fuzzyMatch","lastField","lastPasswordField","ClientType","BrowserCryptoService","BrowserMessagingService","subscriber","arg","BrowserMessagingPrivateModeBackgroundService","DialogPromiseExpiration","BrowserPlatformUtilsService","clipboardWriteCallback","biometricCallback","showDialogResolves","passwordDialogResolves","deviceCache","prefersColorSchemeDark","matchMedia","opr","addons","Browser","isEdge","isVivaldi","isMacAppStore","isPopupOpen","sidebarView","sidebarViewName","lockTimeout","PublicKeyCredential","bodyIsHtml","clearMs","clipboard","writeText","clipboardData","queryCommandSupported","textarea","textContent","execCommand","readText","resolveDialogPromise","resolvePasswordDialogPromise","canceled","resolveObj","tryResolve","getBrowserInfo","sidebarAction","getDefaultSystemTheme","onDefaultSystemThemeChange","getEffectiveTheme","BrowserStorageService","chromeStorageApi","storage","local","keyedObj","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","getMessage","checkSafari","CommandsBackground","main","processCommand","commandToRetry","shortcut","commands","onCommand","generatePasswordToClipboard","autoFillLogin","openPopup","getTabFromCurrentWindowId","retryMessage","tabSendMessageData","collectPageDetailsForContentScript","ContextMenusBackground","noopCommandSuffix","contextMenus","onClicked","menuItemId","getClickedElement","parentMenuItemId","cipherAction","startAutofillPage","Cipher_ClientCopiedPassword","totpValue","loginToAutoFill","IdleBackground","notificationsService","idleTimer","idleState","idle","idleHandler","newState","onStateChanged","setDetectionInterval","pollIdle","handler","queryState","NativeMessagingBackground","runtimeBackground","resolver","secureSetupResolve","onAdded","connect","port","connecting","connectedCallback","disconnect","sharedSecret","validatingFingerprint","showFingerprintDialog","showWrongUserDialog","onDisconnect","timestamp","encryptMessage","secureCommunication","getResponse","rawMessage","abs","processMessage","sendUnencrypted","NotificationQueueMessageType","NotificationBackground","notificationQueue","cleanupNotificationQueue","getDataForTab","responseCommand","addLogin","changedPassword","removeTabFromNotificationQueue","saveOrUpdateCredentials","saveNever","checkNotificationQueue","doNotificationQueueCheck","currentTab","expires","tabDomain","AddLogin","typeData","isVaultLocked","wasVaultLocked","ChangePassword","loginInfo","loginDomain","normalizedUsername","disabledAddLogin","allowPersonalOwnership","pushAddLoginToQueue","usernameMatches","pushChangePasswordToQueue","changeData","currentPassword","passwordMatches","queueMessage","changePasswordMessage","getDecryptedCipherById","updateCipher","createNewCipher","addLoginMessage","loginModel","newCipher","RuntimeBackground","systemService","pageDetailsToAutoFill","onInstalledReason","lockedVaultPendingNotifications","onInstalled","reason","checkOnInstalled","backgroundMessageListener","isPrivateMode","bitwardenBackgroundMessageListener","closeLoginTab","focusSpecifiedTab","setIcon","refreshBadgeAndMenu","logout","reseedStorage","autofillTimeout","autofillPage","referrer","TabsBackground","notificationBackground","onActivated","activeInfo","onReplaced","addedTabId","removedTabId","onReplacedRan","onUpdated","changeInfo","onUpdatedRan","WebRequestBackground","pendingAuthRequests","webRequest","onAuthRequired","requestId","resolveAuthCredentials","onCompleted","completeAuthRequest","onErrorOccurred","authCredentials","WindowsBackground","onFocusChanged","MainBackground","menuOptionsLoaded","nativeMessagingBackground","vaultTimeoutServiceCallbacks","locked","reloadProcess","forceWindowReload","commandsBackground","tabsBackground","contextMenusBackground","idleBackground","webRequestBackground","windowsBackground","that","backgroundMessagingService","bootstrap","getPrivateModeWindows","actionSetIcon","browserAction","onWindowCreated","suffix","forLocked","menuDisabled","contextMenusRemoveAll","buildContextMenu","loadMenuAndUpdateBadgeForNoAccessState","contextMenuReady","buildingContextMenu","contextMenusCreate","contexts","parentId","contextMenuEnabled","loadMenuAndUpdateBadge","actionSetBadgeBackgroundColor","loadLoginContextMenuOptions","theText","loadNoLoginsContextMenuOptions","sidebarActionSetBadgeText","browserActionSetBadgeText","getActiveTabs","loadContextMenuOptions","noLoginsMessage","idSuffix","sanitizeContextMenuTitle","override","syncInternal","lastSyncAgo","scheduleNextSync","syncTimeout","removeAll","theAction","setBadgeBackgroundColor","color","setBadgeText","setTitle","BrowserMessagingPrivateModePopupService","LockGuardService","PasswordRepromptComponent","PopupSearchService","mainSearchService","consoleLogService","UnauthGuardService","mainBackground","localBgService","createLocalBgService","bitwardenMain","getBgService","service","ServicesModule","APP_INITIALIZER","screen","availHeight","htmlEl","documentElement","sysTheme","bwTheme","platform","screenLeft","screenTop","registerLocaleData","AppModule","CurrencyPipe","DatePipe","A11yModule","BrowserAnimationsModule","BrowserModule","DragDropModule","FormsModule","ReactiveFormsModule","ScrollingModule","forRoot","maxOpened","autoDismiss","closeButton","positionClass","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}